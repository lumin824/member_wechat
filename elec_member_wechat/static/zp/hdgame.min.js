if (typeof HdGame == "undefined") {
    HdGame = {}
}(function (b) {
    b.isUrl = function (h, g) {
        if (typeof g == "undefined") {
            g = true
        }
        if (g && h.length >= 1 && h.charAt(0) == "/") {
            return true
        }
        if (g && h.length >= 1 && h.charAt(0) == "#") {
            return true
        }
        var f = /^(\w+:).+/;
        var e = f.test(h);
        return e
    };
    b.fixUrl = function (e, f) {
        if (b.isUrl(e, f)) {
            return e
        }
        return "http://" + e
    };
    b.encodeHtml = function (e) {
        return e && e.replace ? (e.replace(/&/g, "&amp;").replace(/ /g, "&nbsp;").replace(/\b&nbsp;+/g, " ").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\\/g, "&#92;").replace(/\'/g, "&#39;").replace(/\"/g, "&quot;").replace(/\n/g, "<br/>").replace(/\r/g, "")) : e
    };
    b.encodeHtmlAttr = function (e) {
        return e && e.replace ? (e.replace(/\"/g, "&#x22;").replace(/\'/g, "&#x27;").replace(/</g, "&#x3c;").replace(/>/g, "&#x3e;").replace(/&/g, "&#x26;")).replace(/\\/g, "&#5c;") : e
    };
    b.encodeUrl = function (e) {
        return typeof e === "undefined" ? "" : encodeURIComponent(e)
    };
    b.decodeHtml = function (e) {
        return e && e.replace ? (e.replace(/&nbsp;/gi, " ").replace(/&lt;/gi, "<").replace(/&gt;/g, ">").replace(/&#92;/gi, "\\").replace(/&#39;/gi, "'").replace(/&quot;/gi, '"').replace(/\<br\/\>/gi, "\n").replace(/&amp;/gi, "&")) : e
    };
    b.decodeUrl = function (e) {
        return typeof e === "undefined" ? "" : decodeURIComponent(e)
    };
    b.checkCharacterLen = function (e, j) {
        var l = $.type(j) == "string" ? j : j.val();
        var k = l.replace(/[^\x00-\xff]/g, "**");
        var h = k.trim().length;
        var g = 0;
        for (var f = 0; f < h; f++) {
            g++
        }
        return g > e
    };
    b.checkTextLength = function (q, h, m) {
        var j;
        if (m) {
            j = h
        } else {
            j = h.val()
        }
        var o = j.replace(/[^\x00-\xff]/g, "**");
        var f = o.length;
        if (f < q) {
            return {
                isOverflow: false
            }
        }
        var l = o.substr(0, q);
        var k = 0;
        var n = "";
        for (var g = 0; g < l.length; g++) {
            var e = l.substr(g, 1);
            if (e == "*") {
                k++
            }
        }
        var p = 0;
        if (k % 2 == 0) {
            p = k / 2 + (q * 1 - k);
            n = j.substr(0, p)
        } else {
            p = (k - 1) / 2 + (q * 1 - k);
            n = j.substr(0, p)
        }
        if (m) {
            return {
                isOverflow: true,
                returnValue: n
            }
        } else {
            h.val(n)
        }
    };
    b.fadOut = function (f, g) {
        if (f.is(":visible")) {
            g && g();
            return
        }
        f.css("opacity", 0);
        f.show();
        f.addClass("poupFadIn");
        setTimeout(function () {
            f.removeClass("poupFadIn");
            f.css("opacity", 1);
            g && g()
        }, 200)
    };
    b.fadIn = function (f, g) {
        if (f.is(":hidden")) {
            g && g();
            return
        }
        f.css("opacity", 1);
        f.addClass("poupFadOut");
        setTimeout(function () {
            f.hide();
            f.removeClass("poupFadOut");
            f.css("opacity", 1);
            g && g()
        }, 200)
    };
    b.statusMsg = function (g, f, j, e, m) {
        var l = "",
            k;
        var h = false;
        if (typeof g === "string") {
                l = g
            } else {
                if (g === 1) {
                    h = false;
                    l = "活动尚未开始";
                    k = "开始时间为" + g_config.startTime
                } else {
                    if (g === 3) {
                        h = false;
                        l = "活动已结束";
                        k = "请关注期待下次活动";
                    } else {
                        if ((g === 4 || (g == 6 && g_config.style != 50)) && g_config.showHelpGuide) {
                            if (helpType == 2) {
                                h = true;
                                l = "<span style='padding-bottom: 1em;display: inline-block;'>你今天已经没有抽奖机会了</span><br/><span style='display: inline-block;'>把活动传递给好友将获得<span>" + addDrawTime + "</span>次抽奖机会<br/></span>(仅限每天第一次传递)"
                            } else {
                                if (helpType == 3) {
                                    h = true;
                                    l = "<span style='padding-bottom: 1em;display: inline-block;'>你今天已经没有抽奖机会了</span><br/><span style='display: inline-block;'>每成功邀请一位好友参与，当天将额外获得<span>" + addDrawTime + "</span>次抽奖机会<br/><span>（今天还能获得" + remainHelpNum + "次抽奖机会）</span>"
                                }
                            }
                        } else {
                            if (g === 4) {
                                h = true;
                                l = "您今天已经没有抽奖机会了";
                                k = "明天可继续抽奖哦";
                                if (!j) {
                                    j = "14rem"
                                }
                            } else {
                                if (g === 6) {
                                    h = true;
                                    l = "您的抽奖机会已经用完";
                                } else {
                                    if (g === 5) {
                                        h = false;
                                        l = "未授权用户无法进行游戏。"
                                    } else {
                                        if ((g == 7 || g == 8) && g_config.showHelpGuide) {
                                            h = true;
                                            if (helpType == 2) {
                                                h = true;
                                                l = "<span style='padding-bottom: 1em;display: inline-block;'>你今天已经没有参与机会了</span><br/><span style='display: inline-block;'>把活动传递给好友将获得<span>" + addDrawTime + "</span>次参与机会<br/></span>(仅限每天第一次传递)"
                                            } else {
                                                if (helpType == 3) {
                                                    h = true;
                                                    l = "<span style='padding-bottom: 1em;display: inline-block;'>你今天已经没有参与机会了</span><br/><span style='display: inline-block;'>每成功邀请一位好友参与，当天将额外获得1次参与机会<br/><span>（今天还能获得" + remainHelpNum + "次参与机会）</span>"
                                                }
                                            }
                                        } else {
                                            if (g === 7) {
                                                h = true;
                                                l = "您今天已经没有参与机会了";
                                                k = "明天可继续参与哦";
                                            } else {
                                                if (g === 8) {
                                                    h = true;
                                                    l = "您的参与机会已经用完";
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        if (k && typeof f !== "string") {
                f = k
            }
        b.showMsg(l, f, e, m, h)
    };
    b.showMsg = (function () {
        var h = '<div class="weui-mask" style="z-index:5000"></div><div class="weui-dialog"><div class="weui-dialog__bd"><span id="statusTip-msg"></span><br/><span id="sTime"></span></div><div class="weui-dialog__ft"><a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_primary">知道了</a></div></div>';
        var e = $(h);
        var f = e.find("#statusTip-msg");
        var g = e.find("#sTime");
        var j = false;
        return function (n, l, k, o, m) {
            f.html(n);
            k && e.find(".weui-dialog__btn").text(k);
            if (typeof l === "string") {
                g.text(l)
            } else {
                if (l) {
                    g.hide()
                } else {
                    g.show()
                }
            }
            if (!j) {
                $("body").append(e);
                j = true
            }
            $(".weui-dialog__btn").one("touchstart", function () {
                o && o();
                b.fadIn(e, function () {
                    e.remove();
                    j = false
                });
                return false
            })
        }
    })();
    b.showMsgToast = function (j, e, g, h) {
        var f = {
            bodyMsg: j,
            sTime: e,
            className: g,
            primaryBtnFn: h
        };
        return b.showMsgToast2(f)
    };
    b.showMsgToast2 = function (g) {
        var h = $.extend({
            headMsg: "",
            bodyMsg: "",
            hasHead: false,
            isTwoFootBtn: false,
            primaryBtnText: "知道了",
            defaultBtnText: "取消",
            primaryBtnFn: null,
            defaultBtnFn: null
        }, g);
        var j = '<div class="toast" style="z-index: 2000; position: relative; display: none;"><div class="weui-mask" style="z-index: 2000;"></div><div class="weui-dialog" style="z-index: 2000;">';
        h.hasHead ? j += '<div class="weui-dialog__hd"><strong class="weui-dialog__title">' + h.headMsg + "</strong></div>" : "";
        j += '<div class="weui-dialog__bd">' + h.bodyMsg + '</div><div class="weui-dialog__ft">';
        h.isTwoFootBtn ? j += '<a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_default">' + h.defaultBtnText + "</a>" : "";
        j += '<a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_primary">' + h.primaryBtnText + "</a></div></div></div>";
        var e = $(j);
        $("body").append(e);
        e.fadeIn(200);
        var f;
        e.find(".weui-dialog__btn_primary").off(".primaryBtn").on("touchstart.primaryBtn", function () {
            f = h.primaryBtnFn && h.primaryBtnFn();
            if (f != "stop") {
                e.fadeOut(200, function () {
                    e.remove()
                })
            }
        });
        e.find(".weui-dialog__btn_default").off(".defaultBtn").on("touchstart.defaultBtn", function () {
            h.defaultBtnFn && h.defaultBtnFn();
            e.fadeOut(200, function () {
                e.remove()
            })
        });
        return e
    };
    b.showSuccessToast = function (h, f) {
        f = f || 2000;
        $("#toast").remove();
        var g = '<div id="toast" style="z-index: 5000; position: relative; display: none;"><div class="weui-mask_transparent"></div><div class="weui-toast"><i class="weui-icon-success-no-circle weui-icon_toast"></i><p class="weui-toast__content">' + h + "</p></div></div>";
        var e = $(g);
        $("body").append(e);
        e.fadeIn(150);
        setTimeout(function () {
            e.fadeOut(150, function () {
                e.remove()
            })
        }, f)
    };
    b.getLevelName = function (f) {
        var e = g_config.style == 67;
        switch (parseInt(f)) {
        case 1:
            return e ? "商品一" : "一等奖";
        case 2:
            return e ? "商品二" : "二等奖";
        case 3:
            return e ? "商品三" : "三等奖";
        case 4:
            return e ? "商品四" : "四等奖";
        case 5:
            return e ? "商品五" : "五等奖";
        case 6:
            return e ? "商品六" : "六等奖";
        case 7:
            return e ? "商品七" : "七等奖";
        case 8:
            return e ? "商品八" : "八等奖";
        case 900:
            return "安慰奖"
        }
    };
    b.getStatusName = function (e) {
        switch (e) {
        case 0:
            return "未领取";
        case 1:
            return "已核销";
        case 2:
            return "未核销";
        case 3:
            return "已过期";
        case 4:
            return "已作废";
        case 5:
            return "已失效"
        }
    };
    (function () {
        var g = null;
        _lastWrap = null,
        _stop = function (h) {
            if (h) {
                if (h.data("_guide")) {
                    h.data("_guide").remove();
                    h.removeData("_guide")
                }
            } else {
                if (g) {
                    g.remove();
                    g = null;
                    _lastWrap && _lastWrap.removeData("_guide")
                }
            }
        };
        var f = function (m, o, p) {
            var j = $('<div class="ball-scale-multiple"><div></div><div></div><div></div></div>');
            if (m.css("position") === "static") {
                m.css("position", "relative")
            }
            if (typeof o === "object" && typeof o.x !== "undefined" && typeof o.y !== "undefined" && typeof o.w !== "undefined" && typeof o.h !== "undefined") {
                var n = Math.min(o.w, o.h) * (p || 1);
                j.children().css({
                    width: n,
                    height: n
                });
                j.css({
                    left: o.x + (o.w - n) / 2,
                    top: o.y + (o.h - n) / 2
                })
            } else {
                p = p || 0.8;
                var h = m.outerHeight();
                var k = m.outerWidth();
                var l = (o === "w" ? k / 2 : (o === "h" ? h / 2 : (o === "min" ? Math.min(h, k) / 2 : Math.max(h, k) / 2))) * p;
                j.css({
                    left: k / 2 - l,
                    top: h / 2 - l
                });
                j.children().css({
                    width: 2 * l,
                    height: 2 * l
                })
            }
            m.append(j);
            g = j;
            m.data("_guide", j);
            _lastWrap = m
        };
        var e = {
            play: f,
            stop: _stop
        };
        b.Guide = e
    })();
    b.homePoup = function (e) {
        if (e == 1) {
            $("#rankBox").show();
            if (g_config.showSkillSup) {
                g_config.localPoupPage = 4
            }
        } else {
            if (e == 3) {
                $("#awardBox").show();
                if (g_config.showSkillSup) {
                    g_config.localPoupPage = 2
                }
            } else {
                if (e == 4) {
                    $("#regAwardBox").show();
                    if (g_config.showSkillSup) {
                        g_config.localPoupPage = 3
                    }
                }
            }
        }
        if (g_config.createTime < 1494376826000) {
            $("#poupInfoBox").show();
            if (g_config.showSkillSup) {
                g_config.localPoupPage = 1
            }
        }
    };
    b.poupAjaxComplete = function () {
        var e = $(".ajaxLoadBar");
        e.addClass("ajaxComplete");
        $(".ajaxLoadBg").hide();
        setTimeout(function () {
            e.removeClass("ajaxLoad");
            e.removeClass("ajaxComplete")
        }, 500)
    };
    (function () {
        var r = {
            rankUrl: "",
            awardUrl: "",
            getRegAwardUrl: "",
            getStoreUrl: "",
            mhaveScore: 0,
            openId: "",
            gameId: 0,
        };
        var j = {
            menuLen: "",
            slideBarWidth: "",
            slideBarMaxWidth: "",
            marginLeft: false,
            hasInitEvent: false,
        };
        typeof g_config !== "undefined" && (g_config.firstTouchRank = g_config.firstTouchAward = g_config.firstTouchWinList = true);
        var q = {
            isLoad: false,
            isRankAll: false,
            hasLoadAll: false,
            start: 0,
            num: 0,
            limit: 99,
            delay: 500,
            close: function () {
                this.isClose = true;
                this.isRankAll = false;
                this.hasLoadAll = false;
                this.num = this.start = 0
            },
            getRankData: function (s) {
                if (q.isLoad || q.isClose || q.isRankAll || q.hasLoadAll) {
                    return
                }
                s = $.extend({
                    init: null,
                    success: null,
                    error: null,
                }, s);
                s.init && s.init();
                q.isLoad = true;
                $.ajax({
                    type: "post",
                    url: r.rankUrl + "&start=" + q.start + "&limit=" + q.limit + "&playerId=" + g_config.playerId,
                    error: function () {
                        s.error && s.error();
                        if (q.num == 0) {
                            b.poupAjaxComplete()
                        }
                        q.isLoad = false
                    },
                    success: function (u) {
                        var v = $.parseJSON(u);
                        s.success && s.success(v);
                        if (v.isRankAll) {
                            q.hasLoadAll = true
                        }
                        if (q.num == 0) {
                            b.poupAjaxComplete()
                        }
                        var t = function () {
                            q.creatRankList(v);
                            q.isLoad = false;
                            q.num++;
                            q.start = q.num * (q.limit + 1);
                            hg.fire("updateRankList", v)
                        };
                        q.delay ? setTimeout(t, q.delay) : t();
                        if (q.num == 0) {
                            g_config.firstTouchRank = false
                        }
                        b.hideLoadToast(90)
                    }
                })
            },
            creatRankList: function (s) {
                var y = s.rankList;
                var v = s.rank;
                var u = $("#rankInfoBox");
                if (v == 0) {
                    $("#rank").text("无")
                } else {
                    $("#rank").text(v + "位")
                }
                if (y.length == 0) {
                    $("#noRank").show()
                } else {
                    $("#rankMain").show();
                    for (var w = 0; w < y.length; w++) {
                        if (q.start + w + 1 >= rankShowNum) {
                            q.isRankAll = true
                        }
                        var D = y[w].info.length > 0 ? $.parseJSON(y[w].info).headImg : null;
                        var t = D == null ? "" : "src='" + D + "'";
                        var C = "";
                        if (g_config.isDoubleGame) {
                            var x = y[w].info.length > 0 ? $.parseJSON(y[w].info).headImgB : null;
                            var B = x == null ? "" : "src='" + x + "'";
                            C = '<img class="userImg" ' + B + " />"
                        }
                        var A = '<tr class="rankInfo"><td>No.' + (q.start + w + 1) + '</td><td><div><img class="userImg" ' + t + " />" + C + '</div></td><td class="userName">' + b.encodeHtml(y[w].name) + "</td><td >" + y[w].achievement + '<span class="scoreUnit">' + g_config.scoreUnit + "</span></td></tr>";
                        u.append(A)
                    }
                    if ((q.isRankAll || q.hasLoadAll) && v > rankShowNum) {
                        var t = g_config.headImg ? "src='" + g_config.headImg + "'" : "";
                        var z = '<tr class="rankInfo" style="line-height:0.85rem"><td colspan="4" style="padding-bottom:0.35rem">......</td></tr><tr class="rankInfo"><td>No.' + v + '</td><td><div><img class="userImg" ' + t + ' /></div></td><td class="userName">' + b.encodeHtml(g_config.userName) + "</td><td >" + (g_config.scoreType ? b.currentScore : parseInt(b.currentScore)) + '<span class="scoreUnit">' + g_config.scoreUnit + "</span></td></tr>";
                        u.append(z)
                    }
                }
            }
        };
        b.rankAjax = q;
        b.initChangePoup = function (s) {
            s && $.extend(r, s);
            j.menuLen = 0;
            $(".poupTitleBox .poupTitleMune").each(function () {
                if ($(this).css("display") == "block") {
                    $(this).removeClass("hide");
                    j.menuLen++
                } else {
                    $(this).addClass("hide")
                }
            });
            $("#awardBox").css("height", $("#poupInfoBox").height() - $(".poupHead").height());
            $(".popTabBox").css("width", 16 * g_rem * j.menuLen);
            var t = null;
            $(".poupTitleBox .poupTitleMune").not(".hide").each(function (x, z) {
                var w = $(this).attr("_flag");
                for (var y = 0; y < $("#poupInfoBox .poupMain").length; y++) {
                    var v = $("#poupInfoBox .poupMain").eq(y);
                    if (v.attr("_flag") == w) {
                        v.show();
                        if (t) {
                            t = t.add(v)
                        } else {
                            t = v
                        }
                        return
                    }
                }
            });
            var u = (100 / j.menuLen + "%");
            $("#poupInfoBox .poupMain").css("width", u);
            $("#poupInfoBox .poupMain").not(t).hide();
            $(".poupTitleBox .poupTitleMune,.poupTitleBox .slideBarTip").css("width", 13.25 / j.menuLen + "rem");
            j.slideBarWidth = parseInt($(".poupTitleBox .poupTitleMune").css("width"));
            j.slideBarMaxWidth = parseInt($(".poupTitleBox .slideBarTip").css("max-width"));
            if (j.slideBarWidth > j.slideBarMaxWidth) {
                j.marginLeft = true
            }
            $("#poupInfoBox .poupMain").height($("#poupInfoBox").height() - $(".poupHead").outerHeight() - g_rem * 0);
            if (!j.hasInitEvent) {
                p();
                j.hasInitEvent = true
            }
        };

        function p() {
            var u = "touchstart";
            var t = $(".poupTitleBox .poupTitleMune");
            t.on(u, function () {
                if (t.length == t.not(".hide").length) {
                    var w = $(this).index()
                } else {
                    var w = t.filter(":visible").index(this);
                    w = w < 0 ? 0 : w
                }
                var v = parseInt($(this).attr("_flag"));
                b.changePoup(v, w);
                b.removeAllEditLayer()
            });
            var s = $("#rankBox .poupMainInfo");
            s.scroll(function (v) {
                if ($("#rankHeight").height() * 2 / 3 <= s.height() + s.scrollTop()) {
                    q.getRankData({
                        init: function () {
                            b.showLoadToast("数据加载中", 90)
                        },
                    })
                }
            })
        }
        b.changePoup = function (B, z, x) {
            if (g_config.showSkillSup) {
                switch (B) {
                case 1:
                    g_config.localPoupPage = 4;
                    break;
                case 3:
                    g_config.localPoupPage = 2;
                    break;
                case 4:
                    g_config.localPoupPage = 3;
                    break;
                case 2:
                    g_config.localPoupPage = 1;
                    break
                }
            }
            q.isClose = false;
            var v = $("#ruleImg");
            if (g_config.style == 71) {
                var w = $("#ruleImgContainer")
            } else {
                var w = $("#ruleImg")
            }
            var t = w.position().left + v.width() / 2 + "px ";
            var s = w.position().top + v.height() / 2 + "px";
            $("#poupInfoBox").css({
                "transform-origin": t + s,
                "-webkit-transform-origin": t + s
            });
            $("#poupInfoBox").show();
            $(".poupTitleMune").removeClass("checked");
            if (B == 5 && r.hasReport == true) {
                $("#informResultBox h2").text("你已经投诉过了！");
                $("#informResultBox").show()
            } else {
                if (typeof z === "number") {
                    var y = $(".poupTitleMune").filter(":visible").eq(z);
                    y.addClass("checked");
                    B = parseInt(y.attr("_flag"))
                } else {
                    $(".poupTitleBox .poupTitleMune").filter(":visible").each(function (D, E) {
                        if ($.trim($(this).attr("_flag")) == B) {
                            z = D;
                            $(this).addClass("checked")
                        }
                    })
                }
            }
            if (j.marginLeft) {
                $(".poupSlideBar .slideBarTip").css("left", ((13.25 / j.menuLen) * z + (j.slideBarWidth - j.slideBarMaxWidth) / 40) + "rem")
            } else {
                $(".poupSlideBar .slideBarTip").css("left", (13.25 / j.menuLen) * z + "rem")
            }
            g(B, x);
            $(".popTabBox").css("left", -$(window).width() * z)
        };

        function g(t, s) {
            var v = $("#poupInfoBox").attr("class");
            var u = s;
            if (!u) {
                var v = $("#poupInfoBox").attr("class");
                if (v == "" || v == undefined) {
                    $("#poupInfoBox").addClass("enlarge")
                }
            } else {
                $("#poupInfoBox").addClass("retrans")
            }
            $(".gameBox,.home,.body").addClass("overflow-y-hidden");
            if (g_config.style != 55) {
                g_config.showSkillSup && $(".bottomSkill").hide()
            }
            $(".poupClose").off("click");
            setTimeout(function () {
                $(".poupClose").on("click", function (x) {

                    x.preventDefault();
                    x.stopPropagation();
                    g_config.firstTouchRank = true;
                    g_config.firstTouchAward = true;
                    g_config.firstTouchWinList = true;
                    q.close();
                    $("#rankInfoBox").html("");
                    $(".poupTitleMune").removeClass("checked");
                    $(".poupTitleMune").eq(0).addClass("checked");
                    var w = $("#poupInfoBox");
                    w.removeClass("enlarge").removeClass("retrans");
                    if (v == "retrans") {
                        w.hide()
                    }
                    if (s) {
                        w.hide()
                    }
                    if (g_config.style == 71) {
                        setTimeout(function () {
                            w.hide()
                        }, 500)
                    }
                    $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                    g_config.showSkillSup && $(".bottomSkill").show();
                    if (g_config.style == 60 || g_config.style == 45) {
                        if ($(".notFullLuckOne").is(":visible")) {
                            g_config.showSkillSup && $(".gameBgBox .bottomSkill").hide()
                        }
                    }
                    setTimeout(function () {
                        $(".popTabBox").css("left", 0);
                        $(".poupSlideBar .slideBarTip").css("left", (j.slideBarWidth - j.slideBarMaxWidth) / 40 + "rem")
                    }, 100);
                    hg.fire("hidePoup", t)
                })
            }, 300);
            if (t === 1) {
                e(t)
            } else {
                if (t === 2) {
                    k(t)
                } else {
                    if (t === 3) {
                        o(t)
                    } else {
                        if (t === 4) {
                            m(t)
                        } else {
                            if (t === 5) {
                                n(t)
                            }
                        }
                    }
                }
            }
            hg.fire("showPoup", t)
        }
        function e(x) {
            if (g_config.isDoubleGame) {
                $("#rankBox").addClass("isDoubleGame")
            }
            $("#rankBox .poupMainInfo").css("height", $("#rankBox").height() - $("#rankBox .attentionBox").height() - 18);

            if (g_config.firstTouchRank) {
                $(".ajaxLoadBg").show();
                $(".ajaxLoadBar").addClass("ajaxLoad");
                $("#noRank").hide();
                $("#rankMain").hide();
                q.getRankData()
            }
        }
        function k(s) {
            g_config.localPoupPage = 1;

            $("#directDrawInfoBox").find(".drawTotalFont").show()

            $("#explaiDrawInfoBox").find(".drawTotalFont").hide();
            $("#explaiDrawInfoBox").find(".chanceFont").show();
            $("#explaiDrawInfoBox").find(".everyOneFont").show()

            $("#ruleBox .poupMainInfo").css("height", $("#ruleBox").height() - $("#ruleBox .attentionBox").height() - 18);
            $("#ruleBox").show();
            $("#poupInfoBox").show();
            if ((!r.mhaveScore && g_config.style != 61 && g_config.style != 62) || g_config.style == 39 || g_config.style == 9 || g_config.style == 58 || g_config.style == 50) {
                $("#haveScore").hide()
            }
            if (gameType == 3 && g_config.isCheckPlayTimes && g_config.style != 63) {
                if (PlayInfo.isLimitPlay.show && (playTimesLimit == playTotalLimit)) {
                    $("#explainPlayInfoBox").find(".dayFont").hide();
                    $("#explainPlayInfoBox").find(".playTotalFont").hide();
                    $("#explainPlayInfoBox").find(".chanceFont").show();
                    $("#explainPlayInfoBox").find(".everyOneFont").show()
                }
                if (!PlayInfo.isLimitPlay.show) {
                    $("#explainPlayInfoBox").find(".playTotalFont").hide();
                    $("#explainPlayInfoBox").find(".chanceFont").show();
                    $("#explainPlayInfoBox").find(".everyOneFont").show()
                }
                $("#explainPlayInfoBox").show()
            } else {
                if (gameType == 3 && g_config.style == 51) {
                    $("#directDrawInfoBox").hide();
                    $("#explainPlayInfoBox").hide()
                } else {
                    $("#explainPlayInfoBox").hide()
                }
            }
            if (gameType != 0 && gameType != 5) {
                $("#directDrawInfoBox").hide()
            }
        }
        function f(t, s) {
            var u = t.repalce(/-/g, "/");
            u = new Date(u).getTime();
            return u > s
        }
        var o = function (s) {
            if (g_config.showSkillSup) {
                g_config.localPoupPage = 2
            }
            var u = new Array();
            var t = $("#awardInfo");
            $("#awardInfoBox").css("height", $("#awardBox").height() - $("#awardBox .attentionBox").height() - 18);
            $("#poupInfoBox,#awardBox").show();

            u.push("gameId=", r.gameId);
            u.push("&openId=", r.openId);
            if (g_config.isDoubleGame) {
                u.push("&openIdB=", b.otherOpenId)
            }
            if (g_config.firstTouchAward) {
                $(".ajaxLoadBg").show();
                $(".ajaxLoadBar").addClass("ajaxLoad");
                b.showLoadToast("数据加载中");
                $.ajax({
                    type: "post",
                    url: r.awardUrl,
                    data: u.join(""),
                    error: function () {
                        b.hideLoadToast();
                        b.poupAjaxComplete()
                    },
                    success: function (x) {
                        b.hideLoadToast();
                        b.poupAjaxComplete();
                        var v = x;//$.parseJSON(x);
                        b.awardList = v.list;
                        $("#Award_Round_Dot").hide();
                        if (v.success) {
                            b.showAwardDetail(v.list)
                        } else {
                            $("#awardInfo").html('<div style="line-height: 2.6rem; padding-left: 0.05rem;">暂无中奖纪录</div>')
                        }
                        g_config.userInfo = v.userInfo;
                        if (v.userInfo) {
                            var w = false;
                            if (v.userInfo.ausername || v.userInfo.aphone || v.userInfo.aadress) {
                                w = true
                            } else {
                                for (var y in v.userInfo) {
                                    if (/^aprop.*/.test(y) && v.userInfo[y] != null && v.userInfo[y] !== "") {
                                        w = true;
                                        break
                                    }
                                }
                            }
                            if (w && !g_config.isYKY) {
                                $("#awardContactInfo").show();
                                b.updateContactView(v.userInfo)
                            }
                        }
                        g_config.firstTouchAward = false
                    }
                })
            }
        };
        b.updateContactView = function (y) {
            var A = false;
            var w = $.parseJSON(g_config.contactNoDraw);
            if (w && typeof w[0] === "object") {
                $contactGroup = $("#awardContactInfo .contactGroup");
                $contactGroup.empty();
                for (var u = 0; u < w.length; u++) {
                    var z = w[u];
                    if (z.isOpen) {
                        var v = b.encodeHtml(z.name);
                        var t = y[z.key];
                        if (t != null && t != "") {
                            t = b.encodeHtml(t);
                            var x = '<div class="contactItem contact-' + z.key + ' hide" style="display: block;">' + v + "： <span>" + t + "</span></div>";
                            $contactGroup.append(x);
                            A = true
                        }
                    }
                }
            } else {
                if (y.ausername) {
                    $("#awardContactInfo .contactName").show();
                    $("#awardContactInfo .contactName span").text(y.ausername);
                    A = true
                }
                if (y.aphone) {
                    $("#awardContactInfo .contactPhone").show();
                    $("#awardContactInfo .contactPhone span").text(y.aphone);
                    A = true
                }
                var s = y.aadress && y.aadress.replace(/,/g, "");
                if (s) {
                    $("#awardContactInfo .contactAddress span").text(s);
                    $("#awardContactInfo .contactAddress").show();
                    A = true
                }
            }
            $("#awardContactInfo").toggle(A)
        };
        var h = function (s) {
            if (s._award || !s.awardInfo) {
                return
            }
            var t = g_config.$$awardTypeInfo;
            var u = s._award = $.parseJSON(s.awardInfo);
            u.$type = $.extend(true, {}, t.def, t[u.awardtype]);
            if (u.awardtype == 2 && r.afterWxCard) {
                $.extend(u.$type, u.$type[u.cashtype]);
                if (u.cashtype == 1) {
                    $.extend(u.$type, u.$type[u.onlinect])
                }
            }
            if (u.awardtype == 5) {
                if (typeof u.payment == "undefined") {
                    u.payment = 0
                }
                $.extend(u.$type, u.$type[u.payment])
            }
            if (typeof u.attention == "undefined") {
                u.attention = u.oct ? 2 : 1
            }
            u.$opqrc = u.opqrc;
            if (r.afterWxCard && u.$type.qrcode != "auto") {
                u.$opqrc = u.$type.qrcode
            } else {
                u.$type.btn = ""
            }
            if (u.genewxcard) {
                var v = !s.depositTime || s.depositTime >= new Date().getTime();
                u.$type.collect = v ? "放入微信卡包" : "打开微信卡券"
            }
            if (!s.awardCode) {
                s.awardCode = (s.custom && s.custom.length > 0) ? s.custom : (s.code ? s.code : s.code1);
                if (s.anwei) {
                    s.awardCode = (s.cusCode && s.cusCode.length > 0) ? s.cusCode : s.code1
                }
            }
            if (s.isTrash) {
                s.codeStatus = 4
            }
        };
        b.changeAwardStatus = function (t, s) {
            $.each(b.awardList, function (u, v) {
                if (v.code == t) {
                    v.codeStatus = s
                }
            });
            b.showAwardDetail(b.awardList)
        };
        b.showAwardDetail = function (v) {
            var u = $("#awardInfo");
            var w = "";
            var x = $("#resule-gift-sucImg").data("openCode");
            var z = null;
            for (var t = 0; t < v.length; t++) {
                var s = v[t];

                h(s);
                var y = s.anwei ? s.awardLevel : s.level;
                var A = b.getStatusName(s.codeStatus);
                if (s._award.genewxcard) {
                    $("#awardCollectionBtn").attr("isWxCard", true)
                }
                w += '<div id="codeInfo' + t + '" class="codeInfoBox' + (g_config.isYKY ? " isYKY" : "") + '" _level="' + y + '"><div class="goDetailIcon"></div><div class="djqImgBox"></div><div class="isEmptyAward ellipsis" style="width: 11rem;margin-left:0.6rem;font-size:0.7rem;"><span class="awardStyle"></span>：<span class="awardName"></span></div><div class="noPartnersBox"><div class="codeperiod" style="margin: 0.25rem 0.6rem;line-height:1.4rem;"><span class="awardTypeName"></span>：<span class="awardBgTime"></span> 至 <span class="awardEndTime"></span></div><div class="awardWrap"></div><div style="color: #ecb208;margin-left:0.6rem;">' + A + "</div></div></div>";
                if (x !== undefined && (x == s.awardCode || x == s._awardCode)) {
                    z = s
                }
            }
            console.log(w)
            u.html(w);
            $.each(v, function (B, C) {
                var E = C._award;
                var D = u.find("#codeInfo" + B);
                b.watch("awardList[0].style", C.awardStyle, function (F) {
                    D.find(".awardStyle").text(F)
                });
                b.watch("awardList[0].name", C[C.anwei ? "award" : "awardName"], function (F) {
                    D.find(".awardName").text(F)
                });
                if (!g_config.isYKY) {
                    b.watch("awardList[0].$type.deadline", E.$type.deadline, function (F) {
                        D.find(".awardTypeName").text(F)
                    });
                    b.watch("awardList[0].cbt", E.cbt, function (F) {
                        D.find(".awardBgTime").text(F.substring(0, 10).replace("-", ".").replace("-", "."))
                    });
                    b.watch("awardList[0].cet", E.cet, function (F) {
                        D.find(".awardEndTime").text(F.substring(0, 10).replace("-", ".").replace("-", "."))
                    })
                }
                D.data("data", C)
            });
            if (z) {
                b.openAwardDetail(z);
                $("#resule-gift-sucImg").removeData("openCode")
            }
        };
        b.openStoreLocation = function (t) {
            var u = $(t).parent().data("store");
            var s = $.parseJSON(u.point);
            wx.openLocation({
                latitude: s.lat,
                longitude: s.lng,
                name: u.name,
                address: u.address,
                scale: 22,
                infoUrl: ""
            })
        };
        b.openAwardDetail = function (H) {
            var L = $("#awardDetailBox");
            var B = $("#ticketDetailBox");
            var s = {};
             {
                if (!H || !H.awardInfo) {
                    H = $(this).data("data")
                }
                $(".codeInfoBox.checked").removeClass("checked");
                $(this).addClass("checked");
                h(H);
                s = H._award;
                g_config.award = H;
                g_config.wxAward = s;
                if (g_config.afterLinkModify) {
                    if ((b.shouldRegInfo(2, arguments, this) || b.shouldRegInfo(3, arguments, this) || b.shouldRegInfo(4, arguments, this))) {
                        return
                    }
                } else {
                    if (typeof s.continfo !== "undefined") {
                        if ((H && ((gameType == 0 || gameType == 4 || gameType == 5) && g_config.wxAward.oplink))) {
                            var J = s.continfo;
                            var v = J & 1;
                            var I = J & 2;
                            var M = J & 4;
                            var x = v && !g_config.awardUsername;
                            var E = I && !g_config.awardPhone;
                            var A = M && !g_config.awardAddress;
                            if (x || E || A) {
                                b.aUserInfo.show(arguments, this);
                                return
                            }
                        }
                    } else {
                        if (!g_config.awardUsername && !g_config.awardPhone && !g_config.awardAddress && g_config.award && ((gameType == 0 || gameType == 4) && g_config.wxAward.oplink)) {
                            b.aUserInfo.show(arguments, this);
                            return
                        }
                    }
                }
                if (g_config.isYKY) {
                    var G = "_loadYKY_" + H.awardCode;
                    if (b.openAwardDetail[G]) {
                        return
                    }
                    var u = $.parseJSON(H.prop);
                    var z = function (N) {
                        b.replaceUrlByTime();
                        window.open(N)
                    };
                    if (u && u.ykyurl) {
                        z(u.ykyurl)
                    } else {
                        if (!g_config.ykyRelationId) {
                            b.aUserInfo.show(arguments, this);
                            return
                        }
                        b.openAwardDetail[G] = $.ajax({
                            type: "post",
                            url: g_config.ajaxUrl + "hdgame_h?cmd=getYKYAwardUrl&gameId=" + r.gameId + "&openId=" + r.openId + "&code=" + H.awardCode + "&ykyRelationId=" + g_config.ykyRelationId,
                            error: function () {
                                b.showMsgToast("服务繁忙，请稍候重试");
                                b.hideLoadToast();
                                delete b.openAwardDetail[G]
                            },
                            success: function (O) {
                                b.hideLoadToast();
                                delete b.openAwardDetail[G];
                                var N = $.parseJSON(O);
                                if (N.success) {
                                    if (N.status !== 0) {
                                        H.prop = $.toJSON({
                                            ykyurl: N.data.url
                                        });
                                        z(N.data.url)
                                    }
                                } else {
                                    var P = N.data.failMessages;
                                    b.showMsgToast(P)
                                }
                            }
                        })
                    }
                    return
                }
                $("#codeStatusBox,#codeStatusInfo").show();
                $("#codeDetailInfoBox").hide();
                if (H.codeStatus == 4) {
                    $("#codeStatusBtn").html("已作废");
                    if (H.status == 5) {
                        $("#codeStatusInfo").html("微信检测到您有刷红包嫌疑，为保证公平公正<br>已取消您的领取资格")
                    } else {
                        $("#codeStatusInfo").html("商家已将该兑奖码设置为作废<br>详情请联系商家")
                    }
                } else {
                    if (H.codeStatus == 1) {
                        $("#codeStatusBtn").html("已核销");
                        $("#codeStatusInfo").hide();
                        if (s.genewxcard) {
                            $("#awardCollectionBtn").hide()
                        }
                    } else {
                        if (H.codeStatus == 5) {
                            $("#codeStatusBtn").html("已失效");
                            $("#codeStatusInfo").html("红包已失效，详细请联系商家")
                        } else {
                            if (H.codeStatus == 3) {
                                $("#codeStatusBtn").html("已过期");
                                $("#codeStatusInfo").hide()
                            } else {
                                if (H.theGiftDate < 0) {
                                    $("#codeStatusTips .giftNameA").text(s.$type.collect);
                                    $("#codeStatusTips .targetDateMin").text(Math.ceil((H.theGiftDate * -1) / (1000 * 60 * 60 * 24)));
                                    $("#codeStatusInfo").hide();
                                    $("#codeStatusBtn").html("未到兑奖时间").css("width", "5.5rem");
                                    $("#codeStatusTips").show()
                                } else {
                                    $("#codeStatusBox").hide();
                                    $("#codeDetailInfoBox").show()
                                }
                            }
                        }
                    }
                }
                var w = H.gameid || H.gameId;
                $("#awardCodeLayer,#awardDetailBox").find(".codeImg").attr("src", "qrCode?id=" + H.awardCode);
                L.find(".code,.copyCode").text(H.awardCode);
                $("#awardCodeLayer").find(".code").text(H.code);
                L.find(".code").attr("code", H.awardCode);
                L.find("#bottomCusBtnInfo").attr("href", "###").off(".cusBtn");
                L.find("#bottomCusBtnBox").canShow("codeStatus");
                if (r.afterWxCard) {
                    if (s.$type.sitetype == "url") {
                        if (s.awardtype == 5) {
                            L.find("#bottomCusBtnInfo").attr("href", g_config.redPacketUrl + "&redCode=" + H.awardCode);
                            if (H.codeStatus == 1 || H.codeStatus == 3) {
                                L.find("#bottomCusBtnBox").mustHide("codeStatus")
                            }
                        } else {
                            var t = b.fixUrl(s.cashsite);
                            if (/[?&]hd_code=djm\b/.test(t)) {
                                t = b.setUrlArg(t, ["hd_code", H.awardCode])
                            }
                            L.find("#bottomCusBtnInfo").attr("href", t)
                        }
                    } else {
                        if (s.$type.sitetype == "img") {
                            if (s.awardtype == 2 && s.cashtype == 1 && s.onlinect == 1) {
                                b.createQrImg($("#plAttentionPoup"), s.onlinewxnum);
                                b.createQrImg($("#newAttentionPoup"), s.onlinewxnum)
                            } else {
                                if ((s.awardtype == 2 && s.cashtype == 3) || s.awardtype == 5) {
                                    b.createQrImg($("#plAttentionPoup"), g_config.qrCodeUrl);
                                    b.createQrImg($("#newAttentionPoup"), s.attentionimg)
                                }
                            }
                            if (s.awardtype == 2 && s.cashtype == 3) {
                                L.find("#bottomCusBtnInfo").off(".cusBtn").on("click.cusBtn", function () {
                                    $("#plAttentionMask").show()
                                })
                            } else {
                                L.find("#bottomCusBtnInfo").off(".cusBtn").on("click.cusBtn", function () {
                                    console.log("2");
                                    $("#plAttentionMask").show()
                                })
                            }
                        }
                    }
                    if ((s.awardtype == 2 && s.cashtype == 2) || s.awardtype == 0) {
                        L.find("#bottomCusBtnInfo").off(".cusBtn").on("click.cusBtn", function () {
                            if (s.iscancelver) {
                                if (s.isverification) {
                                    b.statusMsg("该兑奖码已被核销！", "");
                                    return
                                }
                                if (s.isverOvertime) {
                                    b.statusMsg("该兑奖码已过期！", "");
                                    return
                                }
                                if (s.isverCancel) {
                                    b.statusMsg("该兑奖码已作废！", "");
                                    return
                                }
                                var O = {
                                    hasHead: true,
                                    headMsg: "请联系核销员确认核销",
                                    bodyMsg: '<div class="weui-cell" style="border: 1px solid #D5D5D6"><div class="weui-cell__bd"><input class="weui-input" type="text" placeholder="请输入核销码" style="color: #000"></div></div>',
                                    isTwoFootBtn: true,
                                    primaryBtnText: "确认核销",
                                    defaultBtnText: "取消",
                                    primaryBtnFn: function () {
                                        var Q = N.find(".weui-input").val().trim();
                                        if (Q == "") {
                                            setTimeout(function () {
                                                b.statusMsg("请先输入核销码", "")
                                            }, 200);
                                            return "stop"
                                        }
                                        if (!s.vercodeFlow) {
                                            s.vercodeFlow = true;
                                            var P = $("#awardDetailBox").find(".code").text();
                                            $.ajax({
                                                url: g_config.ajaxUrl + "hdgame_h?cmd=checkVerificationCode",
                                                type: "post",
                                                data: {
                                                    storeId: g_config.storeId,
                                                    areaId: g_config.areaId,
                                                    vcode: Q,
                                                    id: g_config.playerId,
                                                    gameId: g_config.gameId,
                                                    openId: g_config.openId,
                                                    level: s.style == "安慰奖" ? 900 : s.level,
                                                    code: P
                                                },
                                                success: function (R) {
                                                    R = JSON.parse(R);
                                                    $("#verifictionCodeLayer").hide();
                                                    N.find(".weui-input").val("");
                                                    if (R.success) {
                                                        b.statusMsg(R.msg, "");
                                                        changeAwardStatus(P, 1);
                                                        s.isverification = true
                                                    } else {
                                                        if (R.rt == -9) {
                                                            changeAwardStatus(P, 1);
                                                            s.isverification = true
                                                        } else {
                                                            if (R.rt == -15) {
                                                                changeAwardStatus(P, 3);
                                                                s.isverOvertime = true
                                                            } else {
                                                                if (R.rt == -12) {
                                                                    changeAwardStatus(P, 4);
                                                                    s.isverCancel = true
                                                                }
                                                            }
                                                        }
                                                        b.statusMsg(R.msg, "")
                                                    }
                                                },
                                                error: function () {
                                                    b.statusMsg("服务器繁忙，请稍后再试", "")
                                                },
                                                complete: function () {
                                                    s.vercodeFlow = false
                                                }
                                            })
                                        }
                                    },
                                    defaultBtnFn: function () {
                                        N.find(".weui-input").val("")
                                    }
                                };
                                var N = b.showMsgToast2(O);
                                N.find(".weui-input").focus()
                            } else {
                                $("#awardCodeLayer").show()
                            }
                        })
                    }
                } else {
                    $(".awardCusText").toggle(s.optx);
                    L.find("#awardCusTextInfo").text(s.txc)
                }
                if (!r.afterWxCard || !s.$type.btn || s.awardtype == 1 || s.awardtype == 2 || s.awardtype == 5) {
                    if (s.attention == 3) {
                        console.log(s.awardtype);
                        b.createQrImg($("#newAttentionPoup"), s.attentionimg);
                        console.log(s.attentionimg);
                        $("#awardCusBtnInfo,#WxCusBtnInfo").off(".cusBtn").on("touchend.cusBtn", function () {
                            $("#newAttentionMask").show()
                        })
                    } else {
                        if (s.attention == 2) {
                            $("#awardCusBtnInfo,#WxCusBtnInfo").off(".cusBtn").attr("href", b.fixUrl(s.btl))
                        }
                    }
                    $("#awardCusBtnBox").toggle(s.attention != 1)
                } else {
                    $("#awardCusBtnBox").show()
                }
                b.wxConfig.setWxShareUrlArg(["fromFav", H.awardCode]);
                $("#awardDeailBg").show();
                setTimeout(function () {
                    $("#awardDeailBg").hide()
                }, 800);
                var C = H.codeStatus
            }
            function y(Q, T, V) {
                if (!Q || Q.length == 0) {
                    L.find("#useStoreBox").mustHide("listNotNull");
                    return
                }
                if (T != undefined && V != undefined) {
                    for (var R = 0; R < Q.length; R++) {
                        var X = Q[R];
                        var Y = $.parseJSON(X.point);
                        var P = b.computeDistance(T, V, Y.lat, Y.lng);
                        X.distance = parseInt(P);
                    }
                    Q.sort(function (aa, Z) {
                        return aa.distance - Z.distance
                    })
                } else {
                    Q.sort(function (aa, Z) {
                        return Z.id - aa.id
                    })
                }
                var W = Q[0];
                var S = $("#useStoreBox");
                S.find(".storeInfoBox").data("store", W);
                F(W, S.find(".storeInfoBox"));
                L.find("#useStoreBox").removeClass("initHide");
                L.find("#useStoreBox").canShow("listNotNull");
                if (Q.length > 1) {
                    S.find(".storeNumText").show();
                    S.find("#storeNum").text(Q.length);
                    S.find(".moreBtn").show()
                } else {
                    S.find(".storeNumText").hide();
                    S.find(".moreBtn").hide()
                }
                if (Q.length > 1) {
                    var O = $("#storeListBox .list");
                    O.empty();
                    for (var R = 0; R < Q.length; R++) {
                        var X = Q[R];
                        var N = '<div class="storeInfoBox"><div class="locationBtn" onclick="HdGame.openStoreLocation(this)"></div><div class="info"><div class="storeNameBox"><span id="storeName"></span><span id="distance"></span></div><div class="storeAdress"></div></div></div>';
                        var U = $(N);
                        U.data("store", X);
                        F(X, U);
                        O.append(U)
                    }
                }
            }
            function F(P, Q) {
                var O = "";
                var N = "";
                var S = "";
                if (P) {
                    O = P.name;
                    N = K(P);
                    var R = P.distance;
                    if (R && R > 0) {
                        if (R > 1000) {
                            S = parseInt(R / 1000) + "千米"
                        } else {
                            S = R + "米"
                        }
                    }
                }
                Q.find("#storeName").text(O);
                Q.find(".storeAdress").text(N);
                Q.find("#distance").text(S)
            }
            function K(N) {
                if (N.province == "北京" || N.province == "天津" || N.province == "上海" || N.province == "重庆") {
                    return N.city + N.county + N.address
                }
                return N.province + N.city + N.county + N.address
            }
            var D = b.watch.bind(["award", "game.$cAward", s], ["type", "game.$cAward.$type", s.$type]);
            D("{award}.cbt", function (N) {
                L.find(".awardCodeTime .codeBgTime").text(N.substring(0, 10).replace("-", ".").replace("-", "."));
                if (r.afterWxCard) {
                    B.find(".itemList .beginTime").html(N.substring(0, 10))
                }
            });
            D("{award}.cet", function (N) {
                L.find(".awardCodeTime .codeEndTime").text(N.substring(0, 10).replace("-", ".").replace("-", "."));
                if (r.afterWxCard) {
                    B.find(".itemList .endTime").html(N.substring(0, 10))
                }
            });
            b.watch("game.$cAward.name", H.awardName, function (N) {
                L.find(".awardName").text(N)
            });
            D("{award}.stl", function (N) {
                L.find(".awardSubTitle").text(N)
            });
            D("{type}.showsitebox?{award}.opti:{type}.opti", function (N) {
                L.find(".codeOptInfo").text(N);
                $("#awardCodeLayer").find(".codeOptInfo").text(N)
            });
            D("{type}.deadline", function (N) {
                L.find(".awardCodeTime em").text(N)
            });
            D("{type}.collect", function (N) {
                $("#awardCollectionBtn").text(N)
            });
            D("{type}.codename", function (N) {
                $("#codeName").text(N)
            });
            D("{award}.btn", function (N) {
                L.find(".awardCusBtn .text").text(N)
            });
            D("{award}.awardtype==4", function (N) {
                L.find("#WxCusBtnInfo").toggleClass("hide", !N);
                L.find("#awardCusBtnInfo").toggleClass("hide", !! N)
            });
            D("{type}.btn || ({award}.awardtype == 2 && ({award}.cashtype == 2 || {award}.cashtype == 3) || {award}.awardtype == 0)", function (N) {
                if (N) {
                    if (N == true) {
                        N = "立即兑奖"
                    }
                    L.find(".bottomCusBtn .text").text(N);
                    L.find("#bottomCusBtnInfo").show()
                } else {
                    L.find("#bottomCusBtnInfo").hide()
                }
            });
            D("{award}.awardtype!=4&&{award}.attention", function (N) {

                if (N) {
                    if (N != 1) {
                        L.find("#awardCusBtnInfo").show()
                    } else {
                        L.find("#awardCusBtnInfo").hide()
                    }
                }
            });
            D("{award}.awardtype==4&&{award}.attention==1", function (P) {
                var R = H.codeStatus;
                var O = H._award.cbt;
                O = O.replace(/-/g, "/");
                var N = new Date().getTime();
                var Q = new Date(O).getTime();
                if (R == 3 || R == 5 || (N < Q && H._award.awardtype != 4) || (R == 1 && H._award.awardtype != 4)) {
                    L.find("#bottomCusBtnBox").hide()
                } else {
                    L.find("#bottomCusBtnBox").hdToggle("def", !P)
                }
            });
            D("(({award}.awardtype == 2 && {award}.cashtype == 4) || {award}.awardtype == 1) && {award}.$cashsiteurl", function (P) {
                var N = H.theGiftDate < 0;
                if (typeof P == "boolean") {
                    if (P || N) {
                        L.find("#bottomCusBtnBox").hide();
                        L.find(".codeOptInfo").hide()
                    } else {
                        var O = $.parseJSON(g_config.award.awardInfo);
                        if (O.awardtype != 4 || O.attention != 1) {
                            L.find("#bottomCusBtnBox").show()
                        }
                        L.find(".codeOptInfo").show()
                    }
                } else {
                    if (typeof P == "string") {
                        if ($.trim(P).length == 0 || N) {
                            L.find("#bottomCusBtnBox").hide();
                            L.find(".codeOptInfo").hide()
                        } else {
                            L.find("#bottomCusBtnBox").show();
                            L.find(".codeOptInfo").show()
                        }
                    } else {
                        if (typeof P == "undefined") {
                            var O = $.parseJSON(g_config.award.awardInfo);
                            if (O.cashsite.length == 0 || N) {
                                L.find("#bottomCusBtnBox").hide();
                                L.find(".codeOptInfo").hide()
                            } else {
                                L.find("#bottomCusBtnBox").show();
                                L.find(".codeOptInfo").show()
                            }
                        }
                    }
                }
            });
            D("(({award}.awardtype!=2||{award}.cashtype!=2)&&{award}.awardtype!=0)&&{award}.$opqrc", function (N) {
                if (typeof N === "undefined" || N) {
                    $("#awardDetailBox .codeImg ").show()
                } else {
                    $("#awardDetailBox .codeImg,#awardDetailBox .codeDetailImgBox").hide()
                }
            });
            if (r.afterWxCard) {
                D("{type}.details", function (N) {
                    B.find(".awardCusText .text,.ticketitle .text").html(N)
                });
                D("{type}.sitetype == 'text'", function (N) {
                    if (N) {
                        L.find("#useStoreBox").canShow("address")
                    } else {
                        L.find("#useStoreBox").mustHide("address")
                    }
                    B.find(".addressLine").toggleClass("addressHide", !N)
                });
                D("{type}.site", function (N) {
                    B.find(".itemList .titleAdress").text(N)
                });
                D("{type}.term", function (N) {
                    B.find(".itemList .timelimit").parents(".itemList").toggle(N)
                });
                D("{type}.showcopy", function (N) {
                    $("#codeDetailInfoBox .copy").toggle(N)
                });
                D("{type}.showsitebox?{award}.opti:{type}.opti", function (N) {
                    L.find(".codeOptInfo").text(N)
                });
                D("{award}.cashsite", function (N) {
                    B.find(".itemList .address").text(N)
                });
                D("{type}.notice", function (N) {
                    B.find(".itemList .titleNotice").text(N)
                });
                D("{award}.servicepho", function (N) {
                    L.find(".servicePhone").toggle( !! N);
                    L.find(".servicePhone").parent("a").attr("href", "tel:" + N)
                    L.find(".servicePhone .phoneText").text(N)
                });
                D("{award}.tlmt", function (N) {
                    B.find(".itemList .timelimit").text(b.changeTimeLimit(N))
                });
                D("{award}.cashinfo", function (N) {
                    if (N == null || N == "") {

                      B.find(".noticeLine").hide()
                    } else {
                        N = b.encodeHtml(N)
                    }
                    B.find(".itemList .notice>pre").html(N)
                });
                D("{award}.storeType", function (N) {
                    if (N && N != 1) {
                        L.find("#useStoreBox").canShow("storeType");
                        B.find(".addressLine").addClass("hide")
                    } else {
                        L.find("#useStoreBox").mustHide("storeType");
                        B.find(".addressLine").removeClass("hide")
                    }
                });
                D("{award}.$$useStoreList", function (N) {
                    if ((!N || N.length <= 0)) {
                        return
                    }
                    if (g_config.test) {
                        y(N)
                    } else {
                        wx.ready(function () {
                            wx.getLocation({
                                type: "gcj02",
                                success: function (O) {
                                    var Q = O.latitude;
                                    var P = O.longitude;
                                    y(N, Q, P)
                                },
                                fail: function (O) {
                                    b.statusMsg("当前微信版本不支持定位或没开启定位服务，请联系活动主办单位", "");
                                    y(N)
                                },
                                cancel: function () {
                                    b.statusMsg("用户拒绝了授权地理位置信息", "");
                                    y(N)
                                }
                            })
                        })
                    }
                })
            } else {
                D("{award}.txn", function (N) {
                    L.find(".awardCusText .text").text(N)
                })
            }
            $("#awardDetailBox").show()
        };
        b.shouldRegInfo = function (u, w, y) {
            var s = false;
            if (g_config.afterLinkModify) {
                if (g_config.linkInfoType != 1 && g_config.linkInfoType == u) {
                    s = true
                }
                if (b._isZhuliPlayer && (g_config.linkInfoType == 2 || g_config.linkInfoType == 3)) {
                    s = false
                }
                if (u == 4 && !g_config.linkInfoAll) {
                    if (g_config.award) {
                        var t = g_config.award.level;
                        var x = g_config.award.awardName;
                        if (t == 900) {
                            t = g_config.award.awardLevel;
                            s = g_config.comfort.comOplink
                        } else {
                            s = g_config.awardList[t - 1].oplink
                        }
                    }
                }
            } else {
                if ((gameType == 3 || gameType == 1) && g_config.openAwardLinkNoDraw) {
                    s = true
                }
            }
            if (s && !v()) {
                b.aUserInfo.show(w, y);
                return true
            }
            return false;

            function v() {
                if (g_config.awardUsername || g_config.awardPhone || g_config.awardAddress) {
                    return true
                }
                var z = g_config.userInfo;
                if (z) {
                    for (var A in z) {
                        if (/^aprop.*/.test(A) && z[A] != null && z[A] !== "") {
                            return true
                        }
                    }
                }
                return false
            }
        };

        function m(s) {
            $("#regAwardBox .poupMainInfo").css("height", $("#regAwardBox").height() - $("#regAwardBox .attentionBox").height() - 18);
            $("#regAwardBox").show();
            $("#regAwardBox").css("height", $("#poupInfoBox").height() - $(".poupHead").height() - g_rem * 0.25);
            {
                var t = r.getRegAwardUrl;
                if (g_config.isDoubleGame) {
                    var t = t + "&openIdB=" + b.otherOpenId
                }
                if (g_config.firstTouchWinList) {
                    $(".ajaxLoadBg").show();
                    $(".ajaxLoadBar").addClass("ajaxLoad");
                    b.showLoadToast("数据加载中");
                    $.ajax({
                        type: "post",
                        url: t,
                        error: function () {
                            b.hideLoadToast();
                            b.poupAjaxComplete()
                        },
                        success: function (x) {
                            b.hideLoadToast();
                            var y = $.parseJSON(x);
                            b.poupAjaxComplete();
                            $("#Mingdan_Round_Dot").hide();
                            setTimeout(function () {
                                var A = false;
                                var F = 0;
                                var E = [];
                                var z = $(".regAwardList");
                                z.find(".playerName").html("");
                                $("#noRegAward").hide();
                                $("#regAwardMain").show();
                                $(y).each(function () {
                                    var G = $(this)[0].level;
                                    if (G != 900 && G > F) {
                                        F = G
                                    }
                                    if (G == 900) {
                                        A = true
                                    }
                                });
                                if (A) {
                                    F++
                                }
                                for (var B = 0; B < F; B++) {
                                    var D = {};
                                    D.name = [];
                                    E.push(D)
                                }
                                if (y.length == 0) {
                                    $("#noRegAward").show();
                                    $("#regAwardMain").hide();
                                    return
                                }
                                $(y).each(function () {
                                    var I = $(this)[0].isSelf;
                                    var L = $(this)[0].level;
                                    var H = L - 1;
                                    if (L == 900) {
                                        H = F - 1
                                    }
                                    var K = E[H];
                                    var J = "";
                                    if (I) {
                                        J = 'style="color:#fff000;"'
                                    }
                                    var G = "<span " + J + ">" + $(this)[0].name + "</span>";
                                    if (K && K.name) {
                                        if ($.inArray(G, K.name) == -1) {
                                            K.name.push(G)
                                        }
                                    }
                                });
                                $("#regAwardMain").empty();
                                for (var B = 0; B < F; B++) {
                                    $("#regAwardMain").append(l(B + 1))
                                }
                                z = $(".regAwardList");
                                for (var B = 0; B < E.length; B++) {
                                    var C = E[B].name.join("、");
                                    if (E[B].name.length > 100) {
                                        E[B].name = E[B].name.slice(0, 100);
                                        C = E[B].name.join("、") + "..."
                                    }
                                    z.eq(B).find(".playerName").append(C);
                                    if ((z.eq(B).find(".playerName").html() == "") || (z.eq(B).find(".playerName").html() == null)) {
                                        z.eq(B).remove()
                                    }
                                }
                                $("#regAwardMain").show()
                            }, 500);
                            g_config.firstTouchWinList = false
                        }
                    })
                }
            }
        }
        function l(s) {
            var t = s == 9 ? g_config.comfort.cas : g_config.awardList[s - 1].style;
            return "<div class='regAwardList'><div class='mainTitle'>" + t + "</div><div class='playerName' style='margin-bottom:12px;'></div></div>"
        }
        function n(s) {
            $("#informBox").show();
            $("#inform-reason-page").show();
            $("#inform-desc-page").hide();
            $("#next-inform-btn").hide();
            $("#inform-reason-box .reasonItem").removeClass("checked");
            $("#informResultBox .confirm-btn").off("touchend").on("touchend", function () {
                event.preventDefault();
                $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                g_config.showSkillSup && $(".bottomSkill").show()
                $("#informBox").hide();
                $("#informResultBox").hide();
                $("#inform-reason-box .reasonItem").removeClass("checked");
                $("#inform-reason-box .reasonItem em").hide();
                $("#poupInfoBox").hide();
                hg.fire("hidePoup", s)
            });
            $("#cancel-inform-btn").off("touchend").on("touchend", function () {
                event.preventDefault();
                var t = $("#poupInfoBox");
                t.removeClass("retrans");
                $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                g_config.showSkillSup && $(".bottomSkill").show()
                t.hide();
                $("#informBox").hide();
                hg.fire("hidePoup", s)
            })
        }
        $("#inform-reason-box .reasonItem").on("touchend", function () {
            var s = $(this).attr("_index");
            $("#inform-reason-box .reasonItem").removeClass("checked");
            $(this).addClass("checked");
            $("#next-inform-btn").show()
        });
        $("#next-inform-btn").on("touchend", function () {
            $("#inform-reason-page").hide();
            $("#inform-desc-page").show();
            $("#spxdPage").addClass("imp-hide")
        });
        $("#inform-desc-box #informDesc").on("load input", function () {
            var s = $("#inform-desc-box #informDesc").val();
            s = $.trim(s);
            $("#inform-desc-box #informDesc-counter span").text(s.length)
        });
        $("#submit-inform-btn").on("touchend", function () {
            if (!r.hasReport) {
                var t = $("#inform-desc-box #informDesc").val();
                t = $.trim(t);
                if (t == null || t == "") {
                    b.showMsgToast("描述不能为空", 2000);
                    return
                } else {
                    if (t.length > 50) {
                        b.showMsgToast("填写超出限制", 2000);
                        return
                    } else {
                        $.ajax({
                            type: "post",
                            url: r.informUrl,
                            success: function (u) {
                                r.hasReport = true;
                                $("#informResultBox h3").text("投诉成功");
                                $("#informResultBox").show()
                            }
                        })
                    }
                }
            } else {
                $("#informResultBox h3").text("你已经投诉过了！");
                $("#informResultBox").show()
            }
            var s = $("#poupInfoBox");
            s.removeClass("poupFadIn").addClass("poupFadOut");
            setTimeout(function () {
                $("#spxdPage").removeClass("imp-hide")
            }, 400)
        });
        $("#awardContactInfo .updateBtn").on("click", function () {
            b.aUserInfo.show()
        })
    })();
    (function () {
        var j = false;
        var e = g_config.style == 69 ? 0 : 0.7;
        b.sortRuleBox = {
            init: g,
            addBtn: f,
        };

        function g(p) {
            var o = $("#ruleBox > .poupMainInfo");
            var l = o.find(".poupLine");
            if (l.length > p.length) {
                var k = "a".charCodeAt();
                for (var m = p.length; m < l.length; m++) {
                    p += String.fromCharCode(k + m)
                }
            }
            var n = l.sort(function (s, q) {
                var t = p.indexOf($(s).data("sortkey"));
                var r = p.indexOf($(q).data("sortkey"));
                if (t == -1 || r == -1) {
                    return 0
                }
                return t > r ? 1 : -1
            });
            o.append(n)
        }
        function f() {
            b.addModuleLayer("#ruleBox .poupLine", {
                name: "下移",
                onshow: function (k) {
                    var l = k.target;
                    if (l.next().length == 0) {
                        $(this).hide()
                    } else {
                        $(this).show()
                    }
                },
                onclick: function (l) {
                    l.stopPropagation();
                    var m = l.data.target;
                    var k = m.next();
                    if (k.length != 0) {
                        h(m, k, m)
                    }
                    parent.changeIsSave()
                }
            });
            b.addModuleLayer("#ruleBox .poupLine", {
                name: "上移",
                onshow: function (k) {
                    var l = k.target;
                    if (l.prev().length == 0) {
                        $(this).hide()
                    } else {
                        $(this).show()
                    }
                },
                onclick: function (l) {
                    l.stopPropagation();
                    var m = l.data.target;
                    var k = m.prev();
                    if (k.length != 0) {
                        h(k, m, m)
                    }
                    parent.changeIsSave()
                }
            })
        }
        function h(m, l, o) {
            if (j) {
                return
            }
            j = true;
            b.removeAllEditLayer();
            var k = m.height();
            var n = l.height();
            m.animate({
                top: n + e * g_rem
            }, 300);
            l.animate({
                top: -k - e * g_rem
            }, 300, function () {
                j = false;
                m.insertAfter(l);
                m.css("top", 0);
                l.css("top", 0);
                o.click()
            })
        }
    })();
    (function () {
        var e = {};
        e.show = function (f, h) {
            if (!b.lastDisplayStatus) {
                b.lastDisplayStatus = {
                    gameBox: $(".gameBox").is(":visible"),
                    home: $(".home").is(":visible")
                }
            }
            $(".gameBgBox,.home").hide();
            $("#awardUserInfoBg").data({
                _aUserInfoArg: f,
                _aUserInfoThis: h
            }).show();
            var g = g_config.ajaxUrl.replace("/ajax/", "");
            if ($("#contactInputIframe").length == 0) {
                $("#awardUserInfoBg").append('<iframe id="contactInputIframe" frameborder="0" scrolling="yes" src="' + g + "/contactInfo2.jsp?afterLinkModify=" + g_config.afterLinkModify + "&fromCanal=" + fromCanal + "&awardLinkMsg=" + b.encodeUrl(b._awardLinkMsg) + '" style="height: 100%; width: 100%;"></iframe>')
            }
            $("#spxdPage").addClass("spxdPageHide");
            $("#nameInput").val(g_config.awardUsername);
            $("#phoneInput").val(g_config.awardPhone);
            $("#addressInput").text(g_config.awardAddress);
            if (!f) {
                $("#awardUserInfoBg").removeData("_aUserInfoArg")
            }
        };
        e.hide = function () {
            if (b.lastDisplayStatus) {
                if (b.lastDisplayStatus.gameBox) {
                    $(".gameBgBox").show()
                }
                if (b.lastDisplayStatus.home) {
                    $(".home").show()
                }
                b.lastDisplayStatus = null
            }
            var g = $("#awardUserInfoBg");
            g.hide();
            $("#spxdPage").removeClass("spxdPageHide");
            var k = g.data("_aUserInfoArg");
            if (!k) {
                return
            }
            if (f(k)) {
                var j = k[2];
                if (j && j.info) {
                    j.info = $.parseJSON(j.info);
                    j.info.ausername = g_config.awardUsername;
                    j.info.aphone = g_config.awardPhone;
                    j.info.aadress = g_config.awardAddress;
                    j.info = $.toJSON(j.info)
                }
            }
            e.afterUserInfoHide = true;
            var h = g.data("_aUserInfoThis");
            k.callee.apply(h, k);
            setTimeout(function () {
                e.afterUserInfoHide = false
            }, 0);
            setTimeout(function () {
                $("#contactInputIframe").remove()
            }, 510);

            function f(l) {
                if (typeof gameOver != "undefined" && l.callee === gameOver) {
                    return true
                }
                if (typeof startBtnAjax != "undefined" && l.callee === startBtnAjax) {
                    return true
                }
                if (typeof luckDraw != "undefined" && l.callee === luckDraw) {
                    return true
                }
                return false
            }
        };
        b.aUserInfo = e
    })();
    b.showLotsWait = function (e, g) {
        var f = $("#lots-wait-Box #lots-wait-hint-num");
        f.text(e);
        $("#lots-wait-Box").show();
        var h = setInterval(function () {
            e--;
            f.text(e);
            if (e <= 0) {
                clearInterval(h);
                $("#lots-wait-Box").hide();
                g()
            }
        }, 1000)
    };
    (function () {
        var e = Math.max($(window).height() / $(window).width(), $(window).width() / $(window).height()) > 22 / 16;
        var j = {
            startStatus: false,
            exposeFlag: false,
            disable: false,
            result_disable: false,
            gift_disable: false,
        };
        var h = {
            drawType: false,
            home: function () {},
            again: function () {},
            giftInit: function (k) {
                k && k()
            }
        };
        var g = (function () {
            var p = 1.5;
            var m = 0;
            var l, r, q;
            var o, n, k;
            return function (t) {
                if (!j.startStatus) {
                    return
                }
                var v = new Date().getTime();
                if ((v - m) > 100) {
                    $("input").blur();
                    var s = t.accelerationIncludingGravity;
                    m = v;
                    l = s.x;
                    r = s.y;
                    q = s.z;
                    var u = Math.sqrt(l * l + r * r + q * q) / Math.sqrt(o * o + n * n + k * k);
                    if (u > p) {
                        j.startStatus = false;
                        h.giftInit(function (w) {
                            hg.sound.play("yiy");
                            setTimeout(function () {
                                j.showGift(w)
                            }, 1500)
                        })
                    }
                    o = l;
                    n = r;
                    k = q
                }
            }
        })();
        var f = {};
        j.initArg = function (k) {
            if (this.disable) {
                return
            }
            $.extend(f, k)
        };
        j.init = function (k) {
            if (this.disable) {
                return
            }
            $.extend(h, k);
            $.extend(h, f);
            this.giftBox = $("#resule-gift-box");
            this.resuleBox = $(".resuleBox");
            this.statusBox = $("#resule-status-box");
            var o = this;
            var l = $("#resule-status-lots").width();
            var n = $("#resule-status-lots").height();
            var p = $("#lots-wait-img").width();
            var m = $("#lots-wait-img").height();
            $("#lots-wait-img").css({
                width: l / (6.15 * g_rem) * p,
                height: n / (12.4 * g_rem) * m,
            });
            if (b.currentScore >= g_config.scoreSet && g_config.scoreSet != "") {
                b.isplaySucess = true
            } else {
                b.isplaySucess = false
            }
            $(".resule-status-home , .resule-gift-home, .resule-gift-home2").on("touchend", function () {
                event.preventDefault();
                event.stopPropagation();

                b.fadIn(o.resuleBox, function () {
                    o.giftBox.hide();
                    o.statusBox.hide();
                    $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                    if (g_config.showSkillSup) {
                        $(".bottomSkill").show()
                    }
                });
                h.home()
            });
            $("#resule-status-lotsHand .waitDrawBtn").off("touchend").on("touchend", function () {
                j.startStatus = false;
                h.giftInit(function (q) {
                    o.showGift(q)
                })
            });
            $(".resule-gift-draw").off("touchend").on("touchend", function () {

                window.addEventListener("devicemotion", g, false);
                if (o.resuleArg.isLimitDrawTotal && o.resuleArg.totalCount <= 1) {
                    b.statusMsg(6);
                    return
                } else {
                    if (o.resuleArg.count <= 1) {
                        b.statusMsg(4);
                        if (!g_config.showHelpGuide) {
                            h.home()
                        }
                        return
                    }
                }
                $("#resule-status-scrollWrap,#resule-gift-box").hide();
                $("#resule-status-lotsBox,#resule-status-box").show();
                setTimeout(function () {
                    j.startStatus = true;
                    o.resuleArg.totalCount > 0 && o.resuleArg.totalCount--;
                    o.resuleArg.count > 0 && o.resuleArg.count--
                }, 1000);
                clearTimeout(b.lotTimer);
                $("#resule-status-lotsHand .shakeHand,#resule-status-lotsHand .shakeTxt").show();
                $("#resule-status-lotsHand .waitDrawBtn").hide();
                b.lotTimer = setTimeout(function () {
                    if (drawStatusLuckDraw) {
                        $("#resule-status-lotsHand .shakeHand,#resule-status-lotsHand .shakeTxt").hide();
                        $("#resule-status-lotsHand .waitDrawBtn").show()
                    }
                }, 5000);
                j.exposeFlag = false
            });
            if ((h.drawType === 0 || h.drawType === 2) && g_config.style != 61 && g_config.style != 27) {
                $(".resule-gift-home").css({
                    width: "10rem",
                    height: "2rem",
                    "line-height": "2rem"
                });
                $(".resule-gift-home2").css({
                    width: "4.75rem",
                    height: "2rem",
                    "line-height": "2rem"
                });
                this.giftBox.find(".resule-gift-seeRank").remove();
                this.show = this.showGift
            } else {
                if (h.drawType === 1 || g_config.style == 61 || g_config.style == 27) {
                    $(".resule-status-seeRank,.resule-gift-seeRank").on("touchstart", function () {
                        event.preventDefault();
                        event.stopPropagation();

                        window.showRank()
                    });
                    $(".resule-status-again").on("touchstart", function () {
                        event.preventDefault();
                        event.stopPropagation();

                        if (gameType == 3 && g_config.isCheckPlayTimes && PlayInfo.getTotalRemainTimes() <= 0) {
                            b.statusMsg(8);
                            return
                        }
                        if (gameType == 3 && g_config.isCheckPlayTimes && PlayInfo.getTodayRemainTimes() <= 0) {
                            b.statusMsg(7);
                            return
                        }
                        $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                        if (!g_config.isDoubleGame) {
                            b.fadIn(o.resuleBox, function () {
                                o.giftBox.hide();
                                o.statusBox.hide()
                            })
                        }
                        h.again()
                    });
                    hg.sound.load(_resRoot + "/image/yaoyiyao.wav", "yiy");
                    window.addEventListener("devicemotion", g, false);
                    if (g_config.test) {
                        $("#resule-status-lotsHand").on("touchstart", function () {
                            j.startStatus = false;
                            h.giftInit(function (q) {
                                o.showGift(q)
                            })
                        })
                    }
                    this.giftEvent = function () {

                        if (g_config.afterLinkModify && b.shouldRegInfo(3, arguments, this)) {
                            return
                        }
                        if (o.resuleArg.isLimitDrawTotal && o.resuleArg.totalCount === 0) {
                            b.statusMsg(6);
                            return
                        } else {
                            if (o.resuleArg.count === 0) {
                                b.statusMsg(4);
                                return
                            }
                        }
                        $("#resule-status-scrollWrap").hide();
                        $("#resule-status-lotsBox").show();
                        $("#resule-status-lotsHand .shakeHand,#resule-status-lotsHand .shakeTxt").show();
                        $("#resule-status-lotsHand .waitDrawBtn").hide();
                        b.resulePoup.statusBox.show();
                        b.resulePoup.resuleBox.show();
                        j.startStatus = true;
                        b.lotTimer = setTimeout(function () {
                            if (drawStatusLuckDraw) {
                                $("#resule-status-lotsHand .shakeHand,#resule-status-lotsHand .shakeTxt").hide();
                                $("#resule-status-lotsHand .waitDrawBtn").show()
                            }
                        }, 5000);
                        j.exposeFlag = false
                    };
                    $(".resule-status-gift").on("touchstart", this.giftEvent);
                    this.regEvent = function () {

                        if (b.shouldRegInfo(3, arguments, this)) {
                            return
                        }
                        $(".ajaxLoadBg").show();
                        $(".ajaxLoadBar").addClass("ajaxLoad");
                        b.showLoadToast("数据加载中");
                        var q = h.regUrl;
                        if (g_config.isDoubleGame) {
                            q += "&openIdB=" + b.otherOpenId
                        }
                        $.ajax({
                            type: "post",
                            url: q,
                            error: function () {
                                b.hideLoadToast();
                                b.otherAjaxComplete()
                            },
                            success: function (s) {
                                b.hideLoadToast();
                                var r = $.parseJSON(s);
                                b.otherAjaxComplete();
                                if (r.isOutofTestNum) {
                                    b.statusMsg("活动尚未发布", "最多测试人数为100人！");
                                    return
                                }
                                if (!r.isOutofRegNum) {
                                    b.isReg = true;
                                    var r = $.parseJSON(s);
                                    if (r.success) {
                                        $(".resule-foot-one .resule-status-again").html("继续刷记录");
                                        $(".resule-foot-one .resule-status-reg").hide();
                                        $(".resule-foot-one .resule-status-again").show();
                                        $("#resule-status-count").hide();
                                        $("#resule-sucReg").show()
                                    }
                                } else {
                                    b.statusMsg("本活动报名人数已达到最大限制如需继续参与，请与主办方联系。")
                                }
                            }
                        })
                    };
                    $(".resule-status-reg").on("touchstart", this.regEvent);
                    this.show = this.showResult
                }
            }
        };
        j.showResult = function (n) {
            if (this.disable || this.result_disable) {
                return
            }
            var m = {
                isSuc: false,
                gameScore: 0,
                minScore: 0,
                bestScore: 10,
                rank: 10,
                count: 3,
                beat: 99,
                notreal: false,
                gameType: 0
            };
            var l = $.extend(m, n);
            if (g_config.showSkillSup) {
                if (l.isSuc) {
                    g_config.localPoupPage = 5
                } else {
                    g_config.localPoupPage = 6
                }
            }
            this.resuleArg = l;
            !l.notreal && (b.currentRank = l.rank);
            !l.notreal && (b.currentScore = l.bestScore);
            // b.wxConfig.setWxShareByStatus();
            $("#resule-status-scrollWrap").show();
            $("#resule-status-lotsBox,#resule-gift-box").hide();
            $(".resule-one-button").hide();
            $("#resule-status-playinfo").hide();
            this.statusBox.show();
            b.fadOut(this.resuleBox);
            var p = $(".resuleArg");
            var k = l.isReg;
            if (l && typeof l.gameType != "undefined") {
                if (l.gameType == 4 || l.gameType == 0) {
                    $("#drawMenuBtnBox").toggleClass("hide", true)
                } else {
                    var o =  !g_config.showMenu;
                    $("#drawMenuBtnBox").toggleClass("hide", o)
                }
            }
            if (!l.notreal && g_config.sortType == (l.gameScore >= g_config.drawLimitDef)) {
                if (typeof b.oss_aof === "undefined") {
                    b.oss_aof = 0
                }
                b.oss_aof++;
                if (b.oss_aof >= 2) {
                    b.oss_aof = 0
                }
            }
            $("#resule-status-scrollWrap").css("height", $(window).height() - 1.2 * g_rem);

            $(".gameBox,.home,.body").addClass("overflow-y-hidden");
            $(".bottomSkill").is(":visible") && $(".bottomSkill").hide()
            if (l.gameType == 3) {
                $("#resule-foot-box").css("padding-bottom", "1rem");
                if (l.gameScore == "fail") {
                    $("#resule-status-bird").show();
                    $("#resule-status-ribbon").removeClass("resule-status-ribbon").addClass("resule-status-faiRibbon");
                    $("#resule-status-bird").removeClass("resule-status-birdfly").addClass("resule-status-birdfly");
                    $("#resule-status-box .resule-bgLight").hide();
                    $(".resule-status-userImg").css("border-color", "#B5B5B5");
                    $("#resule-status-body .beat-Percent").hide();
                    if (l.rank == 0) {} else {
                        $("#resule-status-body .result-scoreUnit").show()
                    }
                    p.eq(0).text("无");
                    if (p.eq(2).text().length == 0) {
                        p.eq(2).text(l.bestScore);
                        p.eq(3).text(l.rank > 0 ? l.rank : "无")
                    } else {
                        if (p.eq(0).text() == "无") {
                            $("#resule-status-body .youraward .result-scoreUnit").hide()
                        } else {
                            $("#resule-status-body .result-scoreUnit").show()
                        }
                    }
                    b.isplaySucess = false
                } else {
                    $("#resule-status-bird").hide();
                    $(".resule-status-userImg").css("border-color", "#70D572");
                    $("#resule-status-ribbon").removeClass("resule-status-faiRibbon").addClass("resule-status-ribbon");
                    $("#resule-status-box .resule-bgLight").show();
                    $("#resule-status-body .beat-Percent span").text(l.beat);
                    $("#resule-status-body .beat-Percent").show();
                    p.eq(0).text(l.gameScore);
                    p.eq(2).text(l.bestScore);
                    p.eq(3).text(l.rank);
                    $("#resule-status-body .result-scoreUnit").show();
                    b.isplaySucess = true
                }
                $(".resule-status-minscore").hide();
                $("#resule-status-count").hide();
                $(".resule-foot-one .resule-status-gift").hide();
                $(".resule-foot-one .resule-status-reg").hide();
                $(".resule-foot-one .resule-status-again").show();
                $(".resule-foot-two .resule-status-again").hide();
                $(".resule-foot-two .resule-status-home").show();
                if (gameType == 3 && g_config.isCheckPlayTimes) {
                    $("#resule-status-playinfo").show()
                } else {
                    $("#rank_showRule").show()
                }
            } else {
                if (l.gameScore === "fail") {
                    $(".resuleArg-fail").text(l.minScore);
                    $("#resule-status-body").hide();
                    $("#resule-status-other").show()
                } else {
                    $("#resule-status-body").show();
                    $("#resule-status-other").hide()
                }
                if (l.isSuc) {
                    b.isplaySucess = true;
                    $("#resule-status-bird").hide();
                    if (g_config.style == 18 || g_config.style == 28) {
                        $(".youraward").show();
                        $(".youraward.special").hide();
                        $("#bestArg").show();
                        $("#bestRank").show();
                        $(".resule-status-minscore").css("margin", 0)
                    }
                    $("#resule-status-ribbon").removeClass("resule-status-faiRibbon").addClass("resule-status-ribbon");
                    $(".resule-status-userImg").css("border-color", "#70D572");
                    $(".resule-status-minscore").hide();
                    $("#resule-status-count").show();
                    if (l.gameType == 0) {
                        $(".resule-foot-one .resule-status-gift").show();
                        $(".resule-foot-one .resule-status-again").hide();
                        $(".resule-foot-two .resule-status-again").show();
                        $(".resule-foot-two .resule-status-home").hide();
                    } else {
                        if (l.gameType == 4) {
                            $(".resule-foot-one .resule-status-send").show();
                            $(".resule-foot-two .resule-status-again").hide();
                            $(".resule-foot-two .resule-status-home").show();
                            $("#resule-status-count").hide()
                        } else {
                            if (l.gameType == 1) {
                                $("#resule-status-count").hide();
                                $("#resule-foot-box").css("margin-top", "0.6rem");
                                $(".resule-foot-two .resule-status-again").hide();
                                $(".resule-foot-two .resule-status-home").show();
                                if (!k) {
                                    $(".resule-foot-one .resule-status-reg").show()
                                } else {
                                    $(".resule-foot-one .resule-status-again").html("继续刷记录");
                                    $(".resule-foot-one .resule-status-reg").hide();
                                    $(".resule-foot-one .resule-status-again").show();
                                    $("#resule-sucReg").show()
                                }
                            }
                        }
                    }
                    j.exposeFlag = true;
                    $("#resule-status-box .resule-bgLight").show();
                    p.eq(0).text(l.gameScore);
                    p.eq(1).text(l.minScore);
                    p.eq(2).text(l.bestScore);
                    p.eq(3).text(l.rank);
                    p.eq(4).text(l.totalCount);
                    p.eq(5).text(l.count);
                    p.eq(6).text(l.count);
                    $("#resule-status-body .dayDrawCount").text(l.count);
                    $("#resule-status-body #totalDrawCount").text(l.totalCount);
                    $("#msxbSucTip").text("恭喜你获得密室小能手称号！");
                    $("#resule-status-body .beat-Percent span").text(l.beat);
                    $("#resule-status-body .beat-Percent").show()
                } else {
                    $("#resule-status-bird").show();
                    if (g_config.style == 18 || g_config.style == 28) {
                        $(".youraward").hide();
                        $(".youraward.special").show();
                        $("#bestArg").hide();
                        $("#bestRank").hide();
                        $(".resule-status-minscore").css("margin", "10px 0 50px")
                    }
                    $("#resule-status-ribbon").removeClass("resule-status-ribbon").addClass("resule-status-faiRibbon");
                    $(".resule-status-userImg").css("border-color", "#B5B5B5");
                    $(".resule-status-minscore").show();
                    $("#resule-status-count").hide();
                    $("#resule-status-box .resule-bgLight").hide();
                    $(".resule-foot-one .resule-status-gift").hide();
                    $(".resule-foot-one .resule-status-reg").hide();
                    $(".resule-foot-one .resule-status-again").show();
                    $(".resule-foot-two .resule-status-again").hide();
                    $(".resule-foot-two .resule-status-home").show();
                    $("#resule-status-bird").removeClass("resule-status-birdfly").addClass("resule-status-birdfly");
                    p.eq(0).text(l.gameScore);
                    p.eq(1).text(l.minScore);
                    p.eq(2).text(l.bestScore);
                    p.eq(3).text(l.rank);
                    p.eq(4).text(l.count);
                    $("#resule-status-body .beat-Percent").hide();
                    b.isplaySucess = false
                }
            }
            hg.fire("showResult", l, p)
        };
        j.showGift = function (p) {
            if (this.disable || this.gift_disable) {
                return
            }
            var l = {
                isSuc: false,
                giftName: "",
                giftStyle: "",
                giftCode: 0,
                giftImage: "",
                awardImageW: "6rem",
                awardImageH: "6rem",
                awardTypeNum: 0,
                awardIndex: 1,
                genewxcard: false
            };
            var w = $.extend({}, l, p);
            if (g_config.showSkillSup) {
                if (w.isSuc) {
                    g_config.localPoupPage = 7
                } else {
                    g_config.localPoupPage = 8
                }
            }
            if (this.statusBox) {
                b.fadIn(this.statusBox)
            }
            $("#resule-gift-sucImg").data("openCode", w.giftCode);
            b.fadOut(this.resuleBox);
            b.fadOut(this.giftBox);
            if ((gameType == 0 || gameType == 4 || gameType == 5)) {
                var x = $(".cannotGetThePriceBox").height();
                var k = $(".resuleBox").height() - $("#resule-gift-box").find(".attentionBox").height() - 2.5 * g_rem;
                if (x > k) {
                    $(".cannotGetThePriceBox").height(k);
                    var q = 16 * g_rem - parseFloat($("#faiImgBox img").css("left"));
                    var o = k - parseFloat($("#faiImgBox img").css("top"));
                    var t = $("#faiImgBox img").width() / $("#faiImgBox img").height();
                    var v = $("#faiImgBox img").height();
                    if (v > o) {
                        if ((o * t) > q) {
                            $("#faiImgBox img").height(q / t).width(q)
                        } else {
                            $("#faiImgBox img").height(o).width(o * t)
                        }
                    }
                }
            }
            $(".TellToOther").toggle(w.isSuc);
            $(".backToListen,.tellToTA").css({
                bottom: "-2.5rem",
                "line-height": "1.9rem"
            });
            if ($(".menuAgain").length > 0) {
                $("#resule-gift-scrollWrap").css("height", $(window).height() - $(".menuAgain").outerHeight(true) - 1.6 * g_rem)
            } else {
                $("#resule-gift-scrollWrap").css("height", $(window).height() - $(".menuBtnBox").outerHeight(true) - 1.6 * g_rem)
            }
            var s = $(".gifArg");

            var m = $("#resule-gift-box .attentionBox");
            var n = m.find(".hdskillInfo").outerHeight(true) + m.find(".holdBox").outerHeight(true) + 0.5 * g_rem;
            $("#resule-gift-scrollWrap").css("height", $(window).height() - n - 3.1 * g_rem)
            if (w.isSuc) {
                $("#resule-gift-box").css("height", "auto");
                $("#resule-gift-scrollWrap").show();
                $("#faiImgBox").hide();
                $(".attentionBox .tellToOthers,#resule-gift-box .attentionBox .menuBtnBox").css({
                    visibility: "hidden"
                });
                $("#Award_Round_Dot").css("display", "inline-block");
                var r = function (y) {
                    var C = $("#resule-gift-sucImg").height();
                    if (y) {
                        C = $("#luckContainer .imgContainer").height()
                    }
                    var B = n;
                    var A = $(window).height() - 16.45 * g_rem - B;
                    var z = 5.6;
                    if (g_config.style != 25 && g_config.style != 27) {
                        z -= 2.5;
                        A += 2 * g_rem
                    }
                    if (g_config.style == 25) {
                        B += 2.5 * g_rem
                    }
                    if (C > A) {
                        $("#resule-gift-buttonMenu").hide();
                        $("#resule-gift-buttonMenu-bottom").show().css({
                            bottom: B
                        });
                        $("#luckContainer").css({
                            "padding-bottom": z + "rem"
                        })
                    } else {
                        $("#resule-gift-buttonMenu").show();
                        $("#resule-gift-buttonMenu-bottom").hide();
                        $("#luckContainer").css({
                            "padding-bottom": "0"
                        })
                    }
                };
                setTimeout(r, 0)
                $("#resule-gift-sucImg").trigger("hd-resizable-resize");
                b.currentAward = w.giftName;
                b.currentAwardStyle = w.giftStyle;
                // if (g_config.style != 58 && g_config.style != 59 && g_config.style != 60 && g_config.style != 61 && g_config.style != 62 && g_config.style != 63 && g_config.style != 70) {
                //     b.wxConfig.setWxShareByStatus()
                // }
                this.hasGift = true;
                s.eq(0).text(w.giftStyle);
                s.eq(1).text(w.giftName);
                $("#resule-gift-sucImg").css({
                    width: w.awardImageW,
                    height: w.awardImageH
                });
                var u = $("#resule-gift-sucImg").parent().height() / 2 - parseRemToPx(g_config.clickTips.pointH) / 2;
                $("#lightPoint").css("top", u);
                u += 0.4 * g_rem;
                $("#click-view").css("top", u);
                if (w.awardIndex == 900) {
                    $("#resule-gift-sucImg").attr("src", g_config.comfort.comimg)
                } else {
                    if (!g_config.award) {
                        g_config.award = g_config.awardList[w.awardIndex - 1];
                        g_config.wxAward = g_config.awardList[w.awardIndex - 1]
                    }
                    $("#resule-gift-sucImg").attr("src", g_config.awardList[w.awardIndex - 1].aimg)
                    $("#resule-gift-sucImg").width('100%');
                }

                $(".gameBox,.home,.body").addClass("overflow-y-hidden");
                $(".bottomSkill").is(":visible") && $(".bottomSkill").hide()

            } else {
                $("#resule-gift-box").css("height", $(window).height() - $("#resule-gift-box .attentionBox").height());
                $("#resule-gift-scrollWrap,#resule-status-lotsBox").hide();
                $("#faiImgBox").show();
                $(".attentionBox .tellToOthers,#resule-gift-box .attentionBox .menuBtnBox").css({
                    visibility: "visible"
                });
                $("#resule-gift-buttonMenu-bottom").hide()
            }
            $(".menuAgain,.menuBack,.backListen,.repeatDraw,.TellToOther").css({
                bottom: $("#resule-gift-box").find(".attentionBox").height(),
                "line-height": "1.9rem"
            });
            if (g_config.haveAward) {
                $("#myAwardBtn").show()
            }
        };
        b.resulePoup = j
    })();
    b.otherAjaxComplete = function () {
        if (tryPlay) {
            var e = $(".ajaxLoadBar");
            e.addClass("ajaxComplete");
            setTimeout(function () {
                e.removeClass("ajaxLoad");
                e.removeClass("ajaxComplete");
                $(".ajaxLoadBg").hide()
            }, 500)
        } else {
            var e = top.$(".ajaxLoadBar");
            e.addClass("ajaxComplete");
            setTimeout(function () {
                e.removeClass("ajaxLoad");
                e.removeClass("ajaxComplete");
                top.$(".ajaxLoadBg").hide()
            }, 500)
        }
    };
    (function () {
        b.moduleLayer = {
            isSelected: false,
            selectedElem: null,
            isDrag: false,
            isCancel: true,
            isScroll: false,
            offsetParent: null
        };
        var g = (function () {
            var p = 1;
            return function (q) {
                var r = q.data("layerId");
                if (!r) {
                    r = "layerId-" + p;
                    q.addClass(r);
                    q.data("layerId", r);
                    p++
                }
            }
        })();

        function o(r) {
            var q, p = r.parent();
            while (!p.is($("body"))) {
                q = p.scrollTop();
                p.scrollTop(q == 0 ? q + 1 : q - 1);
                if (p.scrollTop() != q) {
                    p.scrollTop(q);
                    if (r[0].nodeName == "DIV" && r.css("position") == "static") {
                        r.css("position", "relative")
                    }
                    return true
                }
                p = p.parent()
            }
            return false
        }
        function f(q) {
            var r = $("." + q);
            var s = ["Left", "Right", "Top", "Bottom"];
            var p = "";
            $.each(s, function (t, u) {
                if ($("#" + q + "moveFrame" + u).length == 0) {
                    p += '<div id="' + q + "moveFrame" + u + '" class="moveFrame" style="border-' + u.toLowerCase() + '-width:1px"></div>'
                }
            });
            if (p) {
                if (r.data("isScrollAble")) {
                    if (r[0].nodeName == "IMG") {
                        r.parent().append(p)
                    } else {
                        r.append(p)
                    }
                } else {
                    $("body").append(p)
                }
                h(r)
            }
            $(".moveFrame").each(function (t, u) {
                if ($(this).attr("id").indexOf(q) != -1) {
                    $(this).css({
                        borderColor: "#dcdcdc",
                        background: "transparent"
                    })
                }
            })
        }
        function h(p, v) {
            var q = p.data("layerId");
            var r = p.offset().left;
            var z = p.offset().top;
            var x = p.outerWidth();
            var s = p.outerHeight();
            if (p.data("isScrollAble")) {
                $("#" + q + "moveFrameLeft").css({
                    left: 0,
                    top: 0,
                    width: 0,
                    height: s,
                    borderLeftWidth: 1
                });
                $("#" + q + "moveFrameRight").css({
                    left: x - 1,
                    top: 0,
                    width: 0,
                    height: s,
                    borderRightWidth: 1
                });
                $("#" + q + "moveFrameTop").css({
                    left: 0,
                    top: 0,
                    width: x,
                    height: 0,
                    borderTopWidth: 1
                });
                $("#" + q + "moveFrameBottom").css({
                    left: 0,
                    top: s - 1,
                    width: x,
                    height: 0,
                    borderBottomWidth: 1
                })
            } else {
                $("#" + q + "moveFrameLeft").css({
                    left: r,
                    top: z,
                    width: 0,
                    height: s,
                    borderLeftWidth: 1
                });
                $("#" + q + "moveFrameRight").css({
                    left: r + x - 1,
                    top: z,
                    width: 0,
                    height: s,
                    borderRightWidth: 1
                });
                $("#" + q + "moveFrameTop").css({
                    left: r,
                    top: z,
                    width: x,
                    height: 0,
                    borderTopWidth: 1
                });
                $("#" + q + "moveFrameBottom").css({
                    left: r,
                    top: z + s - 1,
                    width: x,
                    height: 0,
                    borderBottomWidth: 1
                })
            }
            if (v) {
                var A = p.closest(".ui-wrapper");
                if (A.length == 0) {
                    A = p
                }
                var y = A.find(".recoverBtn");
                var u = false;
                if (x < 2 * y.width()) {
                    u = true
                }
                if (s < 2 * y.height()) {
                    u = true
                }
                if (u && !p.data("_minRecoverBtn")) {
                    p.data("_minRecoverBtn", true);
                    A.find(".ui-resizable-imgTopRightTip").css({
                        backgroundPositionX: 0,
                        backgroundPositionY: 11,
                        right: -11,
                        top: -11
                    });
                    A.find(".ui-resizable-imgTopLeftTip").css({
                        backgroundPositionX: 11,
                        backgroundPositionY: 11,
                        left: -11,
                        top: -11
                    });
                    A.find(".ui-resizable-imgBottomLeftTip").css({
                        backgroundPositionX: 11,
                        backgroundPositionY: 0,
                        left: -11,
                        bottom: -11
                    });
                    A.find(".ui-resizable-imgBottomRightTip").css({
                        backgroundPositionX: 0,
                        backgroundPositionY: 0,
                        right: -11,
                        bottom: -11
                    });
                    y.css("right", -24)
                } else {
                    if (p.data("_minRecoverBtn")) {
                        p.data("_minRecoverBtn", false);
                        A.find(".ui-resizable-imgTopRightTip").css({
                            backgroundPositionX: 11,
                            backgroundPositionY: 0,
                            right: 0,
                            top: 0
                        });
                        A.find(".ui-resizable-imgTopLeftTip").css({
                            backgroundPositionX: 0,
                            backgroundPositionY: 0,
                            left: 0,
                            top: 0
                        });
                        A.find(".ui-resizable-imgBottomLeftTip").css({
                            backgroundPositionX: 0,
                            backgroundPositionY: 11,
                            left: 0,
                            bottom: 0
                        });
                        A.find(".ui-resizable-imgBottomRightTip").css({
                            backgroundPositionX: 11,
                            backgroundPositionY: 11,
                            right: 0,
                            bottom: 0
                        });
                        y.css("right", 3)
                    }
                }
            }
        }
        b.removeMoveFrame = function (p) {
            $("#" + p + "moveFrameLeft,#" + p + "moveFrameRight,#" + p + "moveFrameTop,#" + p + "moveFrameBottom").remove();
            $$("#imgSizeShow").hide()
        };
        b.removeAllEditLayer = function () {
            $(".moveFrame").remove();
            $(".moduleLayer").remove();
            $(".recoverBtn").hide();
            $(".ui-resizable-handle").hide();
            if (b.moduleLayer.selectedElem) {
                if (b.moduleLayer.selectedElem[0].nodeName == "IMG") {
                    if (b.moduleLayer.selectedElem.attr("id") == "tree3") {
                        b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"));
                        b.moduleLayer.offsetParent.css("z-index", $("#tree1").data("z-index"))
                    } else {
                        b.moduleLayer.offsetParent.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                    }
                } else {
                    b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                }
                b.moduleLayer.selectedElem = null;
                b.moduleLayer.offsetParent = null
            }
            b.moduleLayer.isSelected = false;
            b.moduleLayer.isScroll = false
        };
        b.getPosition = function (u, w, C, E) {
            var v = u.parent().position();
            if (u.attr("id") == "resule-gift-sucImg") {
                return
            }
            if (w.left && w.top) {
                v = {
                    left: w.left,
                    top: w.top
                }
            }
            if (v.left == 0 && v.top == 0 && !E) {
                var y = u.parent().position();
                if (y.left != 0 || y.top != 0) {
                    v = y
                }
            }
            if (E) {
                var A = j({
                    left: (w.width - C.width) / 2,
                    top: (w.height - C.height) / 2
                }, C);
                return A
            }
            if (!u.parent().is(":visible")) {
                v.left = parseFloat(u.parent().css("left"));
                v.top = parseFloat(u.parent().css("top"))
            }
            var p = b.getLackBorder(u);
            var q = {
                width: u.parent().width(),
                height: u.parent().height()
            };
            if (p) {
                var G, x;
                var s = v.left + q.width / 2;
                var r = v.top + q.height / 2;
                var D = u.data("theLimitOneData");
                if (!D) {
                    var F;
                    switch (p) {
                    case "n":
                        x = v.top;
                        F = x;
                        G = s - C.width / 2;
                        break;
                    case "e":
                        x = r - C.height / 2;
                        F = v.left + q.width;
                        G = v.left + q.width - C.width;
                        break;
                    case "s":
                        x = v.top + q.height - C.height;
                        G = s - C.width / 2;
                        F = v.top + q.height;
                        break;
                    case "w":
                        x = r - C.height / 2;
                        G = v.left;
                        F = v.left;
                        break
                    }
                    u.data("theLimitOneData", F)
                } else {
                    switch (p) {
                    case "n":
                        x = D;
                        G = s - C.width / 2;
                        break;
                    case "e":
                        x = r - C.height / 2;
                        G = D - C.width;
                        break;
                    case "s":
                        x = D - C.height;
                        G = s - C.width / 2;
                        break;
                    case "w":
                        x = r - C.height / 2;
                        G = D;
                        break
                    }
                }
                p = null;
                var z = j({
                    left: G,
                    top: x
                }, C);
                return z
            } else {
                var t;
                var B = u.data("defData");
                if (B && B.left) {
                    t = {
                        left: parseRemToPx(B.width) / 2 + parseRemToPx(B.left),
                        top: parseRemToPx(B.height) / 2 + parseRemToPx(B.top)
                    }
                } else {
                    t = u.data("defPositionData");
                    if (!t) {
                        var s = v.left + q.width / 2;
                        var r = v.top + q.height / 2;
                        t = {
                            left: s,
                            top: r
                        };
                        u.data("defPositionData", {
                            left: s,
                            top: r
                        })
                    }
                }
                var z = j({
                    left: t.left - C.width / 2,
                    top: t.top - C.height / 2
                }, C);
                return z
            }
        };

        function j(s, p) {
            var r = s.left;
            var q = s.top;
            if (s.left < 0) {
                r = 0
            }
            if (s.top < 0) {
                q = 0
            }
            return {
                left: r,
                top: q
            }
        }
        b.getLackBorder = function l(t) {
            var p = t.data("resizable");
            if (p && p.options && p.options.handles) {
                var s = ["n", "e", "s", "w", "ne", "nw", "sw", "se"];
                var u = p.options.handles.split(",");
                $.each(u, function (v, y) {
                    var w = false;
                    var x = 0;
                    $.each(s, function (A, z) {
                        if (z == y) {
                            s.splice(A, 1);
                            return false
                        }
                    })
                });
                var r;
                var q = 0;
                $.each(s, function (v, w) {
                    if (w.length == 1) {
                        r = w;
                        return false
                    }
                });
                $.each(s, function (v, w) {
                    if (w.length > 1 && w.indexOf(r) >= 0) {
                        q++
                    }
                });
                if ((s.length - q) == 1) {
                    return r
                }
                return false
            }
            return false
        };
        b.getPosAndSize = function (r, t, s) {
            !s && (s = b.Img.MODE_SCALE_DEFLATE_FILL);
            var w = b.Img.calcSize(r.width, r.height, t.width, t.height, s);
            var v = t.left ? t.left : 0;
            var u = t.top ? t.top : 0;
            var p = {
                left: (t.width - w.width) / 2 + v,
                top: (t.height - w.height) / 2 + u,
            };
            var q = $.extend(w, p);
            return q
        };
        (function () {
            var q = {};
            var p = {};
            var r = 0;
            b.saveModuleLayerImg = function (t, s) {
                if (typeof t == "function") {
                    q["_cb" + (r++)] = t
                } else {
                    if (t && t.length > 0) {
                        $.each(t, function (v, u) {
                            if (!u.from) {
                                return
                            }
                            q[u.from] = u.defSrc;
                            s && (p[u.from] = s)
                        })
                    }
                }
            };
            b.getModuleLayerImg = function () {
                var t = [];
                $.each(q, function s(v, y) {
                    if (typeof y == "function") {
                        y = y();
                        if ($.isArray(y) || ($.isPlainObject(y) && !y.from)) {
                            $.each(y, s);
                            return
                        }
                    }
                    if ($.isPlainObject(y)) {
                        v = y.from;
                        y = y.defSrc
                    }
                    var w = $(v),
                        x, u;
                    if (w.length > 0) {
                            x = {
                                selecter: v,
                                elem: w,
                                defSrc: y,
                            };
                            if (u = p[v]) {
                                x.edit = u
                            }
                            t.push(x)
                        }
                });
                return t
            }
        })();
        b.initModuleLayer = n(function (t, s, v, q, u, w, p) {
            if (t.data("_hasBin")) {
                return
            }
            t.data("_hasBin", true);
            g(t);
            var r = false;
            if (s == 2) {
                t.each(function (x, y) {
                    if (this.nodeName == "IMG") {
                        r = true;
                        return false
                    }
                })
            }
            if (s == -1 || r) {
                if (t.length > 0) {
                    t.on("load", function (C) {
                        var y = $(this).data("your-Original-Size");
                        if (!y) {
                            return
                        }
                        var B = $(this).data("defData");
                        var z;
                        if (!B) {
                            z = {
                                width: $(this).parent().wdith(),
                                height: $(this).parent().height()
                            }
                        } else {
                            z = {
                                width: parseRemToPx(B.width),
                                height: parseRemToPx(B.height)
                            }
                        }
                        var A = b.Img.calcSize(y.width, y.height, z.width, z.height, b.Img.MODE_SCALE_DEFLATE_FILL);
                        var E = b.getPosition($(this), z, A);
                        var x = $(this);
                        $(this).hasClass("slaveImg") && !$(this).hasClass("notNeedFatherChage") && (x = $(this).add($(this).parent()));
                        x.css({
                            width: A.width,
                            height: A.height
                        });
                        var D = $.extend({}, A);
                        D = $.extend(D, E);
                        if ($(this).attr("id") != "resule-gift-sucImg") {
                            x.css({
                                left: E.left,
                                top: E.top
                            })
                        } else {
                            $$(function () {
                                var F = parent.game.$checkeIndex;
                                parent.game._awardList[F].aimgw = parsePxToRem(A.width + "px");
                                parent.game._awardList[F].aimgh = parsePxToRem(A.height + "px")
                            })
                        }
                        $(this).hdTrigger("hd-resizable-autoChange", [this, D, E]);
                        $(this).removeData("your-Original-Size").attr("resize", "1")
                    })
                }
            }
            t.on("selectstart", function () {
                return false
            });
            t.attr("title", "点击后编辑");
            t.addClass("defBgColor");
            t.data("mouseover", function (y) {
                if ($(this).css("cursor") !== "move") {
                    $(this).css("cursor", "pointer")
                }
                if (($(this).hasClass("codeOptInfo") && ($(this).text() == "复制口令发送到公众号" || $(this).text() == "复制券码发送到公众号")) || (($(this).find(".text").css("display") == "inline" && ($(".codeOptInfo").text() == "复制口令发送到公众号" || $(".codeOptInfo").text() == "复制券码发送到公众号")) && !$(this).hasClass("servicePhone")) || $(this).hasClass("disableBtn")) {
                    $(this).css("cursor", "default")
                }
                if ($(this).data("moduleLayerDisable")) {
                    $(this).attr("title", "");
                    return
                }
                var x = $(this).data("layerId");
                if (!$(this).data("hd-moduleLayerList")) {
                    $(this).attr("title", "")
                }
                if (!$(this).data("isScrollAble")) {
                    $(this).data("isScrollAble", o($(this)))
                }
                clearTimeout($(this).data("initModuleTimer"));
                if (b.ResizeDoc || $("#" + x + "moduleLayer").length > 0 || $(this).hasClass("answerItem") || $(this).hasClass("answer") || $(this).hasClass("thePcEgg") || $(this).attr("id") == "shake" || $(this).attr("id") == "selfAwardLine") {
                    return
                }
                f(x)
            });
            t.off("mouseover").off("mouseleave").on("mouseover", t.data("mouseover")).on("mouseleave", function (y) {
                var x = $(this).data("layerId");
                $(this).data("initModuleTimer", setTimeout(function () {
                    if ((!b.ResizeDoc && !b.moduleLayer.isSelected) || (b.moduleLayer.isSelected && (b.moduleLayer.selectedElem[0] != y.target && b.moduleLayer.selectedElem[0] != $(y.target).closest("." + x)[0]))) {
                        b.removeMoveFrame(x);
                        $("#" + x + "moduleLayer").remove()
                    }
                }, 100))
            }).on("click", function (A) {
                A.stopPropagation();
                if ($(this).data("moduleLayerDisable")) {
                    return
                }
                if (!b.moduleLayer.isDrag) {
                    var x = $(this).parent().data("layerId") ? $(this).parent().data("layerId") : $(this).data("layerId");
                    if (!$(this).is(b.moduleLayer.selectedElem)) {
                        b.removeAllEditLayer()
                    }
                    f(x);
                    e(x);
                    $(".moveFrame").css({
                        borderColor: "#2B73BA",
                        background: "#79cef9"
                    });
                    if ($(this).children(".ui-resizable-handle")[0]) {
                        $(this).children(".ui-resizable-handle").show()
                    } else {
                        $(this).siblings(".ui-resizable-handle").show()
                    }
                    if ($(this).attr("resize") == 1 || $(this).parent().attr("resize") == 1) {
                        var y = $(this).closest(".ui-wrapper");
                        if (y.length > 0) {
                            y.find(".recoverBtn").show()
                        } else {
                            if ($(this).hasClass("thePcEgg") || $(this).attr("id") == "shake") {
                                $(this).siblings(".recoverBtn").show()
                            } else {
                                $(this).find(".recoverBtn").show()
                            }
                        }
                    }
                    b.moduleLayer.isSelected = true;
                    if (b.moduleLayer.selectedElem) {
                        if (b.moduleLayer.selectedElem[0].nodeName == "IMG" && b.moduleLayer.selectedElem.attr("id") != "tree3") {
                            b.moduleLayer.offsetParent.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                        } else {
                            b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                        }
                    }
                    if ($(this)[0].nodeName == "IMG") {
                        if ($(this).hasClass("student") || $(this).hasClass("teacher") || $(this).hasClass("clickBtn")) {
                            var z = $(this);
                            b.moduleLayer.offsetParent = $(this);
                            while (z.parent()[0] != document) {
                                if (z.parent().css("z-index") != "auto") {
                                    b.moduleLayer.offsetParent = z.parent()
                                }
                                z = z.parent()
                            }
                        } else {
                            if ($(this).closest("#logoImgBox")[0]) {
                                b.moduleLayer.offsetParent = $(this).closest("#logoImgBox")
                            } else {
                                if (!$(this).closest(".imgContainer")[0]) {
                                    b.moduleLayer.offsetParent = $(this)
                                } else {
                                    b.moduleLayer.offsetParent = $(this).parent()
                                }
                            }
                        }
                        $(this).data("z-index", b.moduleLayer.offsetParent.css("z-index"));
                        b.moduleLayer.offsetParent.css("z-index", "700")
                    } else {
                        $(this).data("z-index", $(this).css("z-index")).css("z-index", "700")
                    }
                    if ($(this).attr("id") == "shake" || $(this).hasClass("editTarget-egg")) {
                        b.moduleLayer.selectedElem = $(this).parent();
                        return
                    }
                    if ($(this).attr("id") == "tree1" && parent.$("#editActive").find(".topBar .checked .name").text() == "挑战成功") {
                        $("#tree3").data("z-index", $("#tree3").css("z-index")).css("z-index", 200);
                        b.moduleLayer.selectedElem = $("#tree3");
                        return
                    }
                    b.moduleLayer.selectedElem = $(this)
                } else {
                    b.moduleLayer.isDrag = false
                }
            }).on("dblclick", function (z) {
                if ($(this).data("moduleLayerDisable")) {
                    return
                }
                var y = $(this).data("layerId");
                e(y);
                var x = $("#" + y + "moduleLayer");
                if (x.children().length != 0 && (!u || $(this).find("img")[0] || $(this)[0].nodeName)) {
                    var A = x.children().length - 1;
                    x.children().eq(A).click();
                    z.preventDefault();
                    z.stopPropagation()
                } else {
                    x.children().each(function (B, C) {
                        if ($(C).text() == "样式设置" || $(C).text() == "样式" || $(C).text() == "文字颜色") {
                            $(C).click();
                            z.preventDefault();
                            z.stopPropagation()
                        }
                    })
                }
            });
            if (p || s != -2) {
                b.saveModuleLayerImg(q, t);
                b.addModuleLayer(t, {
                    name: typeof p === "string" ? p : "编辑",
                    onclick: function (y) {
                        b.moduleLayer.isCancel = false;
                        setTimeout(function () {
                            b.moduleLayer.isCancel = true
                        }, 10);
                        parent.Edit.showEditByGame.call(y.data.target, s, v, q);
                        parent.operateFlagList[17] = true;
                        if (v == "awardSetting") {
                            var x = $(this).data("layerId");
                            b.removeMoveFrame(x);
                            $("#" + x + "moduleLayer").remove()
                        }
                        $(y.data.target).hdTrigger("hd-clickEditBtn", [s, v, q]);
                        return false
                    }
                })
            }
            if (u) {
                b.addModuleLayer(t, {
                    name: typeof u === "string" ? u : "样式",
                    onclick: function (x) {
                        parent.Edit.Css.showCssByGame.call(x.data.target, v, w);
                        parent.operateFlagList[21] = true;
                        return false
                    }
                })
            }
            t.trigger("hd-moduleLayer-after");
            t = null
        });
        b.addModuleLayer = n(function (r, q) {
            var p = r.data("hd-moduleLayerList");
            if (!p) {
                p = []
            }
            p.push(q);
            r.data("hd-moduleLayerList", p)
        });

        function e(q) {
            var u = q + "moduleLayer";
            var v = $("." + q);
            var s = v.data("hd-moduleLayerList");
            if (!s) {
                return
            }
            $("#" + u).remove();
            var p = $("<div id='" + u + "' class='moduleLayer' _mouseIn='0'></div>");
            if ($(v).data("isScrollAble") && !v.is($("#ruleBox").children().first())) {
                if (v[0].nodeName == "IMG") {
                    v.parent().append(p)
                } else {
                    v.append(p)
                }
            } else {
                $("body").append(p)
            }
            for (var w = s.length - 1; w >= 0; w--) {
                var x = s[w];
                if (x && x.onclick) {
                    var r;
                    if (x.html) {
                        r = $(x.html)
                    } else {
                        var t = x["class"] ? (" " + x["class"]) : "";
                        r = $("<a class='item tool" + t + "' hidefocus='true' href='javascript:;'>" + x.name + "</a>")
                    }
                    p.append(r);
                    x.data = x.data || {};
                    x.data.target = v;
                    r.on("click", x.data, x.onclick);
                    x.onshow && x.onshow.call(r, x.data)
                }
            }
            p.css("margin", 0);
            m(v, p);
            p.mouseover(function () {
                clearTimeout(v.data("initModuleTimer"))
            }).mouseleave(function (y) {
                if (!b.moduleLayer.isSelected) {
                    v.data("initModuleTimer", setTimeout(function () {
                        b.removeMoveFrame(q);
                        $("#" + u).remove();
                        var z = v.siblings(".ui-resizable-handle,.recoverBtn");
                        z = (z.length > 0) ? z : (v.find(".ui-resizable-handle,.recoverBtn"));
                        z.siblings(".ui-resizable-handle,.recoverBtn").hide()
                    }, 100))
                }
            });
            return p
        }
        function m(r, p) {
            if (!p) {
                p = $(".moduleLayer")
            }
            if (p.length < 1) {
                return
            }
            var w = r.outerWidth();
            var u = r.offset().left + w - p.outerWidth() - 2;
            if (u < 0) {
                u = 0
            }
            if (r.offset().left < $(window).width() && r.offset().left + w > $(window).width()) {
                u = $(window).width() - p.outerWidth() - 1
            }
            var t = (r.offset().top - p.height() - 1);
            var v = r.data("isScrollAble");
            if (v) {
                var s = $("#ruleBox .poupMainInfo");
                var x = s.children().first();
                var y = r.is(x)
            }
            if (v && (!y || p.parent().is(r))) {
                p.css("left", u - r.offset().left);
                if (y) {
                    var q = parseFloat(x.css("margin-top"));
                    if (isNaN(q)) {
                        q = 0
                    }
                    p.css("top", Math.min(s.scrollTop() - q, 0))
                } else {
                    p.css("top", t > 0 ? -p.height() - 1 : -r.offset().top)
                }
            } else {
                p.css("left", u);
                p.css("top", t > 0 ? t : 0 + "px")
            }
        }
        $("#ruleBox .poupMainInfo").on("scroll", function () {
            b.moduleLayer.isScroll = true;
            var q = $(this);
            if (b.moduleLayer.isSelected) {
                var t = q.children().first();
                var p = b.moduleLayer.selectedElem.data("layerId");
                var s = $("#" + p + "moduleLayer");
                if (t.is(b.moduleLayer.selectedElem)) {
                    if (!s.parent().is(t)) {
                        s.css({
                            left: 0,
                            top: 0
                        });
                        t.append(s);
                        m(b.moduleLayer.selectedElem)
                    }
                    var r = parseFloat(t.css("margin-top"));
                    if (isNaN(r)) {
                        r = 0
                    }
                    s.css("top", Math.min(q.scrollTop() - r, 0))
                }
            }
        });
        b.moduleSlaveImgResize = n(function (t, u, v) {
            var p = v || "body";
            if (t.parents(".home").length > 0 || t.parents(".zlEnterHome").length > 0) {
                p = "#limitRange"
            }
            t.parent("div.ui-wrapper").css({
                padding: "0"
            });
            t.resizable("destroy");
            var q = $(t).parents("div.imgContainer");
            var r = q.find(".slaveImg");
            if (q.length == 0) {
                q = t
            }
            if (r.length == 0) {
                r = t
            }
            g(r);
            r.data("defData", u);
            var s = {
                handles: "n,e,s,w,ne,nw,sw,se",
                autoHide: true,
                maxWidth: 318,
                maxHeight: 504,
                minWidth: 20,
                minHeight: 20,
                aspectRatio: true,
                containment: p,
                alsoResize: t,
                create: function (w, x) {
                    var z = $(this);
                    if (Math.abs(z.width() - parseRemToPx(u.width)) > 1 || Math.abs(z.height() - parseRemToPx(u.height)) > 1) {
                        r.attr("resize", 1)
                    }
                    z.css({
                        position: "relative",
                        "float": "none",
                        "z-index": "100"
                    });
                    if (z.width() < 40 || z.height() < 40) {
                        z.css("padding", "2px")
                    } else {
                        z.css("padding", "0")
                    }
                    z.append("<a class='recoverBtn' href='javascript:;'></a>");
                    z.find(".recoverBtn").on("click", function (A) {
                        $(this).hide();
                        r.attr("resize", 0);
                        z.add(r).css(u);
                        r.hdTrigger("hd-resizable-recover", [A, u]);
                        setTimeout(function () {
                            m(r);
                            h(r, true);
                            $("#resule-gift-sucImg").trigger("hd-resizable-resize")
                        }, 10);
                        parent.changeIsSave()
                    });
                    z.attr("_from", r.attr("id"));
                    (function () {
                        var C = [
                            ["s", "Bottom"],
                            ["n", "Top"],
                            ["w", "Left"],
                            ["e", "Right"]
                        ];
                        for (var B = 0; B < 4; B++) {
                            z.children(".ui-resizable-" + C[B][0]).addClass("ui-resizable-img" + C[B][1] + "Tip").css({
                                "z-index": "9030"
                            });
                            if (B < 2) {
                                for (var A = 2; A < 4; A++) {
                                    z.children(".ui-resizable-" + C[B][0] + C[A][0]).addClass("ui-resizable-img" + C[B][1] + C[A][1] + "Tip").css({
                                        "z-index": "9030"
                                    })
                                }
                            }
                        }
                    })();
                    var y = z.parent();
                    z.children(".ui-resizable-handle").mousedown(function (B) {
                        var A = y.attr("href");
                        if (typeof A != "undefined" && A.length > 0) {
                            y.removeAttr("href");
                            y.attr("onclick", "return false;")
                        }
                    });
                    if (r.data("layerId")) {
                        r.off("mouseover").off("mouseleave")
                    }
                    z.mouseover(function () {
                        clearTimeout(r.data("initModuleTimer"));
                        if (b.ResizeDoc) {
                            return
                        }
                        if (r.data("layerId")) {
                            r.data("mouseover").call(r)
                        }
                        r.removeData("resizable-isLeave")
                    }).mouseleave(function () {
                        r.data("initModuleTimer", setTimeout(function () {
                            if ((!b.ResizeDoc && !b.moduleLayer.isSelected) || (b.moduleLayer.isSelected && (r.parent()[0] != b.moduleLayer.selectedElem[0] && r[0] != b.moduleLayer.selectedElem[0] && !b.moduleLayer.selectedElem.is($("#tree3"))))) {
                                var A = r.data("layerId");
                                b.removeMoveFrame(A);
                                $("#" + A + "moduleLayer").remove();
                                z.children(".ui-resizable-handle").hide();
                                q.find(".recoverBtn").hide()
                            } else {
                                r.data("resizable-isLeave", true)
                            }
                        }, 100))
                    });
                    r.hdTrigger("hd-resizable-create", [w, x])
                },
                start: function (w, x) {
                    if (x.axis.length === 2) {
                        $(this).resizable("option", "aspectRatio", true)
                    } else {
                        $(this).resizable("option", "aspectRatio", false)
                    }
                    f(r.data("layerId"));
                    b.ResizeDoc = q;
                    $$("#imgSizeShow").show();
                    $("#" + r.data("layerId") + "moduleLayer").remove();
                    x.originalElement.parent().find(".recoverBtn").hide();
                    $(this).css("position", "relative");
                    $(".ui-resizable-bottomTip,.ui-resizable-cancelTip,.draggableBtn").css({
                        opacity: "0"
                    });
                    r.hdTrigger("hd-resizable-start", [w, x]);
                    $(".ui-resizable-handle").hide()
                },
                resize: function (x, y) {
                    parent.changeIsSave();
                    r.hdTrigger("hd-resizable-resize", [x, y]);
                    h(r, true);
                    var w = $$("#imgSizeShow");
                    w.find("span").eq(0).text(Math.round(r.width()) * 2);
                    w.find("span").eq(1).text(Math.round(r.height()) * 2);
                    w.css({
                        width: "auto",
                        height: "auto",
                        top: x.pageY + 15,
                        left: x.pageX - 30
                    })
                },
                stop: function (A, B) {
                    if (b.moduleLayer.isSelected) {
                        r.click()
                    }
                    delete b.ResizeDoc;
                    if (r.data("resizable-isLeave")) {
                        $(this).mouseleave();
                        r.removeData("resizable-isLeave")
                    } else {
                        r.mouseover()
                    }
                    $$("#imgSizeShow").hide();
                    $(".ui-resizable-bottomTip,.ui-resizable-cancelTip,.draggableBtn").css({
                        opacity: "1"
                    });
                    q.find(".slaveImg").attr("resize", "1");
                    q.find(".recoverBtn").show();
                    if ($(this).width() < 40 || $(this).height() < 40) {
                        $(this).css("padding", "2px")
                    } else {
                        $(this).css("padding", "0")
                    }
                    var C = $(this).parent();
                    var z = C.attr("link");
                    if (typeof z != "undefined" && z.length > 0) {
                        setTimeout(function () {
                            C.attr("href", z);
                            C.removeAttr("onclick")
                        }, 100)
                    }
                    var y = $(this).data("defData");
                    if (B.position && B.size && y && !y.left) {
                        var w = B.position.left + B.size.width / 2;
                        var x = B.position.top + B.size.height / 2;
                        r.data("defPositionData", {
                            left: w,
                            top: x
                        })
                    }
                    parent.operateFlagList[17] = true;
                    r.hdTrigger("hd-resizable-stop", [A, B])
                }
            };
            t.hdTrigger("hd-resizable-before", [s]);
            t.resizable(s);
            t.off(".slaveImg").hdTrigger("hd-resizable-after")
        });
        b.moduleDraggale = n(function (v, t, w) {
            var s = v.parent();
            var r = v;
            var q = w || "body";
            if (t) {
                r = s
            }
            if (t === false) {
                s = r
            }
            r.css("cursor", "move");
            r.css("position", "absolute");
            if (r.parents(".home").length > 0 || r.parents(".zlEnterHome").length > 0) {
                q = "#limitRange"
            }
            if (g_config.style == 69) {
                q = "#limitRange2"
            }
            var p = parseInt(s.css("z-index"));
            var u = {
                start: function (x, y) {
                    v.mouseover();
                    s.children(".ui-resizable-handle").hide();
                    p = parseInt(s.css("z-index"));
                    if (isNaN(p)) {
                        p = ""
                    }
                    s.css("z-index", "9999");
                    v.hdTrigger("hd-draggable-start", [x, y])
                },
                drag: function (x, y) {
                    parent.changeIsSave();
                    if (v[0].nodeName != "DIV") {
                        b.moduleLayer.isDrag = true
                    }
                    h(v);
                    $("#" + v.data("layerId") + "moduleLayer").remove();
                    v.parent().find(".recoverBtn").hide();
                    v.hdTrigger("hd-draggable-drag", [x, y])
                },
                stop: function (B, C) {
                    s.css("z-index", p);
                    if (C.position) {
                        var A = {
                            width: s.outerWidth(),
                            height: s.outerHeight()
                        };
                        var y = C.position.left + A.width / 2;
                        var z = C.position.top + A.height / 2;
                        v.data("defPositionData", {
                            left: y,
                            top: z
                        });
                        var x = b.getLackBorder(v);
                        if (x) {
                            var D;
                            switch (x) {
                            case "n":
                                D = C.position.top;
                                break;
                            case "e":
                                D = C.position.left + A.width;
                                break;
                            case "s":
                                D = C.position.top + A.height;
                                break;
                            case "w":
                                D = C.position.left;
                                break
                            }
                            v.data("theLimitOneData", D)
                        }
                    }
                    if (b.moduleLayer.isSelected) {
                        v.click();
                        return
                    }
                    b.removeAllEditLayer();
                    v.mouseover();
                    parent.operateFlagList[17] = true;
                    v.hdTrigger("hd-draggable-stop", [B, C])
                },
                opacity: 0.5,
                scroll: false,
                distance: 1,
                containment: q,
                addClasses: false
            };
            v.hdTrigger("hd-draggable-before", [u]);
            r.draggable(u);
            v.hdTrigger("hd-draggable-after")
        });

        function n(p) {
            return function () {
                var t = this;
                var q = arguments.callee;
                var r = arguments[0];
                if (b.getType(r) === "array") {
                    if (b.getType(r[0]) === "array") {
                        $.each(r, function (u, v) {
                            if (b.getType(v) === "array") {
                                q.call(t, v)
                            }
                        })
                    } else {
                        q.apply(t, r)
                    }
                } else {
                    (typeof r === "string" || r.nodeType) && (r = $(r));
                    if (r instanceof jQuery && r.length > 0) {
                        var s = Array.prototype.slice.call(arguments);
                        if (r.length > 1) {
                            r.each(function () {
                                s[0] = $(this);
                                p.apply(t, s)
                            })
                        } else {
                            s[0] = r;
                            p.apply(t, s)
                        }
                    }
                    return t
                }
            }
        }
        function k(q, t, s, p) {
            var r = "hd-" + s + "-" + p;
            if (r === "hd-resizable-before" || r === "hd-draggable-before") {
                q.on(r, function (v, u) {
                    $.extend(u, t)
                })
            } else {
                q.on(r, function (v) {
                    v.stopPropagation();
                    var u = Array.prototype.slice.call(arguments);
                    u.shift();
                    t.apply(this, u)
                })
            }
            return q
        }
        $.fn.extend({
            hdTrigger: function (q, p) {
                this.trigger.apply(this, arguments)
            },
            setResizableOption: function (p) {
                return k(this, p, "resizable", "before")
            },
            setDraggableOption: function (p) {
                return k(this, p, "draggable", "before")
            },
            addResizableFn: function (q, p) {
                return k(this, p, "resizable", q)
            },
            addDraggableFn: function (q, p) {
                return k(this, p, "draggable", q)
            },
            addEditUploadFn: function (q, p) {
                return k(this, p, "editUpload", q)
            },
            awardSlide: function (q) {
                if (typeof q === "object") {
                    var s = {
                        margin_bottom: "0",
                        padding_right: "0",
                        speed: 15
                    };
                    var q = $.extend(s, q);
                    this.each(function () {
                        $(this).show();
                        var t = $(this),
                            x = t.children("ul");
                        var u = $(window).width();
                        var w = 0;
                        var y = 8;
                        $(".awardInfoList .uerItem").css({
                                "padding-left": q.padding_left,
                                "padding-right": q.padding_right
                            });
                        $(".awardInfoList .uerItem").each(function () {
                                w += $(this).outerWidth(true)
                            });
                        x.css({
                                width: w * 2 + 10
                            });
                        x.append(x.find("li").clone().css("z-index", 100));
                        var v = x.find("li");
                        v.removeClass("bottomScrollAnima");
                        y = w / u * y;
                        v.css({
                                width: "50%",
                                left: u + 20,
                                "animation-duration": y * 1000 + "ms",
                                "-webkit-animation-duration": y * 1000 + "ms",
                                "-ms-animation-duration": y * 1000 + "ms"
                            });
                        v.eq(0).addClass("bottomScrollAnima");
                        setTimeout(function () {
                                v.eq(1).addClass("bottomScrollAnima");
                            }, y / 2 * 1000);
                        $(this).data("awardSlideOptions", y)
                    })
                } else {
                    if (q === "stop") {
                        $(this).hide();
                        $(this).find("li").eq(1).remove();
                        $(this).removeData("awardSlideOptions")
                    } else {
                        if (q === "wakeup") {
                            $(this).show();
                            var r = $(this).data("awardSlideOptions");
                            var p = $(this).children("ul").find("li");
                            p.eq(1).removeClass("bottomScrollAnima");
                            setTimeout(function () {
                                p.eq(1).addClass("bottomScrollAnima")
                            }, r / 2 * 1000)
                        }
                    }
                }
                return $(this)
            },
        });
        b.Img = {
            MODE_SCALE_FILL: 1,
            MODE_SCALE_WIDTH: 2,
            MODE_SCALE_HEIGHT: 3,
            MODE_SCALE_DEFLATE_WIDTH: 4,
            MODE_SCALE_DEFLATE_HEIGHT: 5,
            MODE_SCALE_DEFLATE_FILL: 6,
            MODE_SCALE_DEFLATE_MAX: 7
        };
        b.Img.isNull = function (p) {
            return (typeof p == "undefined") || (p == null)
        };
        b.Img.optimize = function (t, v, r) {
            var q = new Image();
            q.src = t.src;
            var s = q.width;
            var p = q.height;
            if (b.Img.isNull(s) || s == 0 || b.Img.isNull(p) || p == 0) {
                s = t.width;
                p = t.height
            }
            var u = b.Img.calcSize(s, p, v.width, v.height, v.mode, r);
            t.width = u.width;
            t.height = u.height;
            if (v.display == 1) {
                t.style.display = "inline"
            } else {
                if (v.display == 2) {
                    t.style.display = "none"
                } else {
                    t.style.display = "block"
                }
            }
            return {
                width: t.width,
                height: t.height
            }
        };
        b.Img.calcSize = function (p, w, u, v, r, q) {
            if (isNaN(u)) {
                u = parseFloat(u) * g_rem
            }
            if (isNaN(v)) {
                v = parseFloat(v) * g_rem
            }
            var x = {
                width: p,
                height: w
            };
            if (r == b.Img.MODE_SCALE_FILL) {
                var t = p / u;
                var s = w / v;
                if (t > s) {
                    x.width = u;
                    x.height = w / t
                } else {
                    x.width = p / s;
                    x.height = v
                }
            } else {
                if (r == b.Img.MODE_SCALE_WIDTH) {
                    var t = p / u;
                    x.width = u;
                    x.height = w / t
                } else {
                    if (r == b.Img.MODE_SCALE_HEIGHT) {
                        var s = w / v;
                        x.width = p / s;
                        x.height = v
                    } else {
                        if (r == b.Img.MODE_SCALE_DEFLATE_WIDTH) {
                            var t = p / u;
                            if (t > 1) {
                                x.width = u;
                                x.height = w / t
                            }
                        } else {
                            if (r == b.Img.MODE_SCALE_DEFLATE_HEIGHT) {
                                var s = w / v;
                                if (s > 1) {
                                    x.width = p / s;
                                    x.height = v
                                }
                            } else {
                                if (r == b.Img.MODE_SCALE_DEFLATE_FILL) {
                                    var t = p / u;
                                    var s = w / v;
                                    if (t > s) {
                                        if (t > 1) {
                                            x.width = u;
                                            x.height = w / t
                                        }
                                    } else {
                                        if (s > 1) {
                                            x.width = p / s;
                                            x.height = v
                                        }
                                    }
                                } else {
                                    if (r == b.Img.MODE_SCALE_DEFLATE_MAX) {
                                        if (p > u && w > v) {
                                            var t = p / u;
                                            var s = w / v;
                                            if (t < s) {
                                                x.width = u;
                                                x.height = w / t
                                            } else {
                                                x.width = p / s;
                                                x.height = v
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (!q) {
                x.width = Math.floor(x.width);
                x.height = Math.floor(x.height)
            }
            if (x.width == 0) {
                x.width = 1
            }
            if (x.height == 0) {
                x.height = 1
            }
            return x
        }
    })();
    (function () {
        var g = 0,
            f, h, e, j;

        function k() {
                f = $('<div id="logBox"><div id="log_head"><div id="log_close" class="log_icon">╳</div><div id="log_min" class="log_icon">━</div>' + (typeof g_config !== "undefined" && g_config.test ? '<div id="log_share" class="log_icon">share</div>' : "") + '</div><div id="log_text_wrap"><div id="log_text"></div></div></div>');
                h = f.find("#log_text");
                e = f.find("#log_text_wrap");
                j = $('<div id="log_max" class="hide"><div id="log_max_inner"><div id="log_max_innerText">＋</div></div></div>');
                var n = f.find("#log_head");
                var m = {};
                var l = $("body");
                if (l.length < 0) {
                    return
                }
                l.append(f);
                l.append(j);
                n.on("touchstart", function (o) {
                    o.preventDefault();
                    o.stopPropagation();
                    var p = o.originalEvent.targetTouches[0];
                    m.x = p.pageX;
                    m.y = p.pageY
                }).on("touchmove", function (o) {
                    o.preventDefault();
                    o.stopPropagation();
                    var r = o.originalEvent.targetTouches[0];
                    var q = f.offset().left + r.pageX - m.x;
                    var p = f.offset().top + r.pageY - m.y;
                    m.x = r.pageX;
                    m.y = r.pageY;
                    if (q > -0.2 * f.width() && q + 0.5 * f.width() < $(window).width()) {
                        f[0].style.left = q + "px"
                    }
                    if (p > 0 && p + 0.5 * f.height() < $(window).height()) {
                        f[0].style.top = p + "px"
                    }
                });
                j.on("touchstart", function () {
                    j.hide();
                    f.show();
                    j.removeClass("hasNewErr")
                });
                h.on("touchstart", ".log_flag", function () {
                    var o = $(this).parent();
                    if (o.hasClass("log_line_ellipsis")) {
                        o.removeClass("log_line_ellipsis")
                    } else {
                        o.addClass("log_line_ellipsis")
                    }
                })
            }
    })();
    b.encodeBase64 = function (m) {
        var l, k, h;
        var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var j = 0,
            e = m.length,
            g = "";
        while (j < e) {
                l = m.charCodeAt(j++) & 255;
                if (j == e) {
                    g += f.charAt(l >> 2);
                    g += f.charAt((l & 3) << 4);
                    g += "==";
                    break
                }
                k = m.charCodeAt(j++);
                if (j == e) {
                    g += f.charAt(l >> 2);
                    g += f.charAt(((l & 3) << 4) | ((k & 240) >> 4));
                    g += f.charAt((k & 15) << 2);
                    g += "=";
                    break
                }
                h = m.charCodeAt(j++);
                g += f.charAt(l >> 2);
                g += f.charAt(((l & 3) << 4) | ((k & 240) >> 4));
                g += f.charAt(((k & 15) << 2) | ((h & 192) >> 6));
                g += f.charAt(h & 63)
            }
        return g
    };
    b.initEdit = function (x) {
        var A = x.origin,
            q = x.originDef,
            e = x.originMod,
            w = /\b(editTarget|editRelate)(-\w+?)(-\d+?)?\b/,
            m = {};

        $.each(A, function (C, E) {
                if (!E.showPath) {
                    E.showPath = [];
                    if (q[C].showPath) {
                        for (var D = 0, F = q[C].showPath.length; D < F; D++) {
                            E.showPath.push(1)
                        }
                    }
                }
            });

        function j(D, J) {
                var K = "getImgInfo-" + D;
                if (J) {
                    K = "getImgInfo-rem-" + D
                }
                var G = m[K];
                if (G) {
                    return G
                }
                var F = s(D)[0];
                if (!F) {
                    return
                }
                G = {
                    name: D,
                    css: F.css
                };
                if (F.path) {
                    if (b.getType(F.path[0]) === "array") {
                        G.path = [];
                        for (var C = 0; C < F.path.length; C++) {
                            G.path[C] = b.getSrc(F.path[C][0])
                        }
                    } else {
                        G.path = b.getSrc(F.path[0])
                    }
                }
                var H = J ? parseFloat : parseRemToPx;
                var L = {
                    size: ["width", "height"],
                    pos: ["left", "top"]
                };
                for (var K in L) {
                    var I = L[K];
                    var E = F[K];
                    if (!E) {
                        continue
                    }
                    if (b.getType(E) === "array") {
                        G[I[0]] = [],
                        G[I[1]] = [];
                        $.each(E, function (M, N) {
                            G[I[0]].push(H(N[I[0]]));
                            G[I[1]].push(H(N[I[1]]))
                        })
                    } else {
                        G[I[0]] = H(E[I[0]]);
                        G[I[1]] = H(E[I[1]])
                    }
                }
                m[K] = G;
                return G
            }
        function f(G, D, C) {
                var F = C ? D.defVal : D.val;
                var E = C ? D.defTra : D.tra;
                if (!F) {
                    return
                }
                if (D.from) {
                    G = $(D.from)
                }
                if (D.type !== "color") {
                    if (D.name === "font-size" && !isNaN(Number(F))) {
                        G.css(D.name, (F / 20) + "rem")
                    } else {
                        G.css(D.name, F)
                    }
                } else {
                    F = r(F);
                    if (D.name === "text-shadow") {
                        G.css(D.name, B(t(F, E)))
                    } else {
                        G.css(D.name, t(F, E))
                    }
                }
            }
        function r(F) {
                F = $.trim(F);
                if (/^#[0-9a-fA-f]{3}$/.test(F)) {
                    var C = "#";
                    for (var E = 1; E < 4; E += 1) {
                        var G = F.slice(E, E + 1);
                        C += G + G
                    }
                    F = C
                }
                if (!/^#[0-9a-fA-f]{6}$/.test(F)) {
                    return F
                }
                F = parseInt(F.substring(1), 16);
                var D = ["rgb(", F >> 16, ",", (F & 65280) >> 8, ",", (F & 255), ")"];
                return D.join("")
            }
        function B(C) {
                return C + " -1px -1px 0px, " + C + " 0px -1px 0px, " + C + " 1px -1px 0px, " + C + " 1px 0px 0px, " + C + " 1px 1px 0px, " + C + " 0px 1px 0px, " + C + " -1px 1px 0px, " + C + " -1px 0px 0px"
            }
        function t(D, C) {
                if (typeof C === "undefined" || C == -1) {
                    return D
                }
                return "rgba" + D.substring(D.indexOf("("), D.indexOf(")")) + "," + (C ? C : 0) + ")"
            }
        function s(D) {
                for (var E = 0; E < A.length; E++) {
                    var C = A[E];
                    if (C.name === D) {
                        return [C, q[E]]
                    }
                }
                return [false, false]
            }
        function k(H, F, G, E) {
                var C = {};
                C.from = H;
                C.title = F[1];
                C.limit = F[2];
                C.defSrc = b.getSrc(F[0]);
                var D = G.showPath[E];
                if (typeof D == "number" && D >= 0) {
                    C.showPath = G.showPath;
                    C.showPathIndex = E
                }
                if (F[3]) {
                    C.defSize = F[3]
                }
                return C
            }
        function h(C, D) {
                if (arguments.length == 1) {
                    if (!(D = C.attr("edit_defer_src"))) {
                        return
                    }
                    C.removeAttr("edit_defer_src")
                }
                C.each(function () {
                    if (/img/i.test($(this)[0].nodeName)) {
                        $(this).attr("src", D)
                    } else {
                        $(this).css({
                            "background-image": 'url("' + D + '")',
                            "background-position": "center center",
                            "background-repeat": "no-repeat",
                        }).addClass("hd-game-theBg-fillAuto");
                        (function (E, F) {
                            b.imgReady(F, function () {
                                var J = {
                                    width: $(E).outerWidth(),
                                    height: $(E).outerHeight()
                                };
                                var G = b.Img.calcSize(this.width, this.height, J.width, J.height, b.Img.MODE_SCALE_DEFLATE_FILL);
                                var H = 100 * G.width / J.width;
                                var I = 100 * G.height / J.height;
                                $(E).css("background-size", H + "% " + I + "%")
                            })
                        })(this, D)
                    }
                });
                return C
            }
        function l(D, C, F) {
                var E = D;
                if ($.isArray(D)) {
                    if (typeof C == "undefined") {
                        C = 0
                    }
                    var E = D[C];
                    if (E === undefined) {
                        E = F === undefined ? D[0] : l(F, C)
                    }
                } else {
                    if (E === undefined && F !== undefined) {
                        E = F
                    }
                }
                return E
            }
        function n(I, D, C) {
                var E = I[0],
                    F = I[1],
                    J = C !== undefined;
                if (!D) {
                        D = $(".editTarget-" + E.name)
                    }
                z(E, F, D.not(function () {
                        return $(this).data("hasBindEdit")
                    }));
                var G = (b.getType(F.pos) === "array" && b.getType(F.size) !== "array");
                var H = function (Q, N) {
                        var L = $(N);
                        if (L.data("hasBindEdit")) {
                            return
                        }
                        var O = l(F.size, Q),
                            P = l(F.pos, Q),
                            S = l(E.size, Q, F.size),
                            R = l(E.pos, Q, F.pos);
                        if (S && O) {
                                L.addClass("slaveImg");
                                if (!L.parents().hasClass("imgContainer")) {
                                    L.wrap('<div class="imgContainer absCenter"></div>')
                                }
                                if (!O.disable) {
                                    if (G) {
                                        var M = null;
                                        L.addResizableFn("start", function (T, U) {
                                            M = $(".editTarget-" + E.name).not(this);
                                            if (/n|w/.test(U.axis) && !O.noSyncOffset) {
                                                M.each(function (W, Y) {
                                                    var V = $(this),
                                                        X = V.parents(".ui-wrapper");
                                                    V.data("originalPosition-relative", {
                                                            left: parseFloat(X.css("left")) - U.originalPosition.left,
                                                            top: parseFloat(X.css("top")) - U.originalPosition.top,
                                                        })
                                                })
                                            }
                                        });
                                        L.addResizableFn("resize", function (T, U) {
                                            M.add(M.parents(".ui-wrapper")).css({
                                                width: $(U.element).width(),
                                                height: $(U.element).height()
                                            });
                                            if (/n|w/.test(U.axis) && !O.noSyncOffset) {
                                                M.each(function (W, X) {
                                                    var V = $(this);
                                                    var Y = V.data("originalPosition-relative");
                                                    V.add(V.parents(".ui-wrapper")).css({
                                                        left: U.position.left + Y.left,
                                                        top: U.position.top + Y.top
                                                    })
                                                })
                                            }
                                        });
                                        L.addResizableFn("stop", function (T, U) {
                                            if (!O.noSyncOffset) {
                                                M.each(function (V, W) {
                                                    $(this).removeData("originalPosition-relative").attr("resize", "1")
                                                })
                                            }
                                            M = null
                                        })
                                    }
                                    var K = {
                                        width: O.width,
                                        height: O.height
                                    };
                                    if (P && P.disable) {
                                        K.left = P.left;
                                        K.top = P.top
                                    }
                                    b.moduleSlaveImgResize(L, K);
                                    if (G) {
                                        L.addResizableFn("recover", function () {
                                            var T = $(this).parents(".ui-wrapper");
                                            $(".editTarget-" + E.name).each(function (U, V) {
                                                if (V === L[0]) {
                                                    return
                                                }
                                                var X = $(V).add($(V).parents(".ui-wrapper"));
                                                X.width(T.width()).height(T.height());
                                                var W = l(F.pos, U);
                                                if (W && W.disable) {
                                                    X.css({
                                                        left: W.left,
                                                        top: W.top
                                                    })
                                                }
                                                X.attr("resize", 0)
                                            })
                                        })
                                    }
                                }
                            }
                        if (R && P && !P.disable) {
                                if (P.forParent != "false" && !L.parents().hasClass("imgContainer")) {
                                    L.wrap('<div class="imgContainer absCenter"></div>')
                                }
                                b.moduleDraggale(L, P.forParent == "false" ? false : true)
                            }
                    };
                J ? H(C, D) : D.each(H);
                D.data("hasBindEdit", true)
            }
        function g(C) {
                return /^_background/.test(C)
            }
        function z(D, H, G) {
                var N = -2,
                    J = null,
                    M = false,
                    E = null,
                    K = H.targetName || true,
                    F = "editTarget-" + D.name;
                if (!H._initModuleLayerArgs) {
                        if (H.css || H.cssAll) {
                            if (H.cssAll) {
                                E = [];
                                $.each(H.cssAll, function (O, P) {
                                    if (s(P)[1].css) {
                                        E = E.concat(s(P)[1].crrCssArg)
                                    }
                                })
                            } else {
                                E = H.crrCssArg
                            }
                            M = !E[0].targetName ? true : E[0].targetName;
                            if (H.cssEdit == 1 && H.edit !== "_backgroundAll") {
                                var C = E;
                                $$(function () {
                                    parent.Edit.addEditBtn(E[0].targetName || "编辑背景", "." + F, function () {
                                        parent.Edit.Css.showCssByGame.call($("." + F), "." + F, C);
                                        parent.operateFlagList[21] = true;
                                        return false
                                    })
                                });
                                M = false,
                                E = null
                            }
                        }
                        if (H.edit !== undefined) {
                            if (typeof H.edit === "number") {
                                N = H.edit
                            } else {
                                if (g(H.edit)) {
                                    !x.bgList && (x.bgList = []);
                                    var L = k(".editTarget-" + D.name + ",.editRelate-" + D.name, H.path, D, 0);
                                    L._flag = -1;
                                    if (H.edit === "_backgroundAll" && E) {
                                        L._cssArg = E;
                                        L._flag = -5;
                                        M = false,
                                        E = null
                                    }
                                    if (G.closest(".home,.gameBgBox,.gameBgBox2").length > 0 && g_config.style != 49 && g_config.style != 69 && g_config.style != 71 && g_config.style != 67) {
                                        x.bgList.push(L)
                                    } else {
                                        $.extend(L, {
                                            title: "背景图片",
                                            size: "640px*1600px",
                                            limit: "5000k",
                                            defSize: "640px*1600px",
                                        });
                                        $$(function () {
                                            b.saveModuleLayerImg([L]);
                                            parent.Edit.addEditBtn(H.targetName || "编辑背景", ".editTarget-" + D.name, function () {
                                                hg.fire("editBackground", L, true);
                                                parent.Edit.showEditByGame(L._flag, "", [L]);
                                                return false
                                            })
                                        })
                                    }
                                    G.data("hasBindEdit", true);
                                    return
                                } else {
                                    // if (H.edit !== "_none") {
                                    //     J = [];
                                    //     if (m["edit-" + H.edit]) {
                                    //         J = m["edit-" + H.edit]
                                    //     } else {
                                    //         var I = [];
                                    //         if (H.edit === "all") {
                                    //             $.each(x.originDef, function (O, P) {
                                    //                 if (!P.formDefaultStyle && !g(P.edit)) {
                                    //                     I.push([x.origin[O], P])
                                    //                 }
                                    //             })
                                    //         } else {
                                    //             $.each(H.edit.split(","), function (O, P) {
                                    //                 I.push(s(P))
                                    //             })
                                    //         }
                                    //         $.each(I, function (Q, S) {
                                    //             var P = S[1].path;
                                    //             var O = S[1].name;
                                    //             var R = ".editTarget-" + O + ",.editRelate-" + O;
                                    //             if (typeof P != "undefined") {
                                    //                 if (b.getType(P[0]) === "array") {
                                    //                     $.each(P, function (T, U) {
                                    //                         T > 0 && (R = ".editTarget-" + O + "-" + T + ",.editRelate-" + O + "-" + T);
                                    //                         J.push(k(R, U, S[0], T))
                                    //                     })
                                    //                 } else {
                                    //                     J.push(k(R, P, S[0], 0))
                                    //                 }
                                    //             }
                                    //         });
                                    //         !m["edit-" + H.edit] && (m["edit-" + H.edit] = J)
                                    //     }
                                    //     N = -1
                                    // } else {
                                    //     K = false
                                    // }
                                }
                            }
                        } else {
                            K = false
                        }
                        if (H.text) {
                            K = !H.text[0].targetName ? true : H.text[0].targetName;
                            D.text = $.extend(true, [], H.text, D.text);
                            if (H.text[0].type == 1) {
                                K = false
                            }
                            if (D.text.filter(function (O) {
                                return O.type == 2
                            }).length > 0) {
                                N = 0;
                                F = function () {
                                    p.call(this, D.text, H.text, D.name)
                                }
                            }
                        }
                        H._initModuleLayerArgs = [N, F, J, M, E, K]
                    }
                if (H.edit !== undefined || H._initModuleLayerArgs[4]) {
                        G.hdTrigger("hd-editUpload-initModuleLayer", [H]);
                        b.initModuleLayer.apply(b, [G].concat(H._initModuleLayerArgs))
                    }
            }
        function p(D, E, C) {
                var F = this;
                parent.Edit.editPoup.show({
                    className: "editText",
                    title: E[0].allTitel || "编辑内容",
                    info: function (I, G, J) {
                        $.each(D, function (O, R) {
                            if (R.type != 2) {
                                return
                            }
                            var Q = E[O];
                            !Q.from && (Q.from = ".editTarget-" + C + ",.editRelate-" + C);
                            var P = R.val;
                            var L = Q.numLimit;
                            if (b.getType(L) != "array") {
                                Q.numLimit = L = [0, L]
                            }
                            var S = $(Q.from);
                            var M = '<div class="editLine">';
                            if (R.shouInput) {
                                M += K((Q.title || "文字内容") + "：", P)
                            } else {
                                M += H((Q.title || "文字内容") + "：", P, O, R.txtopt)
                            }
                            M += "</div>";
                            I.append(M = G.$(M));
                            var N = M.find(".newTextArea .activeInput");
                            N.on("blur.text", function () {
                                var T = $(this).val();
                                if ($.trim(T).length < (L[0] + 1)) {
                                    $(this).addClass("inputErr");
                                    $(this).parent().find(".editErr").show().text("输入的文字不可少于" + (L[0] + 1) + "个！");
                                    S.text(R.val)
                                }
                            }).on("focus.text", function () {
                                $(this).removeClass("inputErr").siblings(".editErr,.editErr2").hide()
                            }).on("keyup.text", function () {
                                var T = {};
                                T.str = $(this).val();
                                T.str = T.str.substr(0, L[1]);
                                T.len = $.trim($(this).val()).length;
                                if (T.len > L[1]) {
                                    $(this).val(T.str)
                                }
                                $(this).trigger("text-beforeSave", [T, R, Q]);
                                if (T.len > L[0] && (L[1] === undefined || T.len <= L[1])) {
                                    R.val = T.str;
                                    S.text(R.val)
                                }
                            }).on("input.text", function () {
                                parent.changeIsSave()
                            });
                            if (R.txtopt) {
                                N.show().val(R.val)
                            } else {
                                N.hide()
                            }
                            if (!R.shouInput) {
                                M.find("#editWriteDef_" + O + "").on("click", function () {
                                    if (R.txtopt == 1) {
                                        parent.changeIsSave()
                                    }
                                    R.txtopt = 0;
                                    S.text(Q.val);
                                    N.hide().removeClass("inputErr").val(Q.val);
                                    N.siblings(".editErr,.editErr2").hide()
                                });
                                M.find("#editWriteSelf_" + O + "").on("click", function () {
                                    if (R.txtopt == 0) {
                                        parent.changeIsSave()
                                    }
                                    R.txtopt = 1;
                                    N.show().val(R.val);
                                    S.text(R.val)
                                })
                            }
                        });
                        $(F).hdTrigger("hd-editUpload-textEdit", [G, D, E]);

                        function K(M, L) {
                            return '<div class="answerLine clearfix"><div class="floatLeft newTextT" style="width: 70px; margin-top: 7px" >' + M + '</div><div style="width: 320px;" class="floatLeft"><div class="newTextArea"><input type="text" class="input scrollBox activeInput" style="width: 300px;height: 32px; padding-left: 5px;" value="' + b.encodeHtml(L) + '" ' + 'disabled><div style="color:#888; padding-top: 5px;">确认发布后无法修改，请认真输入！</div><div class="editErr hide" style="color: red;margin-top: 10px;">输入文字不能为空</div><div class="editErr2 hide" style="color: red; margin-top: 10px; display: none;">输入仅限中文字母跟数字</div></div></div></div>'
                        }
                        function H(R, P, N, L) {
                            var Q = b.encodeHtml(P);
                            var M = L ? "checked" : "";
                            var O = L ? "" : "checked";
                            return '<div class="answerLine clearfix"><div class="floatLeft newTextT" style="width: 100px;">' + R + '</div><div class="floatLeft" style="width: 320px;"><div><input id="editWriteDef_' + N + '" type="radio" name="theRealOnly"' + O + '><label for="editWriteDef_' + N + '" style="height: 16px;line-height: 16px;">默认</label><input id="editWriteSelf_' + N + '" type="radio" name="theRealOnly"' + M + '><label for="editWriteSelf_' + N + '" style="height: 16px;line-height: 16px;">自定义</label></div><div class="newTextArea" style="margin-top: 12px;"><textarea class="input scrollBox activeInput" style="width:300px;height:100px;padding:5px;margin-top:6px;">' + Q + '</textarea><div class="editErr hide" style="color: red;margin-top: 10px;">输入文字不可少于10个！</div><div class="editErr2 hide" style="color: red; margin-top: 10px; display: none;">输入仅限中文</div></div></div></div>'
                        }
                    },
                });
                return false
            }
                hg.edit.hasInitEle = true;
                o()
        x.setEdit = function (C, D) {
                u(C, function (E) {
                    D === undefined && (D = 0);
                    v(E[0], E[1], C, D);
                })
            };

        function u(C, F) {
                var E = C.attr("class").match(w),
                    D;
                if (E) {
                        D = s(E[2].slice(1));
                        if (D[0] && D[1]) {
                            F && F(D)
                        }
                    }
            }
        function o() {
                $.each(A, function (D, C) {
                    v(C, q[D], $(".editTarget-" + C.name))
                })
            }
        function y(C, D) {
                u(C, function (E) {
                    D === undefined && (D = 0);
                    v(E[0], E[1], C, D)
                })
            }
        function v(G, M, L, N) {
                var H = N !== undefined,
                    D = ".editTarget-" + G.name + ",.editRelate-" + G.name,
                    E, P, I, F, J, K, O;
                if (H && L.length == 0) {
                        return false
                    }
                if (g(M.edit)) {
                        L.addClass("hd-Special-bgImgInfo")
                    }
                J = function (Q) {
                        var R = function (U, V) {
                            var T = l(G.pos, U, M.pos),
                                S = l(G.size, U, M.size);
                            if (M.pos && T && T.top && T.left) {
                                    $(V).css({
                                        top: T.top,
                                        left: T.left
                                    }).addClass("abs")
                                }
                            if (M.size && S && S.width && S.height) {
                                    $(V).css({
                                        width: S.width,
                                        height: S.height
                                    })
                                }
                        };
                        H ? R(N, Q) : Q.each(R)
                    };
                J(L);
                if (G.path) {
                        F = function (Q, S) {
                            var R;
                            if (Q.length > 0) {
                                R = b.getJqSrc(Q)
                            }
                            return R || S || ""
                        };
                        P = ".editRelate-" + G.name;
                        K = function (R, S, Q) {
                            if (R.length == 0) {
                                return
                            }
                            if ((G.showPath[Q] === 0)) {
                                R.attr("edit_store_src", S);
                                return
                            }
                            if (M.deferPath) {
                                R.attr("edit_defer_src", S)
                            } else {
                                h(R, S)
                            }
                        };
                        if (b.getType(G.path[0]) === "array") {
                            if (H) {
                                E = L.attr("class").match(w);
                                if (E && E[2] == "-" + G.name) {
                                    E[3] && (I = parseInt(E[3].slice(1)));
                                    var C = F($(".editTarget-" + G.name + (isNaN(I) ? "" : "-" + I)));
                                    isNaN(I) && (I = 0);
                                    !C && (C = b.getSrc(G.path[I][0]));
                                    K(L, C, I)
                                }
                            } else {
                                $.each(G.path, function (R, U) {
                                    var T = b.getSrc(U[0]);
                                    var Q = "editTarget-" + G.name;
                                    var S = L;
                                    if (R !== 0) {
                                        Q = "editTarget-" + G.name + "-" + R;
                                        P = ".editRelate-" + G.name + "-" + R;
                                        S = $("." + Q)
                                    }
                                    if (S.length == 0) {
                                        $("body").append('<input class="' + Q + '" type="hidden" value="' + T + '">')
                                    } else {
                                        R !== 0 && J(S)
                                    }
                                    K(S.add(P), T, R)
                                })
                            }
                        } else {
                            if (H) {
                                K(L, F($(".editTarget-" + G.name), b.getSrc(G.path[0])), 0)
                            } else {
                                K(L.add(P), b.getSrc(G.path[0]), 0)
                            }
                        }
                    }
                if (G.css) {
                        O = function (S, T, R) {
                            var Q;
                            if (H) {
                                if (!L.is(S)) {
                                    return
                                }
                                Q = L
                            } else {
                                Q = $(S)
                            }
                            f(Q, T, R)
                        };
                        $.extend(true, M.css, G.css);
                        $.each(M.css, function (Q, R) {
                            if (!R.from) {
                                R.from = D
                            }
                            if (R.css) {
                                $.each(R.css, function (T, S) {
                                    if (!S.from) {
                                        S.from = R.from
                                    }
                                    O(S.from, S, S.opt === 0)
                                })
                            } else {
                                O(R.from, R, R.opt === 0)
                            }
                        })
                    }
                if (G.text) {
                        $.each(G.text, function (R, T) {
                            var Q = M.text[R],
                                S;
                            !Q.from && (Q.from = D);
                            if (H) {
                                    if (!L.is(Q.from)) {
                                        return
                                    }
                                    S = L
                                } else {
                                    S = $(Q.from)
                                }
                            if (Q.type == 2) {
                                    var U = Fai.encodeHtml(T.txtopt ? T.val : Q.val);
                                    S.html(U)
                                } else {
                                    S.val(T.value)
                                }
                        })
                    }
                return true
            }
        x.getImgInfo = j;
        x.getInfoByName = s;
        x.getRgba = t;
        x.initEdit = o;
        x.initByElem = y;
        x.cache = m;
        x.setJqSrc = h;
        delete x.originMod;
        return x
    };
    b.initSound = function (g, h, f) {
        if (f && h) {
            $.each(f, function (l, m) {
                h[l].path = m.path;
                if (g_config.isModel) {
                    g[l].optFlag = h[l].optFlag
                }
            })
        }
        if (g && h) {
            $.each(g, function (m, n) {
                var l = h[m];
                if (m !== 0 && n.optFlag === 1) {
                    n.optFlag = 2
                }
                n.path = b.getSrc(n.path);
                l.path = b.getSrc(l.path)
            })
        }
        var e = {};
        var k = LF.sound.webAudioEnabled && LF.global.webAudio;

        var j = {
            list: g,
            listDef: h,
            allowPlay: true,
            setPlayPower: function (m, n) {
                if (typeof m == "boolean") {
                    this.allowPlay = m
                }
                var l = e[m];
                if (!l) {
                    return this
                }
                l._allowPlay = n
            },
            play: function (p, r, o) {
                if (!this.allowPlay) {
                    return this
                }
                if (g && b.getType(p) === "number") {
                    var n = p === 0 ? 1 : 3;
                    if (g[p].optFlag === n) {
                        return this
                    }
                }
                if (p !== 0 && g && g[0].optFlag !== 1 && !k) {
                    return this
                }
                var m = e[p];
                if (!m) {
                    return this
                }
                if (!m._allowPlay) {
                    return
                }
                m.play(r, o);
                if (!m.playing) {
                    try {
                        wx.checkJsApi({
                            jsApiList: ["checkJsApi"],
                            success: function () {
                                m.play(r, o);
                                if (m.complete) {
                                    m.pauseCallBack.fire(m, p);
                                    m.pauseCallBack = null
                                } else {
                                    if (m.pauseCallBack) {
                                        m.pauseCallBack.fire(m, p);
                                        m.pauseCallBack = null
                                    }
                                }
                            }
                        })
                    } catch (q) {
                    }
                } else {
                    m.pauseCallBack.fire(m, p)
                }
                return this
            },
            readyPlay: function (p, s, n) {
                try {
                    var m = e[p];
                    if (!m) {
                        return this
                    }
                    var o = this;
                    o.play(p, s, n);
                    o.onReady(p, function () {
                        !m.playing && o.play(p, s, n)
                    })
                } catch (q) {
                }
            },
            pause: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                l.stop();
                n && (l.pauseCallBack.add(n));
                return this
            },
            pauseAll: function () {
                var l = null;
                for (var m in e) {
                    l = e[m];
                    if (l) {
                        l.stop()
                    }
                }
                return this
            },
            load: function (q, m, n) {
                if (e[m]) {
                    return this
                }
                var l = null,
                    p = k;
                typeof n !== "undefined" && (p = n);
                if (/.wav$/.test(q) && b.isIPhone()) {
                        p = false
                    }
                if (p) {
                        l = new LF.webAudio()
                    } else {
                        l = new LF.media();
                        try {
                            l.data = new Audio()
                        } catch (o) {
                            console.warn("ReferenceError: Can't find variable: Audio");
                            l.data = {}
                        }
                        l.data.loop = false;
                        l.data.autoplay = false
                    }
                l._type = "audio";
                if (q) {
                        l.load(q)
                    }
                l.readyCallBack = $.Callbacks("unique memory");
                l.pauseCallBack = $.Callbacks("unique memory");
                l.addEventListener(LF.event.COMPLETE, function (r) {
                        l.complete = true;
                        if (l.readyCallBack) {
                            l.readyCallBack.fire(l);
                            l.readyCallBack = null
                        }
                        l.pauseCallBack.fire(l, m);
                    });
                l._allowPlay = true;
                e[m] = l;
                return this
            },
            onReady: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                if (l.complete) {
                    n(l)
                } else {
                    l.readyCallBack.add(n)
                }
                return this
            },
            setVolume: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                if (l.soundType == "LMedia") {
                    l.data.volume = n
                } else {
                    if (l.soundType == "LWebAudio") {
                        l.volume = n
                    }
                }
                return this
            },
            cache: e,
        };
        j.load(_resRoot + "/button.mp3", "startButton");
        if (g) {
            $.each(g, function (l, m) {
                var o = m.path;
                if (l === 0) {
                    j.load(o, l, false);
                    if (j.cache["0"]) {
                        var n = j.cache["0"].data;
                        if (Audio && n instanceof Audio) {
                            document.getElementById("pageMusic").appendChild(n)
                        }
                    }
                } else {
                    j.load(o, l)
                }
            });
            j.cache["0"].data.addEventListener("play", function () {
                $(function () {
                    if ($(".soundIcon").length <= 0) {
                        b.appendMusicIcon()
                    }
                    $(".soundIcon").removeClass("soundIconOff")
                })
            }, false);
            j.cache["0"].data.addEventListener("pause", function () {
                $(function () {
                    $(".soundIcon").addClass("soundIconOff")
                })
            }, false)
        }
        return j
    };
    b.initCallBack = function (g, e) {
        var f = new Fai.CallBack();
        g = g || {};
        $.each(f.getApiKeys(), function (j, h) {
            g[h] = function () {
                var k = f[h].apply(f, arguments);
                return k === f ? this : k
            }
        });
        if (typeof e !== "undefined") {
            f.register(e)
        }
        return g
    };
    b.initTime = function (e) {
        var k = null,
            h, l = 0;

        function g(m) {
                var n = Math.round(m * 100) / 100;
                var o = n.toString();
                var p = o.indexOf(".");
                if (p < 0) {
                    p = o.length;
                    o += "."
                }
                while (o.length <= p + 2) {
                    o += "0"
                }
                return o
            }
        var f = [70, 280];
        if (g_config.countsTimeType) {
                if (g_config.sortType) {
                    f[1] = -1
                }
            } else {
                if (g_config.scoreType) {
                    if (!g_config.sortType) {
                        f[1] = -1
                    }
                } else {
                    f[1] = -1
                }
            }
        var j = {
                val: 0,
                pastTime: 0,
                interval: 140,
                range: f,
                target: null,
                isDesc: !g_config.countsTimeType,
                acceList: null,
                initTime: e,
                status: "ended",
                updateFlag: true,
                targetFlag: true,
                frameInc: 0,
                setAcceList: function (o) {
                    if (typeof o === "number") {
                        var p = o;
                        o = [];
                        for (var m = 0; m < p; m++) {
                            o.push((p - m) * (this.initTime / (p + 1)))
                        }
                    }
                    this.acceList = o;
                    return this
                },
                setTarget: function () {
                    var m = g(this.val);
                    this.targetFlag && this.target.text(m);
                    this.fireWith("setTime", this, [m])
                },
                init: function () {
                    if (this.initTime === 99999) {
                        return
                    }!this.target && (this.target = $(".time"));
                    this.val = this.initTime;
                    this.pastTime = 0;
                    this.setTarget();
                    return this
                },
                start: function () {
                    if (this.initTime === 99999) {
                        return
                    }
                    h = new Date().getTime() / 1000;
                    if (this.updateFlag && this.status === "ended") {
                        this.status = "runing";
                        this.play()
                    } else {
                        this.status = "runing"
                    }
                    return this
                },
                isRunning: function () {
                    return this.status === "runing"
                },
                pause: function () {
                    this.status = "pause"
                },
                end: function () {
                    if (this.status === "ended") {
                        return
                    }
                    clearTimeout(k);
                    l = 0;
                    this.update();
                    this.status = "ended";
                    return this
                },
                setTime: function () {
                    var m = (new Date).getTime() / 1000;
                    var p = m - h;
                    var o = this.isDesc ? -1 : 1;
                    if (this.range[0] > 0 && p < this.range[0] / 1000) {
                        p = this.range[0] / 1000
                    } else {
                        if (this.range[1] > 0 && p > this.range[1] / 1000) {
                            p = this.range[1] / 1000
                        }
                    }
                    this.val += o * p;
                    this.pastTime = o * (this.val - this.initTime);
                    h = m;
                    if (this.isDesc) {
                        if (this.acceList) {
                            for (var n = 0; n < this.acceList.length; n++) {
                                if (this.val <= this.acceList[n] && l == n) {
                                    l++;
                                    this.fireWith("acce", this, [l]);
                                    break
                                }
                            }
                        }
                        if (this.val <= 0) {
                            this.val = 0;
                            this.setTarget();
                            clearTimeout(k);
                            l = 0;
                            this.status = "ended";
                            this.fireWith("end", this);
                            return
                        }
                    }
                    this.setTarget()
                },
                update: function () {
                    if (this.initTime === 99999) {
                        return
                    }
                    if (this.status !== "pause") {
                        this.setTime()
                    }
                    this.fireWith("timer", this, [this.status !== "pause"])
                },
                play: function () {
                  alert(2)
                    this.update();
                    if (this.status !== "ended") {
                        k = setTimeout(arguments.callee.bind(this), this.interval)
                    }
                },
                updateInFrame: function (m) {
                    if (this.initTime === 99999) {
                        return
                    }
                    if (this.status === "ended") {
                        return
                    }
                    if (m < 0) {
                        m = 0
                    }
                    this.frameInc += m;
                    if (this.frameInc >= this.interval) {
                        this.update();
                        this.frameInc = 0
                    }
                }
            };
        b.initCallBack(j, ["end", "timer", "acce", "setTime"]);
        j.init();
        j.changeTwoDecimal_f = g;
        return j
    };
    b.initGrade = function () {
        var e = function (f) {
            e.set(e.val + f)
        };
        $.extend(e, {
            val: 0,
            set: function (f) {
                e.val = f;
                e.val < 0 && (e.val = 0);
                e.fireWith("setGrade", e, [e.val]);
                e.target && e.target.text(e.val)
            }
        });
        $(function () {
            e.target = $("#grade")
        });
        b.initCallBack(e, ["setGrade"]);
        return e
    };
    b.initAreaLimit = function (g) {
        if (g) {
            var e = 5;
            var f = 0;
            var h = setInterval(function () {
                if (f >= e) {
                    clearInterval(h);
                    return
                }
                f++;
                if (!g_config.ipInfo || !g_config.ipInfo.provice) {
                    $.ajax({
                        type: "post",
                        url: g_config.ajaxUrl + "hdgame_h?cmd=getIPInfo",
                        success: function (k) {
                            var j = $.parseJSON(k);
                            if (j.success) {
                                g_config.ipInfo = j.ipInfo
                            }
                        }
                    })
                } else {
                    clearInterval(h);
                    return
                }
            }, 1500)
        }
    };
    b.getAreaByWx = function (g, j) {
        if (g_config.test) {
            g.provice = "广东";
            g.city = "广州";
            j && j()
        } else {
            if (g.locationTime == undefined || new Date().getTime() - g.locationTime > 300000) {
                try {
                    wx.ready(function () {
                        wx.getLocation({
                            type: "wgs84",
                            success: function (e) {
                                var l = e.latitude;
                                var k = e.longitude;
                                f(l, k, j)
                            },
                            fail: function (e) {
                                b.statusMsg("当前微信版本不支持定位或没开启定位服务，请联系活动主办单位", "")
                            },
                            cancel: function () {
                                b.statusMsg("用户拒绝了授权地理位置信息", "")
                            }
                        })
                    })
                } catch (h) {
                    j && j()
                }
            } else {
                j && j()
            }
        }
        function f(m, e, n) {
            var l = new qq.maps.Geocoder();
            var k = new qq.maps.LatLng(m, e);
            l.getAddress(k);
            l.setComplete(function (p) {
                if (p) {
                    var r = p.detail.addressComponents.city;
                    var o = p.detail.addressComponents.province;
                    var q = p.detail.addressComponents.country;
                    g.contry = q;
                    g.provice = o;
                    g.city = r;
                    g.locationTime = new Date().getTime();
                    n && n()
                }
            });
            l.setError(function () {
                n()
            })
        }
    };
    b.getIsHasAttention = function (e) {
        b.checkOptions = {};
        b.checkOptions.isCheckStrongAtt = true;
        $.ajax({
            type: "post",
            url: g_config.ajaxUrl + "hdgame_h?cmd=getMyAttention&gameId=" + g_config.gameId + "&openId=" + g_config.acctOpenId,
            error: function () {
            },
            success: function (g) {
                var f = $.parseJSON(g);
                b.checkOptions.isCheckStrongAtt = false;
                b.checkOptions.hasCheckThisOne = true;
                if (f.rt == 0) {
                    if (f.data.isAttention) {
                        g_config.ishasAttentiosThisAPP = false
                    }
                    e && e()
                }
            }
        })
    };
    b.initWxConfig = function (n) {
        b.wxConfigArg = {
        };
        l({
            haveAward: g_config.haveAward,
            plInfo: n.plInfo,
            bestRankInfo: g_config.bestRankInfo,
            comfortAwardStyle: g_config.comfort.cas
        });
        wx.config({
            debug: false,
            appId: n.jsSdkAppid,
            timestamp: n.timestamp,
            nonceStr: n.nonce_str,
            signature: n.signature,
            jsApiList: ["checkJsApi", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "hideMenuItems", "showMenuItems", "hideAllNonBaseMenuItem", "showAllNonBaseMenuItem", "translateVoice", "startRecord", "stopRecord", "onRecordEnd", "playVoice", "pauseVoice", "stopVoice", "uploadVoice", "downloadVoice", "chooseImage", "previewImage", "uploadImage", "downloadImage", "getNetworkType", "openLocation", "getLocation", "hideOptionMenu", "showOptionMenu", "closeWindow", "scanQRCode", "chooseWXPay", "openProductSpecificView", "addCard", "chooseCard", "openCard"]
        });
        wx.ready(function () {
            $("#awardCollectionBtn").on("touchstart", function () {
                var v = true;
                var s = g_config.wxAward;
                var p = s.genewxcard;
                var r = g_config.acctOpenId || g_config.openId;
                if (p) {
                    if (g_config.status == 0) {
                        b.statusMsg("活动尚未发布", "无法加入到微信卡券");
                        return
                    }
                    var q = s.wxcardid;
                    var o = $("#awardDetailBox .codeLine .code").text();
                    var u = $("#awardDetailBox .codeLine .code").attr("code");
                    var t = g_config.award.depositTime;

                    $.ajax({
                        type: "post",
                        url: g_config.ajaxUrl + "hdgame_h?cmd=getCardSign&cardTick=" + n.cardTicket + "&cardId=" + q + "&code=" + o + "&openId=" + r + "&gameId=" + g_config.gameId,
                        error: function () {
                        },
                        success: function (x) {
                            var y = $.parseJSON(x);
                            var w = y.data;
                            var A = w.codeStatus;
                            if (A == 1) {
                                b.statusMsg("该兑奖码已被核销，无法放入微信卡包");
                                return
                            }
                            var z = '{"timestamp":"' + w.timestamp + '","openid":"' + r + '","nonce_str":"' + w.nonce_str + '","code":"' + o + '","signature":"' + w.sign + '"}';
                            if ((t && t < Date.parse(new Date())) || $("#awardCollectionBtn").text() == "打开微信卡券") {
                                v = false
                            }
                            if (v) {
                                wx.addCard({
                                    cardList: [{
                                        cardId: q,
                                        cardExt: z
                                    }],
                                    success: function (C) {
                                        var B = C.cardList[0];
                                        v = false;
                                        $("#awardCollectionBtn").text("打开微信卡券");
                                        if (B.isSuccess) {
                                            $.ajax({
                                                type: "get",
                                                url: g_config.ajaxUrl + "hdgame_h?cmd=setCode&code=" + u + "&gameId=" + g_config.gameId,
                                                success: function (E) {
                                                    var D = $.parseJSON(E);
                                                    g_config.award.depositTime = Date.parse(new Date())
                                                }
                                            })
                                        }
                                    },
                                })
                            } else {
                                wx.openCard({
                                    cardList: [{
                                        cardId: q,
                                        code: o
                                    }]
                                })
                            }
                        }
                    })
                }
            })
        });
        wx.ready(function () {
            if (true) {
                wx.hideMenuItems({
                    menuList: ["menuItem:copyUrl"]
                })
            } else {
                wx.showAllNonBaseMenuItem()
            }
            wx.hideMenuItems({
                menuList: ["menuItem:copyUrl"]
            });
            if (g_config.isForbidShareactivity) {
                wx.hideMenuItems({
                    menuList: ["menuItem:copyUrl", "menuItem:share:appMessage", "menuItem:share:timeline", "menuItem:share:qq", "menuItem:share:weiboApp", "menuItem:share:facebook", "menuItem:share:QZone", "menuItem:originPage", "menuItem:openWithQQBrowser", "menuItem:openWithSafari"]
                })
            }
            if (typeof n.checkControlLevel !== "undefined") {
                var p = g_config.authVer == 0;
                switch (n.checkControlLevel) {
                case 1:
                    if (p) {
                        wx.hideMenuItems({
                            menuList: ["menuItem:share:timeline"]
                        })
                    }
                    break;
                case 2:
                    if (p) {
                        wx.hideMenuItems({
                            menuList: ["menuItem:share:timeline", "menuItem:share:appMessage"]
                        })
                    }
                    break;
                case 3:
                    wx.hideMenuItems({
                        menuList: ["menuItem:share:timeline"]
                    });
                    break;
                case 4:
                    wx.hideMenuItems({
                        menuList: ["menuItem:share:timeline", "menuItem:share:appMessage"]
                    });
                    break;
                default:
                    break
                }
            }
        });
        wx.ready(function () {
            var o = window.navigator.userAgent.indexOf("iPhone") > -1 || window.navigator.userAgent.indexOf("iPad") > -1 || window.navigator.userAgent.indexOf("iPod") > -1;
            var p = window.navigator.userAgent.indexOf("Android") > -1;
            var q = "unknown";
            if (o) {
                q = "apple"
            } else {
                if (p) {
                    q = "android"
                }
            }
            if (!g_config.isFromZhuliShare) {
                wx.getNetworkType({
                    success: function (r) {
                        var s = r.networkType;
                        var t = "other";
                        if (s === "wifi") {
                            t = "wifi"
                        } else {
                            t = "other"
                        }
                        $.ajax({
                            url: g_config.ajaxUrl + "hdgame_h?cmd=setBehavior&gameId=" + g_config.gameId + "&openId=" + g_config.openId,
                            type: "post",
                            data: {
                                netType: t,
                                sysType: q
                            },
                            success: function (u) {}
                        })
                    }
                })
            }
        });

        function m(v, s, u) {
            v = v.replace("红包", "")
            v = b.decodeHtml(v);
            s = b.removeUrlArg(s, "code", "state");
            if (g_config.isYKY) {
                s = b.removeUrlArg(s, "identity", "relationId")
            }
            var q = s;

            s = b.setUrlArg(s, ["otherplayer", g_config.openId]);
            q = b.setUrlArg(q, ["otherplayer", g_config.openId]);
            s = b.setUrlArg(s, ["shareDeep", n.shareDeep + 1]);
            // q = b.setUrlArg(s, ["canal", fromCanal]);
            // s = b.setUrlArg(s, ["canal", fromCanal]);
            q = b.setUrlArg(q, ["shareDeep", n.shareDeep + 1]);
            if (n.openStrongAttention) {
                s = b.setUrlArg(s, ["isOfficialLianjie", "false"]);
                q = b.setUrlArg(q, ["isOfficialLianjie", "false"])
            }
            if (s === b.wxConfigArg.url && b.wxConfigArg.desc === v && b.wxConfigArg.callBack === u && b.wxConfigArg.pyqUrl === q) {
                return
            }
            wx.ready(function () {
                var x = n.shareImg;
                if (!/^http:/.test(x) && /^\/\//.test(x)) {
                    x = "http:" + x
                }
                try {
                    wx.onMenuShareAppMessage({
                        title: b.decodeHtml(n.activeName),
                        desc: v,
                        link: s,
                        imgUrl: x,
                        type: "link",
                        success: function () {
                            $.ajax({
                                type: "post",
                                url: g_config.ajaxUrl + "hdgame_h?cmd=setShareNum&aid=" + g_config.aid + "&gameId=" + g_config.gameId + "&openId=" + g_config.openId + "&type=friend&shareDeep=" + g_config.shareDeep,

                                success: function (y) {
                                    j(y);
                                    u && u(y)
                                }
                            })
                        },
                        cancel: function () {},
                    });
                    wx.onMenuShareTimeline({
                        title: v,
                        link: q,
                        imgUrl: x + "xxxxx",
                        success: function (y) {
                            $.ajax({
                                type: "post",
                                url: g_config.ajaxUrl + "hdgame_h?cmd=setShareNum&aid=" + g_config.aid + "&gameId=" + g_config.gameId + "&openId=" + g_config.openId + "&type=pyq&shareDeep=" + g_config.shareDeep,

                                success: function (z) {
                                    j(z);
                                    u && u(z)
                                }
                            })
                        },
                        cancel: function (y) {},

                    });
                } catch (w) {
                    alert(w.message)
                }
            });
            b.wxConfigArg.desc = v;
            b.wxConfigArg.url = s;
            b.wxConfigArg.callBack = u;
            b.wxConfigArg.pyqUrl = q
        }
        function k() {
            var o = Array.prototype.slice.call(arguments);
            o.unshift(b.wxConfigArg.url);
            m(b.wxConfigArg.desc, b.setUrlArg.apply(b, o), b.wxConfigArg.callBack)
        }
        function h() {
            var o = Array.prototype.slice.call(arguments);
            o.unshift(b.wxConfigArg.url);
            m(b.wxConfigArg.desc, b.removeUrlArg.apply(b, o), b.wxConfigArg.callBack)
        }
        function g(o) {
            o = o.replace(/\u200b/g, "").replace(/&nbsp;/g, " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
            return o.replace(/<span class=["']tag["'] contenteditable=["']?false["']?>(.+?)<\/span>/g, function (q, p) {
                switch (p) {
                case "玩家名称":
                    if (g_config.style == 48) {
                        return b.hykjUserName
                    } else {
                        if (b.captainUserName) {
                            return b.captainUserName
                        } else {
                            return g_config.userName
                        }
                    }
                case "游戏成绩":
                case "当前成绩":
                    if (g_config.style == 49) {
                        return parseInt(b.currentScore) + g_config.scoreUnit
                    } else {
                        console.log(b.currentScore);
                        return g_config.scoreType ? b.currentScore + g_config.scoreUnit : parseInt(b.currentScore) + g_config.scoreUnit
                    }
                case "游戏排名":
                    return b.currentRank;
                case "奖品名称":
                    return b.currentAward;
                case "奖项等级":
                    return b.currentAwardStyle;
                case "收集的字":
                    return '"' + b.ccndrmTitle + '"'
                }
            })
        }
        function e(o, p) {
            typeof o === "undefined" && (o = b.wxConfigArg.url);
            typeof p === "undefined" && (p = b.wxConfigArg.callBack);
            if (g_config.drawType != 3) {
                if (g_config.style == 49 || g_config.style == 69) {
                    m(g(n.wxShareText_def), o, p);
                    return
                }
                if (b.currentAward) {
                    m(g(n.wxShareText_award), o, p)
                } else {
                    if (b.currentRank) {
                        m(g(n.wxShareText_rank), o, p)
                    } else {
                        m(g(n.wxShareText_def), o, p)
                    }
                }
            }
        }
        function l(q) {
            var o = ["一", "二", "三", "四", "五", "六", "七", "八"];
            var u = q.haveAward;
            if (u) {
                var p = q.plInfo;
                b.currentAward = p.award;
                var s = p.awardLevel;
                if (s != 900 && s > 0) {
                    if (n.nameList && n.nameList.length >= s) {
                        b.currentAwardStyle = n.nameList[s - 1]
                    } else {
                        b.currentAwardStyle = o[s - 1]
                    }
                } else {
                    b.currentAwardStyle = q.comfortAwardStyle
                }
            }
            var t = q.bestRankInfo;
            b.currentRank = t.rank;
            g_config.style == 63 && !t.score && (t.score = "0");
            b.currentScore = t.score;
            e()
        }
        var f = {};
        f.setWxShareByStatus = e;
        f.setShareText = g;
        f.removeWxShareUrlArg = h;
        f.setWxShareUrlArg = k;
        f.setWxShare = m;
        f.setWxShareArg = l;
        b.wxConfig = f
    };
    b.addJoinGameBehavior = function () {
        var f = typeof g_config.ipInfo.city != "undefined" ? g_config.ipInfo.city : "";
        var e = typeof g_config.ipInfo.provice != "undefined" ? g_config.ipInfo.provice : "";
        $.ajax({
            url: g_config.ajaxUrl + "hdgame_h?cmd=joinGameBehavior&openId=" + g_config.openId + "&canal=" + fromCanal,
            type: "post",
            data: {
                gameId: g_config.gameId,
                openId: g_config.openId,
                shareDeep: g_config.shareDeep,
                provice: e,
                city: f
            },
            success: function (g) {}
        })
    };
    b.setGameEnd = function () {
        var g = $(".bottomSkill");
        var f = $(window).height() / $(window).width() < 1.575;
        var e = f ? $(window).width() * 1.575 : $(window).height();
        $(".home").html("");
        $(".home").append(g);
        $(".home").append('<p style="font-size:0.9rem; color:#e7e7e7; text-align: center; padding-top:10rem; line-height: 1.3rem">活动已结束<br>请期待下次活动</p>');
        $(".home").css({
            height: e,
            background: "#424242",
            width: "100%",
            position: "fixed",
            "z-index": "500"
        });
        document.title = "活动已结束";
        $(".home").addClass("showImp");
        $(".homeBtnBox").addClass("showImp");
        $(".ruleImg,#ruleImg").addClass("showImp");
        $(".gameInfoBox").addClass("hideImp");
        $(".showAwardBox").addClass("hideImp");
        $("#informBtn").addClass("hideImp");
        hg.sound.allowPlay = false;
        hg.sound.pauseAll()
    };
    (function () {
        b.showRuleDecide = function () {
            if (g_config.isNotSelf && g_config.createTime > 1494376826000 || g_config.style == 69) {
                return
            }
            var h = g_config.aid + "|" + g_config.gameId + "|" + g_config.openId;
            if (!b.getLocalStorage(h)) {
                b.setLocalStorage(h, "-");
                if (g_config.createTime < 1494376826000) {
                    showRule()
                } else {
                    e()
                }
            }
        };
        $(function () {
            $("#activityKit").click(function () {
                $("#activityKit").hide()
            })
        });

        function e() {
            $("#activityKit").show();
            if (g_config.style == 71) {
                var j = $("#ruleImgContainer")
            } else {
                var j = $("#ruleImg")
            }
            var n = $("#ruleImg");
            var m = $("#activityKit .arrow");
            var h = $("#activityKit #tip_txt");
            var k = parseInt($("#tip_txt").css("margin-left"));
            var l = j.position().left - m.width();
            if (j.position().top < window.innerHeight / 2) {
                $("#arrow").css("top", j.position().top + n.height() + "px");
                if (l > 0) {
                    f();
                    $("#arrow").css("left", j.position().left - m.height() + "px")
                } else {
                    g("arrow", 270);
                    $("#arrow").css("left", j.position().left + n.width() + "px")
                }
                $("#tip_txt").css("top", j.position().top + n.height() + m.height() + "px")
            } else {
                if (l > 0) {
                    g("arrow", 90);
                    f();
                    $("#arrow").css("left", j.position().left - m.height() + "px")
                } else {
                    g("arrow", 180);
                    $("#arrow").css("left", j.position().left + n.width() + "px")
                }
                $("#arrow").css("top", j.position().top - m.height() + "px");
                $("#tip_txt").css("top", j.position().top - m.height() - h.height() + "px")
            }
        }
        function g(j, h) {
            $("#" + j).css({
                transform: "rotate(" + h + "deg)",
                "-webkit-transform": "rotate(" + h + "deg)"
            })
        }
        function f() {
            if (g_config.style == 71) {
                var j = document.getElementById("ruleImgContainer")
            } else {
                var j = document.getElementById("ruleImg")
            }
            var m = document.getElementById("arrow");
            var h = document.getElementById("tip_txt");
            var k = parseInt($("#tip_txt").css("margin-left"));
            var l = j.x - m.clientWidth;
            if (l < k && l > 0) {
                $("#activityKit .arrow").css({
                    width: j.x - k + "px",
                    height: (j.x - k) * 1.13 + "px"
                })
            }
        }
    })();
    b.openLocation = function (j, g, f, e, k, h) {
        wx.openLocation({
            latitude: j,
            longitude: g,
            name: f,
            address: e,
            scale: k || 25,
            infoUrl: h || ""
        })
    };
    b.computeDistance = function (g, j, h, k) {
        var f = new qq.maps.LatLng(g, j);
        var e = new qq.maps.LatLng(h, k);
        return qq.maps.geometry.spherical.computeDistanceBetween(f, e)
    };
    b.initJsFoot = function (e) {
        $("body").data("hd-initHdGameJsfootArg", {
            soundIcon_l: e.soundIcon_l,
            soundIcon_t: e.soundIcon_t
        });
        $(function () {
            b.sortRuleBox.init(e.rulesortstr);
            $(function () {
                $(".replaceBox").each(function (r, s) {
                    var t = $(this);
                    var u = t.attr("_target");
                    if (u) {
                        u = $("#" + u);
                        if (u.length > 0) {
                            t.after(u);
                            t.remove()
                        }
                    }
                })
            });
            var g = b.decodeHtml(e.hostName);
            var p = b.decodeHtml(e.hostLink).replace("http://", "");
            var q = b.decodeHtml(e.menuLink).replace("http://", "");
            var j = $(".menuName,.menuLinkBtn");

            function l() {
                $("#skillSupMask").show()
            }
            if (e.fromFav && g_config.haveAward) {
                $("#resule-gift-sucImg").data("openCode", e.fromFav);
                showAwardDetail4Draw()
            }
            function o(s) {
                var r = e.getRegAwardUrl;
                if (g_config.isDoubleGame) {
                    var r = r + "&openIdB=" + b.otherOpenId
                }
                $.ajax({
                    type: "post",
                    url: r,
                    error: function () {
                        consoloe.log("获取名单失败");
                        s && s(false)
                    },
                    success: function (t) {
                        var u = $.parseJSON(t);
                        if ((u == null) || (u.length == 0)) {
                            s && s(false)
                        } else {
                            s && s(true)
                        }
                    }
                })
            }

            $("#showRankNum").text(rankShowNum);
            $(".hostName").text(g);
            $(".resule-status-send").on("touchstart", function () {
                if (g_config.haveAward) {
                    b.changePoup(3, "", true)
                } else {
                    luckDraw()
                }
            });

            $("#awardInfo").on("click", ".codeInfoBox", function (r) {
                b.openAwardDetail.call(this, r)
            });
            $("#resule-gift-sucImg, .clickHere, .seeAwardDetail").on("touchstart", function (r) {
              location.href="/memVoucher?type=prizes";
                // g_config.firstTouchRank = g_config.firstTouchAward = g_config.firstTouchWinList = true;
                // showAwardDetail4Draw()
            });
            $(".awardCloseIcon").on("click", function () {
                b.wxConfig.removeWxShareUrlArg("fromFav");
                $("#awardDetailBox").hide();
                $("#resule-gift-box,resule-status-box").hide();
                $(".gameBox").add(".home").removeClass("overflow-y-hidden");
                g_config.showSkillSup && $(".bottomSkill").show()
            });
            $(".codeImg").on("click", function () {
                $(".codeDetailImgBox").show()
            });
            $("#immediaAwardBtn").on("click", function () {
                $("#awardCodeLayer").show()
            });
            $(".codeDetailImgBox").click(function () {
                $(this).hide()
            });
            $("#useStoreBox .moreBtn").click(function () {
                $("#storeListBox").show()
            });
            $("#storeListBox .closeBtn").click(function () {
                $("#storeListBox").hide()
            });
            $("#codeDetailInfoBox .copy").on("click", function () {
                $(".codeCopyDetailMask").show()
            });
            $(".codeCopyDetailMask").click(function () {
                $(this).hide()
            });
            if (!g_config.afterWxCard) {
                $(".awardCusText").on("touchstart", function () {
                    var r = $("#awardCusTextInfo");
                    if (r.css("display") == "block") {
                        $(this).find(".awardDeailIcon").removeClass("awardIncoSlideDown");
                        $(this).find(".awardDeailIcon").addClass("awardIncoSlideUp")
                    } else {
                        $(this).find(".awardDeailIcon").removeClass("awardIncoSlideUp");
                        $(this).find(".awardDeailIcon").addClass("awardIncoSlideDown")
                    }
                    r.slideToggle()
                })
            }
            if (e.isHideFxts) {
                $(".resule-fxts").hide()
            }

            $(".homePoupMask").on("touchend", function (r) {
                r.preventDefault();
                r.stopPropagation();

                if ($(r.target).hasClass("homePoupMask")) {
                    $(this).hide()
                }
            });
            $(".menuBtnBox").on("touchend", function () {
            });
            if (e.showJoinNum) {
                $("#joinNumLine").show()
            } else {
                $("#joinNumLine").hide()
            }
            if (e.showRedDot) {
                $("#Award_Round_Dot").css("display", "inline-block")
            }
            if (e.showMDRedDot) {
                $("#Mingdan_Round_Dot").css("display", "inline-block")
            }
            if (e.showAwardBtn) {
                $("#myAwardBtn").show()
            }
            if (e.isSelAwardLine) {
                $("#selfAwardLine").show();
                $("#awardLineBox").hide()
            } else {
                $("#awardLineBox").show();
                $("#selfAwardLine").hide()
            }
            if (!e.showSkillSup) {
                $(".skillInfo").hide();
                $(".skillInfo").addClass("hideSkill")
            }
            if (e.menuStyle == 1) {
                console.log("sss");
                $(".menuBtnBox").addClass("hide")
            } else {
                if (e.menuStyle == 2) {
                    if ($.trim(q).length == 0) {
                        j.css("text-decoration", "none")
                    } else {
                        j.attr("href", b.decodeHtml(e.menuLink))
                    }
                } else {
                    if (e.menuStyle == 3) {
                        (function () {
                            var r = $("#attentionMask");
                            b.createQrImg($("#attentionPoup"), q);
                            j.on("touchend", function () {
                                r.show();
                                return false
                            })
                        })()
                    }
                }
            }
            if ($.trim(p).length == 0) {
                $(".hostName").css("text-decoration", "none");
                $("a.hostName").attr("href", "#")
            }
            $(".totalDraw").hide()

            if ($("#awardExplain").text().length == 0) {
                $("#awardExplain_h").hide()
            }
            $(".hdskillInfo a").click(function () {

                if (!g_config.isOem) {
                    if (g_config.aid != 14788299) {
                        l();
                        return false
                    }
                }
            });
            $(".skillInfo a").click(function () {

                if (!g_config.isOem) {
                    if (g_config.aid != 14788299) {
                        l();
                        return false
                    }
                }
            });
            if (hg.sound.list && hg.sound.list.length > 0) {
                b.appendMusicIcon();
                if (e.drawType == 1 || g_config.style == 4 || g_config.style == 61 || g_config.style == 64 || g_config.style == 67) {
                    $(".home .soundIcon").remove()
                }
                if (g_config.style == 27) {
                    $(".home .soundIcon").remove();
                    hg.sound.allowPlay = false;
                    hg.sound.pauseAll()
                }
            }
            $("#resule-gift-sucImg").css({
                "margin-left": "auto",
                "margin-top": "1.6rem",
                "margin-right": "auto",
                "margin-bottom": "1.6rem",
            });
            $(".gameBgBox .soundIcon").css("z-index", "100");
            $(".soundIcon").addClass("soundIconPlay");
            var m = "soundPause|" + g_config.aid + "|" + g_config.gameId + "|" + g_config.openId;
            $(".soundIcon").on("touchstart", function () {
                event.stopPropagation();
                event.preventDefault();
                var r = $(".soundIcon");
                if (!r.hasClass("soundIconOff")) {
                    hg.sound.allowPlay = false;
                    hg.sound.pauseAll();
                    b.setLocalStorage(m, "-")
                } else {
                    hg.sound.allowPlay = true;
                    hg.sound.readyPlay(0, 0, "loop");
                    b.removeLocalStorage(m)
                }
            });
            if (b.getLocalStorage(m)) {
                hg.sound.allowPlay = false;
                hg.sound.pauseAll()
            }
            $("#ruleImg").addClass("ruleImgAnimate");
            $(".home").on("touchend", "#startBtnImg,#titleImg,#homeBg", function (r) {
                r.preventDefault()
            });
            var k = function (r) {
                if (!startBtnAjax.call(this, r)) {
                    return
                }
                hg.sound.play("startButton");
                if (typeof hg.sound.cache[0] !== "undefined" && typeof hg.sound.cache[0].playing !== "undefined" && !hg.sound.cache[0].playing && g_config.style != 51 && g_config.style != 49 && g_config.style != 9 && g_config.style != 48 && g_config.style != 57 && g_config.style != 62 && g_config.style != 58 && g_config.style != 65 && g_config.style != 69) {
                    if (g_config.style == 27 && !b.getLocalStorage(m)) {
                        hg.sound.allowPlay = true
                    }
                    hg.sound.readyPlay(0, 0, "loop")
                }
            };
            $("#startBtnImg,.startBtnImg").each(function (r, t) {
                var s = $(this).data("tapEventType") || "touchend";
                $(this).on(s, k)
            });
            var h = $("#advertising");
            var n = function () {
                var r = $(".home");
                if (r.length == 0 || r.is(":visible")) {
                    startBtnDelay()
                }
            };
            if (!h.hasClass("hideImp")) {
                hg.assets.onload(function () {
                    var s = 3;
                    var r = function () {
                        h.fadeOut(600);
                        !b.notNeedStartBtn && n()
                    };
                    h.find(".skipTips").on("click", r);
                    (function t() {
                        if (s <= 0) {
                            return r()
                        }
                        h.find(".seconds").text(s--);
                        setTimeout(t, 1000)
                    })()
                })
            } else {
                !b.notNeedStartBtn && hg.assets.onload(n)
            }
        });
        $(function () {
            function h(j) {
                return function (n, m) {
                    var l, k;
                    if (typeof n === "object" && typeof m === "object" && n && m) {
                        l = n[j];
                        k = m[j];
                        if (l === k) {
                            return 0
                        }
                        if (typeof l === typeof k) {
                            return l < k ? -1 : 1
                        }
                        return typeof l < typeof k ? -1 : 1
                    }
                }
            }
            var f = g_config.style == 55 ? $(".gameBox,.showAwardBoxPage") : $(".home,.showAwardBoxPage");
            g_config.style == 67 && (f = $(".showAwardBoxPage"));
             {
                if (playerAwardList.length > 3) {
                    f.append('<div class="showAwardBox"><ul class="awardInfoList"><li></li></ul></div>');
                    var g = "";
                    $.each(playerAwardList, function (j, k) {
                        g += '<div class="uerItem"><img src="' + JSON.parse(this.info).headImg + '"><span class="winner">' + this.name + '<span>获得了<span class="award">' + this.award + "</span></div>"
                    });
                    if (g_config.style == 55) {
                        $(".showAwardBox").hide();
                        setTimeout(function () {
                            $(".awardInfoList li").append(g);
                            $(".showAwardBox").awardSlide({
                                padding_right: "0.8rem"
                            })
                        }, 3500)
                    } else {
                        setTimeout(function () {
                            $(".awardInfoList li").append(g);
                            $(".showAwardBox").awardSlide({
                                padding_right: "0.8rem"
                            })
                        }, 100)
                    }
                    $(".homeBtnBox").css("bottom", "3rem")
                }
            }
            setTimeout(function () {
                var l = $(window).height() / $(window).width() < 1.575;
                var j = l ? $(window).width() * 1.575 : $(window).height();
                var k = g_config.showSkillSup ? 1 : 0;
                if (g_config.style == 71) {
                    $(".showAwardBox").css({
                        position: "relative"
                    })
                } else {
                     {
                        $(".showAwardBox").css("top", (j - $(".bottomSkill").outerHeight() * k - $(".showAwardBox").outerHeight()) / g_rem + "rem")
                    }
                    if (g_config.showSkillSup) {
                        $(".showAwardBox").css("top", (j - $(".bottomSkill").outerHeight() * k - $(".showAwardBox").outerHeight() - 2) / g_rem + "rem")
                    }
                }
            }, 50);
            if (!g_config.showSlide) {
                $(".showAwardBox").hide()
            } else {
                $(".showAwardBox").addClass("footerBox")
            }
            hg.on("home", $.throttle(function () {
                $.ajax({
                    type: "post",
                    url: g_config.ajaxUrl + "hdgame_h?cmd=getJoinNum&gameId=" + g_config.gameId + "&openId=" + g_config.openId,
                    success: function (k) {
                        var j = $.parseJSON(k);
                        if (!isNaN(j.joinNum)) {
                            $("#joinNum").text(j.joinNum)
                        }
                    }
                })
            }, 100))
        })
    };
    b.createQrImg = function (l, g) {
        if (l.length == 0) {
            return
        }
        try {
            var j = l.find(".QRImg_canvas")[0];
            var p = j.getContext("2d");
            var k = 0;
            j.width = 7.7 * g_rem;
            j.height = 16.5 * g_rem;
            var n = LF.setCanvasePixelRatio(p);
            j.style.height = j.height + "px";
            j.style.width = j.width + "px";
            j.width *= n;
            j.height *= n;
            p.beginPath();
            p.fillStyle = "#ffffff";
            p.fillRect(0, 0, 7.7 * g_rem, 16.5 * g_rem);
            var h = new Image();
            h.crossOrigin = "anonymous";
            h.onload = function () {
                p.save();
                p.drawImage(h, 0, 0, 7.7 * g_rem, 15.8 * g_rem);
                p.restore();
                f();
                o()
            };
            h.src = _resRoot + "/caewm.jpg";

            function f() {
                k++;
                var q = g ? (k == 2) : (k == 1);
                if (q) {
                    var e = j.toDataURL("image/jpeg", 8);
                    l.find(".QRImg_canvas").hide();
                    //l.find(".QRImg_exportImg").attr("src", e).show()
                }
            }
            function o() {
                var e = new Image();
                e.crossOrigin = "anonymous";
                if (g.indexOf("http://") < 0 && g.indexOf("https://") < 0) {
                    g = g.indexOf("http://") < 0 ? ("http://" + g) : g
                }
                // if (!m_debug) {
                //     g = g.replace(/http:\/\//, "https://")
                // }
                e.onload = function () {
                    var q = e.width / 20;
                    var r = e.height / 20 * (7.7 / q);
                    r = r < 7.7 ? 7.7 : r;
                    p.save();
                    p.drawImage(e, 0, 0, 7.7 * g_rem, r * g_rem);
                    p.restore();
                    f()
                };
                e.onerror = function (q) {
                    console.log(q);
                    console.log(this.src)
                };
                e.src = g
            }
        } catch (m) {
        }
    };
    b.setStartBtnHeight = function (j, g) {
        var r = $(window).height();
        if (r === 0) {
            console.log("window高度为零！");
            setTimeout(function () {
                b.setStartBtnHeight(j, g)
            }, 20);
            return
        }
        typeof j === "undefined" && (j = g_config.showSlide);
        typeof g === "undefined" && (g = g_config.showSkillSup);
        var h = j ? 1 : 0;
        var k = g ? 1 : 0;
        var f = $(".bottomSkill").outerHeight() * k + $(".showAwardBox").outerHeight() * h;
        var s = $("#startBtnImg").parent();
        var p = $("#ruleImg");
        var q = $("#joinNumLine");
        var u = $("#drawInfo");
        var v = $(".homeBtnBox");
        var t = $("#gameTips");
        var e = parseInt(s.css("top")) + s.outerHeight();
        var o = parseInt(q.css("top")) + q.outerHeight();
        var n = parseInt(u.css("top")) + u.outerHeight();
        var m = parseInt(p.css("top")) + p.outerHeight();
        var l = parseInt(t.css("top")) + t.outerHeight();
        if (s.length > 0 && e > r - f) {
            s.css("top", (r - f - s.outerHeight() - 5) / g_rem + "rem")
        }
        if (p.length > 0 && m > r - f) {
            p.css("top", (r - f - p.outerHeight() - 5) / g_rem + "rem")
        }
        if (q.length > 0 && o > r - f) {
            q.css("top", (r - f - q.outerHeight() - 5) / g_rem + "rem")
        }
        if (u.length > 0 && n > r - f) {
            u.css("top", (r - f - u.outerHeight() - 5) / g_rem + "rem")
        }
        if (v.length > 0) {
            v.css("bottom", (f + 8) / g_rem + "rem")
        }
        if (t.length > 0 && l > r - f) {
            t.css("top", (r - f - t.outerHeight() - 5) / g_rem + "rem")
        }
        $("#limitRange").css("height", $(window).height() - f)
    };
    b.getGameRule = (function () {
        var e = false;
        return function (g, f) {
            if (e) {
                return
            }
            e = true;
            b.showLoadToast("数据加载中");
            $(".ajaxLoadBg").show();
            $(".ajaxLoadBar").addClass("ajaxLoad");
            $.ajax({
                type: "post",
                url: g_config.ajaxUrl + "hdgameOther_h.jsp?cmd=getGameRule&aid=" + g_config.aid + "&gameId=" + g_config.gameId + "&openId=" + g_config.openId,
                data: f,
                complete: function () {
                    b.otherAjaxComplete();
                    b.hideLoadToast();
                    setTimeout(function () {
                        e = false
                    }, 200)
                },
                error: function () {
                    b.showMsg("网络繁忙，请刷新重试")
                },
                success: function (j) {
                    var h = $.parseJSON(j);
                    if (h.success) {
                        _ruleInfo.rule = h.data;
                        if (typeof _ruleInfo.rule.info == "string") {
                            h.data = $.parseJSON(_ruleInfo.rule.info).rule
                        } else {
                            h.data = _ruleInfo.rule.info.rule
                        }
                        g && g(h)
                    } else {
                        b.showMsg("系统错误，请刷新重试")
                    }
                }
            })
        }
    })();
    b.getSrc = function (e) {
        return e.replace("*_resRoot*", _resRoot)
    };
    b.getJqSrc = function (f) {
        var h = "";
        if (f.attr("src")) {
            h = f.attr("src")
        } else {
            if (f.val()) {
                h = f.val()
            } else {
                if (f.css("background-image")) {
                    var g = f.css("background-image");
                    var e = g.match(/url\("(.+)"\)/) || g.match(/url\('(.+)'\)/) || g.match(/url\((.+)\)/);
                    if (e) {
                        h = e[1]
                    }
                }
            }
        }
        return h
    };
    b.setCookie = function (f, g, e) {
        var h = new Date();
        h.setDate(h.getDate() + e);
        document.cookie = f + "=" + escape(g) + ((e == null) ? "" : ";expires=" + h.toGMTString())
    };
    b.getCookie = function (e) {
        if (document.cookie.length > 0) {
            c_start = document.cookie.indexOf(e + "=");
            if (c_start != -1) {
                c_start = c_start + e.length + 1;
                c_end = document.cookie.indexOf(";", c_start);
                if (c_end == -1) {
                    c_end = document.cookie.length
                }
                return unescape(document.cookie.substring(c_start, c_end))
            }
        }
        return ""
    };
    b.setLocalStorage = function (f, g, e) {
        if (!localStorage) {
            if (e) {
                b.setCookie(f, g, e)
            }
            return
        }
        localStorage.setItem(f, g)
    };
    b.getLocalStorage = function (f, e) {
        if (!localStorage) {
            if (e) {
                return b.getCookie(f)
            }
            return ""
        }
        return localStorage.getItem(f)
    };
    b.removeLocalStorage = function (f, e) {
        if (!localStorage) {
            if (e) {
                b.setCookie(f, "", -1)
            }
            return
        }
        localStorage.removeItem(f)
    };
    b.refresh = function () {
        window.location.reload()
    };
    b.noLoadingRefresh = function () {
        window.location.href = document.URL.indexOf("noLoading") >= 0 ? document.URL : (document.URL + (document.URL.indexOf("?") >= 0 ? "&" : "?") + "noLoading=fff")
    };
    b.isIPhone = function () {
        return window.navigator.userAgent.indexOf("iPhone") !== -1
    };
    b.IsPC = function () {
        var e = navigator.userAgent;
        var h = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"];
        var f = true;
        for (var g = 0; g < h.length; g++) {
            if (e.indexOf(h[g]) > 0) {
                f = false;
                break
            }
        }
        return f
    };
    b.getType = function (e) {
        return Object.prototype.toString.call(e).match(/\[object\s(\w+)]/)[1].toLowerCase()
    };
    b.changeTimeLimit = function (e) {
        if (!e || e == "[8]") {
            return "周一至周日"
        }
        var h = $.parseJSON(e);
        var j = "";
        for (var g = 0; g < h.length; g++) {
            var k = g,
                f = g;
            while (h[f + 1] == (h[f] + 1)) {
                    f++
                }
            if (k == f) {
                    j = j + (j ? "、" : "") + d(h[k])
                } else {
                    j = j + (j ? "、" : "") + d(h[k]) + "至" + d(h[f])
                }
            g = f
        }
        return j
    };

    function d(e) {
        switch (e) {
        case 1:
            return "周一";
        case 2:
            return "周二";
        case 3:
            return "周三";
        case 4:
            return "周四";
        case 5:
            return "周五";
        case 6:
            return "周六";
        case 7:
            return "周日"
        }
        return ""
    }
    b.jointUrlArg = function (f, e) {
        if (e) {
            return f + (f.indexOf("?") >= 0 ? "&" : "?") + e
        } else {
            return f
        }
    };
    b.jointParams = function (f) {
        var e = [];
        $.each(f, function (g, h) {
            e.push(g + "=" + h)
        });
        return e.join("&")
    };
    b.setUrlArg = function () {
        if (arguments.length < 2) {
            return
        }
        var f = Array.prototype.slice.call(arguments),
            e = b.parseURL(f.shift());
        $.each(f, function (g, h) {
                if ($.type(h) === "array") {
                    e.params[h[0]] = h[1]
                }
            });
        e.obj.search = b.jointUrlArg("", b.jointParams(e.params));
        return e.obj.href
    };
    b.removeUrlArg = function () {
        var f = Array.prototype.slice.call(arguments);
        if (f.length < 2) {
            return
        }
        var e = b.parseURL(f.shift());
        $.each(f, function (g, h) {
            if (e.params.hasOwnProperty(h)) {
                delete e.params[h]
            }
        });
        e.obj.search = b.jointUrlArg("", b.jointParams(e.params));
        return e.obj.href
    };
    b.parseURL = function (f) {
        var e = document.createElement("a");
        e.href = f;
        return {
            obj: e,
            source: f,
            protocol: e.protocol.replace(":", ""),
            host: e.hostname,
            port: e.port,
            query: e.search,
            params: (function () {
                var j = {},
                    h = e.search.replace(/^\?/, "").split("&"),
                    g = h.length,
                    k = 0,
                    l;
                for (; k < g; k++) {
                        if (!h[k]) {
                            continue
                        }
                        l = h[k].split("=");
                        j[l[0]] = l[1]
                    }
                return j
            })(),
            file: (e.pathname.match(/\/([^\/?#]+)$/i) || [, ""])[1],
            hash: e.hash.replace("#", ""),
            path: e.pathname.replace(/^([^\/])/, "/$1"),
            relative: (e.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ""])[1],
            segments: e.pathname.replace(/^\//, "").split("/")
        }
    };
    b.replaceUrlByTime = function () {
        try {
            var f = document.URL.replace(/[&?]_hgTime=\d+/, "");
            f += (f.indexOf("?") == -1 ? "?" : "&") + "_hgTime=" + new Date().getTime();
            history.replaceState(null, "", f)
        } catch (g) {}
    };
    b.shuffle = function (g) {
        var f = g.length;
        for (var j = 0; j < f - 1; j++) {
            var e = Math.floor(Math.random() * (f - j));
            var h = g[e];
            g[e] = g[f - j - 1];
            g[f - j - 1] = h
        }
        return g
    };
    (function (e) {
        e.logStd = f(40, function (g, j) {
            try {
                j = j.slice(0, 2000)
            } catch (h) {}
            $.ajax({
                type: "post",
                url: g_config.ajaxUrl + "logJsErr_h.jsp?cmd=jsLogStd",
                data: {
                    msg: "hgLog-" + g + " msg=" + j + " aid=" + g_config.aid + " gameId=" + g_config.gameId + " openId=" + g_config.openId
                },
            })
        });
        e.logErr = f(3, function (g, h) {
            $.ajax({
                type: "post",
                url: g_config.ajaxUrl + "logJsErr_h.jsp?cmd=jsLogErr",
                data: {
                    msg: "hgErr-" + g + " msg=" + h + " aid=" + g_config.aid + " gameId=" + g_config.gameId + " openId=" + g_config.openId
                },
            })
        });

        function f(g, h) {
            return function (k, l, j) {
                if (typeof h[k] == "undefined") {
                    h[k] = 0
                } else {
                    h[k]++
                }
                if (typeof j == "undefined") {
                    j = g
                }
                if (j > 0 && h[k] >= j) {
                    return
                }
                h(k, l)
            }
        }
    }(b));
    (function (e) {

        e.getCityPickerData = (function () {
            var g;
            return function () {
                if (!g) {
                    g = (function h(j) {
                        var k = [];
                        $.each(j, function (m, o) {
                            var l = {};
                            l.value = o.id;
                            l.text = o.name;
                            var n = site_cityUtil.getCities(o.id);
                            if (n.length > 0) {
                                l.children = h(n)
                            }
                            k.push(l)
                        });
                        return k
                    })(site_cityUtil.getProvince())
                }
                return g
            }
        })()
    }(b));
    (function (e) {
        var g;
        e.watch = f();

        function f() {
            function h(j, m, k, l) {
                if (!c(k)) {
                    return
                }
                k(m, m);
                return h.add(j, k, l)
            }
            h.add = function (k, l, m) {
                if (!g || !c(l)) {
                    return
                }
                var j;
                var n = function (p, o) {
                    if (p.$evalAsync && p.$watch) {
                        j = p.$watch(k, l)
                    } else {
                        j = {
                            uw: function () {
                                p.stop(k)
                            },
                            check: p(k, l),
                        }
                    }
                };
                if ($.type(m) == "boolean" && m) {
                    g().invoke(["watch", n])
                } else {
                    if (typeof m == "object" && m) {
                        n(m)
                    } else {
                        if (g) {
                            g().invoke(["$rootScope", function (o) {
                                n(o)
                            }])
                        }
                    }
                }
                return j
            };
            h.bind = function () {
                var j = Array.prototype.slice.call(arguments);
                var k = false;
                if (!$.isArray(j[0])) {
                    k = j.shift();
                    if (g) {
                        if ($.type(k) == "string") {
                            k = $$(k).data("$scope")
                        } else {
                            if ($.type(k) == "function") {
                                k = k()
                            }
                        }
                    }
                }
                $.each(j, function (m, n) {
                    n.$replace = n[n.length > 2 ? 1 : 0];
                    n.$regExp = new RegExp("\\{" + n[0] + "}", "g")
                });
                var l = function (n, o) {
                    var m = n;
                    $.each(j, function (r, s) {
                        n = n.replace(s.$regExp, s.$replace);
                        m = m.replace(s.$regExp, "conf[" + r + "][" + (s.length - 1) + "]")
                    });
                    try {
                        var q = (new Function("conf", "return " + m + ";"))(j)
                    } catch (p) {
                        throw p
                    }
                    return h(n, q, o, k)
                };
                l.add = function (m, n) {
                    $.each(j, function (o, p) {
                        m = m.replace(p.$regExp, p.$replace)
                    });
                    return h.add(m, n, k)
                };
                return l
            };
            h.$new = f;
            return h
        }
    })(b);
    b.bulletparam = {
        wxheadimg: true,
        loop: true,
        gutter: 34,
        autoplay: true,
        isScroll: true
    };
    b.initComment = function (e) {
        $.extend(b.bulletparam, e)
    };

    function c(e) {
        return b.getType(e) == "function"
    }
    function a(e) {
        return b.getType(e) == "object"
    }
})(HdGame);
HdGame.poupValidate = function (c, b) {
    if (!$("#spxdPage").hasClass("imp-hide")) {
        $("#spxdPage").addClass("imp-hide")
    }
    g_config.theValiteCodeComeInTime = new Date().getTime();
    if ($("#valiteInputIframe").length == 0) {
        var a = g_config.ajaxUrl.replace("/ajax/", "");
        $("#validteBoxerBg").data("_theCallBack", c).show();
        $("#validteBoxerBg").append('<iframe id="valiteInputIframe" frameborder="0" scrolling="no" src="' + a + '/poupvalite.jsp" style="height: 25rem; width: 100%;"></iframe>')
    } else {
        $("#validteBoxerBg").data("_theCallBack", c).show()
    }
    b && (g_config.valiteOptions = b);
    typeof b === "undefined" && (delete g_config.valiteOptions)
};
var CUtil = (function () {
    var c = function (e, d) {
        if (d == null) {
            d = e;
            e = 0
        }
        return e + Math.floor(Math.random() * (d - e + 1))
    };
    var a = function (l) {
        var j, d;
        var h = l[0].toUpperCase() + l.slice(1),
            m = ["webkit", "moz", "MS", "ms", "o", ""];
        var e = document.createElement("div"),
            f = e.style;
        var g = 0,
            k = m.length;
        while (g < k) {
                j = m[g];
                d = (j) ? j + h : l;
                if (d in f) {
                    return j ? ("-" + j + "-") : ""
                }
                g++
            }
        return undefined
    };
    var b = {
        random: c,
        prefixed: a
    };
    return b
})();
var Comment = (function () {
    var a = HdGame.bulletparam;

    function b(f, d) {
        if (!f || f == "") {
            return
        }
        HdGame.initComment();
        var c = a.lineStyle ? a.lineStyle.splice(0, 1) : "";
        var g = (d * 1.5 + 0.13) + "rem",
            e = '<div class="hdCommentLine" style="top:' + g + ";" + c + '"><div class="hdComment">';
        f.forEach(function (j, h) {
                var k = j.headImg ? "background:url(" + j.headImg + ")  no-repeat #fff;background-size: cover;" : "";
                e += '<div class="hdCommentFloat"><div class="hdCommHeadImg"><span class="hdCommPortrait"  style="' + k + '"></span></div><div class="hdCommContent">' + j.content + "</div></div>"
            });
        e += "</div>";
        if (a.loop) {
                e += '<div class="hdComment">';
                f.forEach(function (j, h) {
                    var k = j.headImg ? "background:url(" + j.headImg + ")  no-repeat #fff;background-size: cover;" : "";
                    e += '<div class="hdCommentFloat"><div class="hdCommHeadImg"><span class="hdCommPortrait"  style="' + k + '"></span></div><div class="hdCommContent">' + j.content + "</div></div>"
                });
                e += "</div>"
            }
        e += "</div>";
        this.$dom = $(e);
        this.top = g
    }
    b.SPEEDS = [5, 6, 6.5].map(function (c) {
        return $(window).width() / c
    });
    b.prototype.winW = $(window).width();
    b.prototype.reset = function (e) {
        var d = CUtil.random;
        var k = this.winW;
        var m = parseInt(k) + 20;
        var j = 80;
        var l = b.SPEEDS.splice(d(0, b.SPEEDS.length - 1), 1)[0];
        this.v = l ? l : (k / 6);
        var n = this.$dom.find(".hdCommentFloat"),
            h = 0;
        for (var g = 0, f = n.length; g < f; g++) {
                h += Math.ceil(n.width()) + parseInt(n.css("margin-right")) + 50
            }
        if (h < k) {
                h = k
            }
        h = h + (m + j) * 2;
        this.v = (h / 2 + m + j) / this.v;
        var c = this.$dom.find(".hdComment");
        if (a.isScroll) {
                c.eq(0).addClass("hdCommentAnimate");
                c.css({
                    "padding-left": m + "px",
                    "padding-right": j + "px",
                    "animation-duration": this.v + "s",
                    "-webkit-animation-duration": this.v + "s"
                });
                setTimeout(function () {
                    c.eq(1).addClass("hdCommentAnimate")
                }, (this.v / 2) * 1000)
            }
        c.css({
                width: "50%"
            });
        this.$dom[0].style.top = this.top + "px";
        this.$dom[0].style.width = h + "px";
        this.boundsWidth = k + this.$dom[0].offsetWidth
    };
    return b
})();
var CView = (function () {
    var b = HdGame.bulletparam;

    function a(d) {
        this.eachCommListLen = this.eachCommListLen2 = 0;
        this.VIEW_LINE = [1, 2, 3];
        this.comments = [];
        var c = this;
        this.initCommentBase(c, d);
        if (b.autoplay) {
            $("#hdCommentPanel .replayInput").focus();
            c.$comm_page.hide();
            c.$comm_noshow.hide();
            c.stopAnimation && c.stopAnimation()
        } else {
            c.$comm_show.show()
        }
    }
    a.prototype.initCommentBase = function (c, e) {
        if (e) {
            e = $(e)
        } else {
            e = $("body")
        }
        if ($("#hdCommentOperation").length > 0) {
            return
        }
        var d = '<section id="hdCommentPanel" class="hdCommentPanel"><div class="hdCommentPage"></div></section>';
        e.append(d);
        c.$comm_page = $("#hdCommentPanel .hdCommentPage");
        c.$comm_operation = $("#hdCommentOperation");
        c.$comm_show = $("#hdCommentOperation .commmentShow");
        c.$comm_noshow = $("#hdCommentOperation .commmentNoShow")
    };
    a.prototype.initData = function (d) {
        var e = document.createDocumentFragment(),
            f, c;
        if (d.bulletList.length > d.VIEW_LINE.length) {
                d.VIEW_LINE.forEach(function (j, h) {
                    j = d.getSliceData(d);
                    f = new Comment(j, h);
                    if (!f.$dom) {
                        return
                    }
                    c = f.$dom;
                    d.comments.push(f);
                    e.appendChild(c[0])
                })
            } else {
                d.VIEW_LINE.forEach(function (j, h) {
                    j = d.bulletList.splice(0, 1);
                    f = new Comment(j, h);
                    if (!f.$dom) {
                        return
                    }
                    c = f.$dom;
                    d.comments.push(f);
                    e.appendChild(c[0])
                })
            }
        d.$comm_page.append(e);
        d.comments.forEach(function (j, h) {
                j.reset(h)
            });
        if (d.comments.length - 1 > -1) {
                var g = d.comments[d.comments.length - 1].top + d.comments[d.comments.length - 1].$dom.height();
                d.$comm_page.css("height", g + "px")
            }
        d.show()
    };
    a.prototype.getSliceData = function (c) {
        if (!c.bulletList || c.bulletList.length === 0) {
            return
        }
        if (c.eachCommListLen == 0) {
            c.eachCommListLen = Math.floor(c.bulletList.length / c.VIEW_LINE.length) ? Math.floor(c.bulletList.length / c.VIEW_LINE.length) : 1;
            c.eachCommListLen2 = c.bulletList.length % c.VIEW_LINE.length
        }
        var d;
        if (c.eachCommListLen2 > 0) {
            d = c.bulletList.splice(0, c.eachCommListLen + 1);
            c.eachCommListLen2--
        } else {
            d = c.bulletList.splice(0, c.eachCommListLen)
        }
        return d
    };
    a.prototype.getData = function (d, c) {
        c.$comm_page.show();
        c.bulletList = d
    };
    a.prototype.show = function (c) {
        if (this.isActive) {
            return
        }
        this.$comm_page.addClass("show");
        this.isActive = true
    };
    a.prototype.hide = function () {
        var c = this;
        c.$comm_page.removeClass("show");
        this.isActive = false;
        this.stopAnimation && this.stopAnimation()
    };
    return a
})();
var PlayInfo = (function () {
    var h = 0;
    var d = 0;
    var a = 5;
    var k = a;
    var b = 10;
    var n = false;
    var p = {
        show: false
    };

    function q(x, w, v, s, u, t) {
        h = x;
        d = w;
        a = v;
        k = s;
        b = u;
        n = t;
        p.show = t;
        r()
    }
    function e() {
        var t = a - h;
        var s = c();
        if (t > s) {
            t = s
        }
        if (t < 0) {
            t = 0
        }
        return t
    }
    function c() {
        if (!n) {
            return 100
        }
        var s = b - d;
        return s > 0 ? s : 0
    }
    function m(s) {
        h += s;
        d += s;
        r()
    }
    function j(s) {
        a += s;
        b += s;
        r()
    }
    function f(s) {
        a = s;
        r()
    }
    function l(s) {
        k = s;
        r()
    }
    function g(s) {
        b = s;
        r()
    }
    function o(s) {
        n = s;
        p.show = s;
        r()
    }
    function r() {
        $(".todayPlayCount").text(e());
        $(".totalPlayCount").text(c());
        $(".playTimesLimit").text(a);
        $(".playTimesLimitShow").text(k);
        $(".playTotalLimit").text(b);
        if (n) {
            $(".dayPlayHint").hide();
            $(".totalPlayHint").show();
            $(".dayPlayHint4Total").show();
            $(".playTotalFont").show()
        } else {
            $(".dayPlayHint").show();
            $(".totalPlayHint").hide();
            $(".dayPlayHint4Total").hide();
            $(".playTotalFont").hide()
        }
    }
    return {
        isLimitPlay: p,
        initData: q,
        getTodayRemainTimes: e,
        getTotalRemainTimes: c,
        addPlayTimes: m,
        addPlayTimesLimit: j,
        setPlayTimesLimit: f,
        setPlayTimesLimitShow: l,
        setPlayTotalLimit: g,
        setLimitPlay: o
    }
})();
HdGame.filterAward = function (a, c) {
    if (typeof c === "undefined") {
        c = 0
    }
    var d = a.awardList;
    d.push(a.comfort);
    var b = [];

    function e(f) {
        switch (f) {
        case 1:
            return "奖项一";
            break;
        case 2:
            return "奖项二";
            break;
        case 3:
            return "奖项三";
            break;
        case 4:
            return "奖项四";
            break;
        case 5:
            return "奖项五";
            break;
        case 6:
            return "奖项六";
            break;
        case 7:
            return "奖项七";
            break;
        case 8:
            return "奖项八";
            break;
        case 900:
        default:
            return "安慰奖";
            break
        }
    }
    switch (c) {
    case 0:
        $.each(d, function (g, j) {
            var f = {};
            f.from = "#resule-gift-sucImg";
            f.limit = "5000k";
            var h = e(j.level);
            h = g_config.style == 67 ? h.replace("奖项", "商品") : h;
            f.title = h;
            f.defSrc = a.theDefaultGiftImgSrc;
            if (g + 1 >= d.length) {
                if (!a.openComfort) {
                    f.hide = true
                }
            } else {
                if ((g + 1) > a.awardNum) {
                    f.hide = true
                }
            }
            b.push(f)
        })
    }
    return b
};
HdGame.showLoadToast = function (b, a) {
    if (a) {
        setTimeout(function () {
            parent.$("#loadingToast .weui-toast__content").text(b);
            parent.$("#loadingToast").removeClass("hide")
        }, a)
    } else {
        parent.$("#loadingToast .weui-toast__content").text(b);
        parent.$("#loadingToast").removeClass("hide")
    }
};
HdGame.hideLoadToast = function (a) {
    if (a) {
        setTimeout(function () {
            parent.$("#loadingToast").addClass("hide")
        }, a)
    } else {
        parent.$("#loadingToast").addClass("hide")
    }
};
HdGame.appendMusicIcon = function () {
    var a = $("body").data("hd-initHdGameJsfootArg");
    if (!a) {
        return
    }
    if (g_config.style == 55) {
        $(".gameBgBox").append('<div class="' + ("soundIconOff ") + "soundIcon" + (hg.sound.list[0].optFlag != 1 ? "" : " soundIconHide") + '" style="z-index:90"></div>');
        $('.gameBgBox .soundIcon:not(".soundIconPlay")').css({
            left: a.soundIcon_l,
            top: a.soundIcon_t
        });
        $('.home .soundIcon:not(".soundIconPlay")').hide()
    } else {
        if (g_config.style == 49 || g_config.style == 69) {
            $(".body").append('<div class="' + ("soundIconOff ") + "soundIcon" + (hg.sound.list[0].optFlag != 1 ? "" : " soundIconHide") + '" style="z-index:700"></div>');
            $('.body .soundIcon:not(".soundIconPlay")').css({
                left: a.soundIcon_l,
                top: a.soundIcon_t,
            })
        } else {
            if (g_config.style == 67) {
                $(".myCutDownPriceList").append('<div class="' + ("soundIconOff ") + "soundIcon" + (hg.sound.list[0].optFlag != 1 ? "" : " soundIconHide") + '" style="z-index:700"></div>');
                $('.myCutDownPriceList .soundIcon:not(".soundIconPlay")').css({
                    left: a.soundIcon_l,
                    top: a.soundIcon_t,
                })
            } else {
                $(".home").add(".gameBgBox").append('<div class="' + ("soundIconOff ") + "soundIcon" + (hg.sound.list[0].optFlag != 1 ? "" : " soundIconHide") + '" style="z-index:100"></div>');
                $('.home .soundIcon:not(".soundIconPlay")').css({
                    left: a.soundIcon_l,
                    top: a.soundIcon_t
                })
            }
        }
    }
    $("body").removeData("hd-initHdGameJsfootArg")
};
HdGame.checkStatus = function () {
    if (g_config.status == 3) {
        HdGame.statusMsg(3);
        return true
    }
};
HdGame.getIsOutofJoinNumFlag = function (a) {
    $.ajax({
        type: "post",
        url: g_config.ajaxUrl + "hdgame_h?cmd=checkJoinNum&gameId=" + g_config.gameId + "&openId=" + g_config.openId,
        success: function (c) {
            var b = $.parseJSON(c);
            a(b.isOutofJoinNum ? "true" : "false")
        },
        error: function () {
            a("error")
        }
    })
};
$.ajaxPrefilter("*", function (a, c, b) {
    if (c.url.indexOf("hdgame_h") != -1 || c.url.indexOf("hdzhuli_h") != -1) {
        a.data += "&" + $.param({
            canal: fromCanal,
        })
    }
});
(function (c) {
    function f(l, k) {
        var j, h, g;
        try {
            j = l.toString().split(".")[1].length
        } catch (n) {
            j = 0
        }
        try {
            h = k.toString().split(".")[1].length
        } catch (n) {
            h = 0
        }
        g = Math.pow(10, Math.max(j, h));
        return (l * g + k * g) / g
    }
    function d(l, k) {
        var j, h, g, p;
        try {
            j = l.toString().split(".")[1].length
        } catch (o) {
            j = 0
        }
        try {
            h = k.toString().split(".")[1].length
        } catch (o) {
            h = 0
        }
        g = Math.pow(10, Math.max(j, h));
        p = (j >= h) ? j : h;
        return Number(((l * g - k * g) / g).toFixed(p))
    }
    function e(k, h) {
        var g = 0,
            l = k.toString(),
            j = h.toString();
        try {
                g += l.split(".")[1].length
            } catch (n) {}
        try {
                g += j.split(".")[1].length
            } catch (n) {}
        return Number(l.replace(".", "")) * Number(j.replace(".", "")) / Math.pow(10, g)
    }
    function b(k, j) {
        var m = 0,
            l = 0,
            h, g;
        try {
                m = k.toString().split(".")[1].length
            } catch (n) {}
        try {
                l = j.toString().split(".")[1].length
            } catch (n) {}
        h = Number(k.toString().replace(".", ""));
        g = Number(j.toString().replace(".", ""));
        return (h / g) * Math.pow(10, l - m)
    }
    function a(g) {
        return function (j, h) {
            if (isNaN(j) || isNaN(h)) {
                return NaN
            }
            return g(j, h)
        }
    }
    c.Num = {
        add: a(f),
        sub: a(d),
        mul: a(e),
        div: a(b),
    };
    c.foreiganNum = function (k) {
        var h = (k + "").split(".");
        k = parseInt(h[0]);
        var g = [],
            j = 0;
        k = (k || 0).toString().split("");
        for (var l = k.length - 1; l >= 0; l--) {
                j++;
                g.unshift(k[l]);
                if (!(j % 3) && l != 0) {
                    g.unshift(",")
                }
            }
        var m = g.join("");
        if (h.length == 2) {
                m = m + "." + h[1]
            }
        return m
    };
    c.getTrueHeight = function () {
        var h = $(window).height() / $(window).width() < 1.575;
        if (!h) {
            return false
        }
        var g = $(window).width() * 1.575;
        return g
    }
})(HdGame);
