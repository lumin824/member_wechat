if (typeof HdGame == "undefined") {
    HdGame = {}
}(function (b) {
    b.isUrl = function (h, g) {
        if (typeof g == "undefined") {
            g = true
        }
        if (g && h.length >= 1 && h.charAt(0) == "/") {
            return true
        }
        if (g && h.length >= 1 && h.charAt(0) == "#") {
            return true
        }
        var f = /^(\w+:).+/;
        var e = f.test(h);
        return e
    };
    b.fixUrl = function (e, f) {
        if (b.isUrl(e, f)) {
            return e
        }
        return "http://" + e
    };
    b.encodeHtml = function (e) {
        return e && e.replace ? (e.replace(/&/g, "&amp;").replace(/ /g, "&nbsp;").replace(/\b&nbsp;+/g, " ").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\\/g, "&#92;").replace(/\'/g, "&#39;").replace(/\"/g, "&quot;").replace(/\n/g, "<br/>").replace(/\r/g, "")) : e
    };
    b.encodeHtmlAttr = function (e) {
        return e && e.replace ? (e.replace(/\"/g, "&#x22;").replace(/\'/g, "&#x27;").replace(/</g, "&#x3c;").replace(/>/g, "&#x3e;").replace(/&/g, "&#x26;")).replace(/\\/g, "&#5c;") : e
    };
    b.encodeUrl = function (e) {
        return typeof e === "undefined" ? "" : encodeURIComponent(e)
    };
    b.decodeHtml = function (e) {
        return e && e.replace ? (e.replace(/&nbsp;/gi, " ").replace(/&lt;/gi, "<").replace(/&gt;/g, ">").replace(/&#92;/gi, "\\").replace(/&#39;/gi, "'").replace(/&quot;/gi, '"').replace(/\<br\/\>/gi, "\n").replace(/&amp;/gi, "&")) : e
    };
    b.decodeUrl = function (e) {
        return typeof e === "undefined" ? "" : decodeURIComponent(e)
    };
    b.checkCharacterLen = function (e, j) {
        var l = $.type(j) == "string" ? j : j.val();
        var k = l.replace(/[^\x00-\xff]/g, "**");
        var h = k.trim().length;
        var g = 0;
        for (var f = 0; f < h; f++) {
            g++
        }
        return g > e
    };
    b.checkTextLength = function (q, h, m) {
        var j;
        if (m) {
            j = h
        } else {
            j = h.val()
        }
        var o = j.replace(/[^\x00-\xff]/g, "**");
        var f = o.length;
        if (f < q) {
            return {
                isOverflow: false
            }
        }
        var l = o.substr(0, q);
        var k = 0;
        var n = "";
        for (var g = 0; g < l.length; g++) {
            var e = l.substr(g, 1);
            if (e == "*") {
                k++
            }
        }
        var p = 0;
        if (k % 2 == 0) {
            p = k / 2 + (q * 1 - k);
            n = j.substr(0, p)
        } else {
            p = (k - 1) / 2 + (q * 1 - k);
            n = j.substr(0, p)
        }
        if (m) {
            return {
                isOverflow: true,
                returnValue: n
            }
        } else {
            h.val(n)
        }
    };
    b.fadOut = function (f, g) {
        if (f.is(":visible")) {
            g && g();
            return
        }
        f.css("opacity", 0);
        f.show();
        f.addClass("poupFadIn");
        setTimeout(function () {
            f.removeClass("poupFadIn");
            f.css("opacity", 1);
            g && g()
        }, 200)
    };
    b.fadIn = function (f, g) {
        if (f.is(":hidden")) {
            g && g();
            return
        }
        f.css("opacity", 1);
        f.addClass("poupFadOut");
        setTimeout(function () {
            f.hide();
            f.removeClass("poupFadOut");
            f.css("opacity", 1);
            g && g()
        }, 200)
    };
    b.statusMsg = function (g, f, j, e, m) {
        var l = g,
            k;
        var h = false;
        if (k && typeof f !== "string") {
                f = k
            }
        b.showMsg(l, f, e, m, h)
    };
    b.showMsg = (function () {
        var h = '<div class="weui-mask" style="z-index:5000"></div><div class="weui-dialog"><div class="weui-dialog__bd"><span id="statusTip-msg"></span><br/><span id="sTime"></span></div><div class="weui-dialog__ft"><a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_primary">知道了</a></div></div>';
        var e = $(h);
        var f = e.find("#statusTip-msg");
        var g = e.find("#sTime");
        var j = false;
        return function (n, l, k, o, m) {
            f.html(n);
            k && e.find(".weui-dialog__btn").text(k);
            if (typeof l === "string") {
                g.text(l)
            } else {
                if (l) {
                    g.hide()
                } else {
                    g.show()
                }
            }
            if (!j) {
                $("body").append(e);
                j = true
            }
            $(".weui-dialog__btn").one("touchstart", function () {
                o && o();
                b.fadIn(e, function () {
                    e.remove();
                    j = false
                });
                return false
            })
        }
    })();
    b.showMsgToast = function (j, e, g, h) {
        var f = {
            bodyMsg: j,
            sTime: e,
            className: g,
            primaryBtnFn: h
        };
        return b.showMsgToast2(f)
    };
    b.showMsgToast2 = function (g) {
        var h = $.extend({
            headMsg: "",
            bodyMsg: "",
            hasHead: false,
            isTwoFootBtn: false,
            primaryBtnText: "知道了",
            defaultBtnText: "取消",
            primaryBtnFn: null,
            defaultBtnFn: null
        }, g);
        var j = '<div class="toast" style="z-index: 2000; position: relative; display: none;"><div class="weui-mask" style="z-index: 2000;"></div><div class="weui-dialog" style="z-index: 2000;">';
        h.hasHead ? j += '<div class="weui-dialog__hd"><strong class="weui-dialog__title">' + h.headMsg + "</strong></div>" : "";
        j += '<div class="weui-dialog__bd">' + h.bodyMsg + '</div><div class="weui-dialog__ft">';
        h.isTwoFootBtn ? j += '<a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_default">' + h.defaultBtnText + "</a>" : "";
        j += '<a href="javascript:;" class="weui-dialog__btn weui-dialog__btn_primary">' + h.primaryBtnText + "</a></div></div></div>";
        var e = $(j);
        $("body").append(e);
        e.fadeIn(200);
        var f;
        e.find(".weui-dialog__btn_primary").off(".primaryBtn").on("touchstart.primaryBtn", function () {
            f = h.primaryBtnFn && h.primaryBtnFn();
            if (f != "stop") {
                e.fadeOut(200, function () {
                    e.remove()
                })
            }
        });
        e.find(".weui-dialog__btn_default").off(".defaultBtn").on("touchstart.defaultBtn", function () {
            h.defaultBtnFn && h.defaultBtnFn();
            e.fadeOut(200, function () {
                e.remove()
            })
        });
        return e
    };
    b.showSuccessToast = function (h, f) {
        f = f || 2000;
        $("#toast").remove();
        var g = '<div id="toast" style="z-index: 5000; position: relative; display: none;"><div class="weui-mask_transparent"></div><div class="weui-toast"><i class="weui-icon-success-no-circle weui-icon_toast"></i><p class="weui-toast__content">' + h + "</p></div></div>";
        var e = $(g);
        $("body").append(e);
        e.fadeIn(150);
        setTimeout(function () {
            e.fadeOut(150, function () {
                e.remove()
            })
        }, f)
    };
    (function () {
        var g = null;
        _lastWrap = null,
        _stop = function (h) {
            if (h) {
                if (h.data("_guide")) {
                    h.data("_guide").remove();
                    h.removeData("_guide")
                }
            } else {
                if (g) {
                    g.remove();
                    g = null;
                    _lastWrap && _lastWrap.removeData("_guide")
                }
            }
        };
        var f = function (m, o, p) {
            var j = $('<div class="ball-scale-multiple"><div></div><div></div><div></div></div>');
            if (m.css("position") === "static") {
                m.css("position", "relative")
            }
            if (typeof o === "object" && typeof o.x !== "undefined" && typeof o.y !== "undefined" && typeof o.w !== "undefined" && typeof o.h !== "undefined") {
                var n = Math.min(o.w, o.h) * (p || 1);
                j.children().css({
                    width: n,
                    height: n
                });
                j.css({
                    left: o.x + (o.w - n) / 2,
                    top: o.y + (o.h - n) / 2
                })
            } else {
                p = p || 0.8;
                var h = m.outerHeight();
                var k = m.outerWidth();
                var l = (o === "w" ? k / 2 : (o === "h" ? h / 2 : (o === "min" ? Math.min(h, k) / 2 : Math.max(h, k) / 2))) * p;
                j.css({
                    left: k / 2 - l,
                    top: h / 2 - l
                });
                j.children().css({
                    width: 2 * l,
                    height: 2 * l
                })
            }
            m.append(j);
            g = j;
            m.data("_guide", j);
            _lastWrap = m
        };
        var e = {
            play: f,
            stop: _stop
        };
        b.Guide = e
    })();
    b.homePoup = function (e) {
        if (e == 1) {
            $("#rankBox").show();

        } else {
            if (e == 3) {
                $("#awardBox").show();

            } else {
                if (e == 4) {
                    $("#regAwardBox").show();

                }
            }
        }
    };
    b.poupAjaxComplete = function () {
        var e = $(".ajaxLoadBar");
        e.addClass("ajaxComplete");
        $(".ajaxLoadBg").hide();
        setTimeout(function () {
            e.removeClass("ajaxLoad");
            e.removeClass("ajaxComplete")
        }, 500)
    };
    (function () {
        var r = {
            getStoreUrl: "",
            openId: "",
            gameId: 0,
        };
        var j = {
            menuLen: "",
            slideBarWidth: "",
            slideBarMaxWidth: "",
            marginLeft: false,
            hasInitEvent: false,
        };
        var q = {
            isLoad: false,
            isRankAll: false,
            hasLoadAll: false,
            start: 0,
            num: 0,
            limit: 99,
            delay: 500,
            close: function () {
                this.isClose = true;
                this.isRankAll = false;
                this.hasLoadAll = false;
                this.num = this.start = 0
            },
        };
        b.rankAjax = q;

        function p() {
            var u = "touchstart";
            var t = $(".poupTitleBox .poupTitleMune");
            t.on(u, function () {
                if (t.length == t.not(".hide").length) {
                    var w = $(this).index()
                } else {
                    var w = t.filter(":visible").index(this);
                    w = w < 0 ? 0 : w
                }
                var v = parseInt($(this).attr("_flag"));
                b.changePoup(v, w);
                b.removeAllEditLayer()
            });
        }
        b.changePoup = function (B, z, x) {

            q.isClose = false;
            var v = $("#ruleImg");
            var w = $("#ruleImg")
            var t = w.position().left + v.width() / 2 + "px ";
            var s = w.position().top + v.height() / 2 + "px";
            $(".poupTitleMune").removeClass("checked");

            if (j.marginLeft) {
                $(".poupSlideBar .slideBarTip").css("left", ((13.25 / j.menuLen) * z + (j.slideBarWidth - j.slideBarMaxWidth) / 40) + "rem")
            } else {
                $(".poupSlideBar .slideBarTip").css("left", (13.25 / j.menuLen) * z + "rem")
            }
            g(B, x);
            $(".popTabBox").css("left", -$(window).width() * z)
        };

        function g(t, s) {
            var u = s;
            $(".gameBox,.home,.body").addClass("overflow-y-hidden");

            if (t === 1) {
                e(t)
            } else {
                if (t === 2) {
                    k(t)
                } else {
                    if (t === 3) {
                        o(t)
                    } else {
                        if (t === 4) {
                            m(t)
                        } else {
                            if (t === 5) {
                                n(t)
                            }
                        }
                    }
                }
            }
            hg.fire("showPoup", t)
        }
        function e(x) {
            $("#rankBox .poupMainInfo").css("height", $("#rankBox").height() - $("#rankBox .attentionBox").height() - 18);
        }
        function k(s) {

            $("#directDrawInfoBox").find(".drawTotalFont").show()

            $("#explaiDrawInfoBox").find(".drawTotalFont").hide();
            $("#explaiDrawInfoBox").find(".chanceFont").show();
            $("#explaiDrawInfoBox").find(".everyOneFont").show()

            $("#ruleBox .poupMainInfo").css("height", $("#ruleBox").height() - $("#ruleBox .attentionBox").height() - 18);
            $("#ruleBox").show();
        }
        function f(t, s) {
            var u = t.repalce(/-/g, "/");
            u = new Date(u).getTime();
            return u > s
        }
        var o = function (s) {

            var u = new Array();
            var t = $("#awardInfo");
            $("#awardInfoBox").css("height", $("#awardBox").height() - $("#awardBox .attentionBox").height() - 18);

            u.push("gameId=", r.gameId);
            u.push("&openId=", r.openId);

        };


        function m(s) {
            $("#regAwardBox .poupMainInfo").css("height", $("#regAwardBox").height() - $("#regAwardBox .attentionBox").height() - 18);
            $("#regAwardBox").show();
            $("#regAwardBox").css("height", $("#poupInfoBox").height() - $(".poupHead").height() - g_rem * 0.25);

        }
        function n(s) {
            $("#informBox").show();
            $("#inform-reason-page").show();
            $("#inform-desc-page").hide();
            $("#next-inform-btn").hide();
            $("#informResultBox .confirm-btn").off("touchend").on("touchend", function () {
                event.preventDefault();
                $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                $("#informBox").hide();
                $("#informResultBox").hide();
                hg.fire("hidePoup", s)
            });
            $("#cancel-inform-btn").off("touchend").on("touchend", function () {
                event.preventDefault();

                $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                $("#informBox").hide();
                hg.fire("hidePoup", s)
            })
        }

        $("#next-inform-btn").on("touchend", function () {
            $("#inform-reason-page").hide();
            $("#inform-desc-page").show();
            $("#spxdPage").addClass("imp-hide")
        });

    })();
    (function () {
        var j = false;
        var e = 0.7;
        b.sortRuleBox = {
            init: g,
            addBtn: f,
        };

        function g(p) {
            var o = $("#ruleBox > .poupMainInfo");
            var l = o.find(".poupLine");
            if (l.length > p.length) {
                var k = "a".charCodeAt();
                for (var m = p.length; m < l.length; m++) {
                    p += String.fromCharCode(k + m)
                }
            }
            var n = l.sort(function (s, q) {
                var t = p.indexOf($(s).data("sortkey"));
                var r = p.indexOf($(q).data("sortkey"));
                if (t == -1 || r == -1) {
                    return 0
                }
                return t > r ? 1 : -1
            });
            o.append(n)
        }
        function f() {
            b.addModuleLayer("#ruleBox .poupLine", {
                name: "下移",
                onshow: function (k) {
                    var l = k.target;
                    if (l.next().length == 0) {
                        $(this).hide()
                    } else {
                        $(this).show()
                    }
                },
                onclick: function (l) {
                    l.stopPropagation();
                    var m = l.data.target;
                    var k = m.next();
                    if (k.length != 0) {
                        h(m, k, m)
                    }
                    parent.changeIsSave()
                }
            });
            b.addModuleLayer("#ruleBox .poupLine", {
                name: "上移",
                onshow: function (k) {
                    var l = k.target;
                    if (l.prev().length == 0) {
                        $(this).hide()
                    } else {
                        $(this).show()
                    }
                },
                onclick: function (l) {
                    l.stopPropagation();
                    var m = l.data.target;
                    var k = m.prev();
                    if (k.length != 0) {
                        h(k, m, m)
                    }
                    parent.changeIsSave()
                }
            })
        }
        function h(m, l, o) {
            if (j) {
                return
            }
            j = true;
            b.removeAllEditLayer();
            var k = m.height();
            var n = l.height();
            m.animate({
                top: n + e * g_rem
            }, 300);
            l.animate({
                top: -k - e * g_rem
            }, 300, function () {
                j = false;
                m.insertAfter(l);
                m.css("top", 0);
                l.css("top", 0);
                o.click()
            })
        }
    })();


    (function () {
        var e = Math.max($(window).height() / $(window).width(), $(window).width() / $(window).height()) > 22 / 16;
        var j = {
            startStatus: false,
            exposeFlag: false,
            disable: false,
            result_disable: false,
            gift_disable: false,
        };
        var h = {
            home: function () {},
            again: function () {},
            giftInit: function (k) {
                k && k()
            }
        };
        var g = (function () {
            var p = 1.5;
            var m = 0;
            var l, r, q;
            var o, n, k;
            return function (t) {
                if (!j.startStatus) {
                    return
                }
                var v = new Date().getTime();
                if ((v - m) > 100) {
                    $("input").blur();
                    var s = t.accelerationIncludingGravity;
                    m = v;
                    l = s.x;
                    r = s.y;
                    q = s.z;
                    var u = Math.sqrt(l * l + r * r + q * q) / Math.sqrt(o * o + n * n + k * k);
                    if (u > p) {
                        j.startStatus = false;
                        h.giftInit(function (w) {
                            hg.sound.play("yiy");
                            setTimeout(function () {
                                j.showGift(w)
                            }, 1500)
                        })
                    }
                    o = l;
                    n = r;
                    k = q
                }
            }
        })();
        var f = {};
        j.initArg = function (k) {
            if (this.disable) {
                return
            }
            $.extend(f, k)
        };
        j.init = function (k) {
            if (this.disable) {
                return
            }
            $.extend(h, k);
            $.extend(h, f);
            this.giftBox = $("#resule-gift-box");
            this.resuleBox = $(".resuleBox");
            this.statusBox = $("#resule-status-box");
            var o = this;
            var l = $("#resule-status-lots").width();
            var n = $("#resule-status-lots").height();
            var p = $("#lots-wait-img").width();
            var m = $("#lots-wait-img").height();
            $("#lots-wait-img").css({
                width: l / (6.15 * g_rem) * p,
                height: n / (12.4 * g_rem) * m,
            });
            $(".resule-status-home , .resule-gift-home, .resule-gift-home2").on("touchend", function () {
                event.preventDefault();
                event.stopPropagation();

                b.fadIn(o.resuleBox, function () {
                    o.giftBox.hide();
                    o.statusBox.hide();
                    $(".gameBox,.home,.body").removeClass("overflow-y-hidden");
                });
                h.home()
            });
            $("#resule-status-lotsHand .waitDrawBtn").off("touchend").on("touchend", function () {
                j.startStatus = false;
                h.giftInit(function (q) {
                    o.showGift(q)
                })
            });
            $(".resule-gift-home").css({
                width: "10rem",
                height: "2rem",
                "line-height": "2rem"
            });
            $(".resule-gift-home2").css({
                width: "4.75rem",
                height: "2rem",
                "line-height": "2rem"
            });
            this.giftBox.find(".resule-gift-seeRank").remove();
            this.show = this.showGift
        };

        j.showGift = function (p) {

            var l = {
                isSuc: false,
                giftName: "",
                giftStyle: "",
                giftCode: 0,
                giftImage: "",
                awardImageW: "6rem",
                awardImageH: "6rem",
                awardTypeNum: 0,
                awardIndex: 1,
                genewxcard: false
            };
            var w = $.extend({}, l, p);
            if (this.statusBox) {
                b.fadIn(this.statusBox)
            }
            $("#resule-gift-sucImg").data("openCode", w.giftCode);
            b.fadOut(this.resuleBox);
            b.fadOut(this.giftBox);

            var x = $(".cannotGetThePriceBox").height();
            var k = $(".resuleBox").height() - $("#resule-gift-box").find(".attentionBox").height() - 2.5 * g_rem;
            if (x > k) {
                $(".cannotGetThePriceBox").height(k);
                var q = 16 * g_rem - parseFloat($("#faiImgBox img").css("left"));
                var o = k - parseFloat($("#faiImgBox img").css("top"));
                var t = $("#faiImgBox img").width() / $("#faiImgBox img").height();
                var v = $("#faiImgBox img").height();
                if (v > o) {
                    if ((o * t) > q) {
                        $("#faiImgBox img").height(q / t).width(q)
                    } else {
                        $("#faiImgBox img").height(o).width(o * t)
                    }
                }
            }

            if ($(".menuAgain").length > 0) {
                $("#resule-gift-scrollWrap").css("height", $(window).height() - $(".menuAgain").outerHeight(true) - 1.6 * g_rem)
            } else {
                $("#resule-gift-scrollWrap").css("height", $(window).height() - $(".menuBtnBox").outerHeight(true) - 1.6 * g_rem)
            }
            var s = $(".gifArg");

            var m = $("#resule-gift-box .attentionBox");
            var n = m.find(".holdBox").outerHeight(true) + 0.5 * g_rem;
            $("#resule-gift-scrollWrap").css("height", $(window).height() - n - 3.1 * g_rem)
            if (w.isSuc) {
                $("#resule-gift-box").css("height", "auto");
                $("#resule-gift-scrollWrap").show();
                $("#faiImgBox").hide();
                $(".attentionBox .tellToOthers,#resule-gift-box .attentionBox .menuBtnBox").css({
                    visibility: "hidden"
                });
                $("#Award_Round_Dot").css("display", "inline-block");
                var r = function (y) {
                    var C = $("#resule-gift-sucImg").height();
                    if (y) {
                        C = $("#luckContainer .imgContainer").height()
                    }
                    var B = n;
                    var A = $(window).height() - 16.45 * g_rem - B;
                    var z = 5.6;
                    z -= 2.5;
                    A += 2 * g_rem
                    if (C > A) {
                        $("#resule-gift-buttonMenu").hide();
                        $("#resule-gift-buttonMenu-bottom").show().css({
                            bottom: B
                        });
                        $("#luckContainer").css({
                            "padding-bottom": z + "rem"
                        })
                    } else {
                        $("#resule-gift-buttonMenu").show();
                        $("#resule-gift-buttonMenu-bottom").hide();
                        $("#luckContainer").css({
                            "padding-bottom": "0"
                        })
                    }
                };
                setTimeout(r, 0)
                $("#resule-gift-sucImg").trigger("hd-resizable-resize");
                b.currentAward = w.giftName;
                b.currentAwardStyle = w.giftStyle;
                this.hasGift = true;
                s.eq(0).text(w.giftStyle);
                s.eq(1).text(w.giftName);
                $("#resule-gift-sucImg").css({
                    width: w.awardImageW,
                    height: w.awardImageH
                });

                $("#resule-gift-sucImg").attr("src", g_config.awardList[w.awardIndex - 1].aimg)
                $("#resule-gift-sucImg").width('100%');

                $(".gameBox,.home,.body").addClass("overflow-y-hidden");

            }
            $(".menuAgain,.menuBack,.backListen,.repeatDraw").css({
                bottom: $("#resule-gift-box").find(".attentionBox").height(),
                "line-height": "1.9rem"
            });
        };
        b.resulePoup = j
    })();
    (function () {
        b.moduleLayer = {
            isSelected: false,
            selectedElem: null,
            isDrag: false,
            isCancel: true,
            isScroll: false,
            offsetParent: null
        };
        var g = (function () {
            var p = 1;
            return function (q) {
                var r = q.data("layerId");
                if (!r) {
                    r = "layerId-" + p;
                    q.addClass(r);
                    q.data("layerId", r);
                    p++
                }
            }
        })();

        function o(r) {
            var q, p = r.parent();
            while (!p.is($("body"))) {
                q = p.scrollTop();
                p.scrollTop(q == 0 ? q + 1 : q - 1);
                if (p.scrollTop() != q) {
                    p.scrollTop(q);
                    if (r[0].nodeName == "DIV" && r.css("position") == "static") {
                        r.css("position", "relative")
                    }
                    return true
                }
                p = p.parent()
            }
            return false
        }
        function f(q) {
            var r = $("." + q);
            var s = ["Left", "Right", "Top", "Bottom"];
            var p = "";
            $.each(s, function (t, u) {
                if ($("#" + q + "moveFrame" + u).length == 0) {
                    p += '<div id="' + q + "moveFrame" + u + '" class="moveFrame" style="border-' + u.toLowerCase() + '-width:1px"></div>'
                }
            });
            if (p) {
                if (r.data("isScrollAble")) {
                    if (r[0].nodeName == "IMG") {
                        r.parent().append(p)
                    } else {
                        r.append(p)
                    }
                } else {
                    $("body").append(p)
                }
                h(r)
            }
            $(".moveFrame").each(function (t, u) {
                if ($(this).attr("id").indexOf(q) != -1) {
                    $(this).css({
                        borderColor: "#dcdcdc",
                        background: "transparent"
                    })
                }
            })
        }
        function h(p, v) {
            var q = p.data("layerId");
            var r = p.offset().left;
            var z = p.offset().top;
            var x = p.outerWidth();
            var s = p.outerHeight();
            if (p.data("isScrollAble")) {
                $("#" + q + "moveFrameLeft").css({
                    left: 0,
                    top: 0,
                    width: 0,
                    height: s,
                    borderLeftWidth: 1
                });
                $("#" + q + "moveFrameRight").css({
                    left: x - 1,
                    top: 0,
                    width: 0,
                    height: s,
                    borderRightWidth: 1
                });
                $("#" + q + "moveFrameTop").css({
                    left: 0,
                    top: 0,
                    width: x,
                    height: 0,
                    borderTopWidth: 1
                });
                $("#" + q + "moveFrameBottom").css({
                    left: 0,
                    top: s - 1,
                    width: x,
                    height: 0,
                    borderBottomWidth: 1
                })
            } else {
                $("#" + q + "moveFrameLeft").css({
                    left: r,
                    top: z,
                    width: 0,
                    height: s,
                    borderLeftWidth: 1
                });
                $("#" + q + "moveFrameRight").css({
                    left: r + x - 1,
                    top: z,
                    width: 0,
                    height: s,
                    borderRightWidth: 1
                });
                $("#" + q + "moveFrameTop").css({
                    left: r,
                    top: z,
                    width: x,
                    height: 0,
                    borderTopWidth: 1
                });
                $("#" + q + "moveFrameBottom").css({
                    left: r,
                    top: z + s - 1,
                    width: x,
                    height: 0,
                    borderBottomWidth: 1
                })
            }
            if (v) {
                var A = p.closest(".ui-wrapper");
                if (A.length == 0) {
                    A = p
                }
                var y = A.find(".recoverBtn");
                var u = false;
                if (x < 2 * y.width()) {
                    u = true
                }
                if (s < 2 * y.height()) {
                    u = true
                }
                if (u && !p.data("_minRecoverBtn")) {
                    p.data("_minRecoverBtn", true);
                    A.find(".ui-resizable-imgTopRightTip").css({
                        backgroundPositionX: 0,
                        backgroundPositionY: 11,
                        right: -11,
                        top: -11
                    });
                    A.find(".ui-resizable-imgTopLeftTip").css({
                        backgroundPositionX: 11,
                        backgroundPositionY: 11,
                        left: -11,
                        top: -11
                    });
                    A.find(".ui-resizable-imgBottomLeftTip").css({
                        backgroundPositionX: 11,
                        backgroundPositionY: 0,
                        left: -11,
                        bottom: -11
                    });
                    A.find(".ui-resizable-imgBottomRightTip").css({
                        backgroundPositionX: 0,
                        backgroundPositionY: 0,
                        right: -11,
                        bottom: -11
                    });
                    y.css("right", -24)
                } else {
                    if (p.data("_minRecoverBtn")) {
                        p.data("_minRecoverBtn", false);
                        A.find(".ui-resizable-imgTopRightTip").css({
                            backgroundPositionX: 11,
                            backgroundPositionY: 0,
                            right: 0,
                            top: 0
                        });
                        A.find(".ui-resizable-imgTopLeftTip").css({
                            backgroundPositionX: 0,
                            backgroundPositionY: 0,
                            left: 0,
                            top: 0
                        });
                        A.find(".ui-resizable-imgBottomLeftTip").css({
                            backgroundPositionX: 0,
                            backgroundPositionY: 11,
                            left: 0,
                            bottom: 0
                        });
                        A.find(".ui-resizable-imgBottomRightTip").css({
                            backgroundPositionX: 11,
                            backgroundPositionY: 11,
                            right: 0,
                            bottom: 0
                        });
                        y.css("right", 3)
                    }
                }
            }
        }
        b.removeMoveFrame = function (p) {
            $("#" + p + "moveFrameLeft,#" + p + "moveFrameRight,#" + p + "moveFrameTop,#" + p + "moveFrameBottom").remove();
            $$("#imgSizeShow").hide()
        };
        b.removeAllEditLayer = function () {
            $(".moveFrame").remove();
            $(".moduleLayer").remove();
            $(".recoverBtn").hide();
            $(".ui-resizable-handle").hide();
            if (b.moduleLayer.selectedElem) {
                if (b.moduleLayer.selectedElem[0].nodeName == "IMG") {
                    if (b.moduleLayer.selectedElem.attr("id") == "tree3") {
                        b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"));
                        b.moduleLayer.offsetParent.css("z-index", $("#tree1").data("z-index"))
                    } else {
                        b.moduleLayer.offsetParent.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                    }
                } else {
                    b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                }
                b.moduleLayer.selectedElem = null;
                b.moduleLayer.offsetParent = null
            }
            b.moduleLayer.isSelected = false;
            b.moduleLayer.isScroll = false
        };
        b.getPosition = function (u, w, C, E) {
            var v = u.parent().position();
            if (u.attr("id") == "resule-gift-sucImg") {
                return
            }
            if (w.left && w.top) {
                v = {
                    left: w.left,
                    top: w.top
                }
            }
            if (v.left == 0 && v.top == 0 && !E) {
                var y = u.parent().position();
                if (y.left != 0 || y.top != 0) {
                    v = y
                }
            }
            if (E) {
                var A = j({
                    left: (w.width - C.width) / 2,
                    top: (w.height - C.height) / 2
                }, C);
                return A
            }
            if (!u.parent().is(":visible")) {
                v.left = parseFloat(u.parent().css("left"));
                v.top = parseFloat(u.parent().css("top"))
            }
            var p = b.getLackBorder(u);
            var q = {
                width: u.parent().width(),
                height: u.parent().height()
            };
            if (p) {
                var G, x;
                var s = v.left + q.width / 2;
                var r = v.top + q.height / 2;
                var D = u.data("theLimitOneData");
                if (!D) {
                    var F;
                    switch (p) {
                    case "n":
                        x = v.top;
                        F = x;
                        G = s - C.width / 2;
                        break;
                    case "e":
                        x = r - C.height / 2;
                        F = v.left + q.width;
                        G = v.left + q.width - C.width;
                        break;
                    case "s":
                        x = v.top + q.height - C.height;
                        G = s - C.width / 2;
                        F = v.top + q.height;
                        break;
                    case "w":
                        x = r - C.height / 2;
                        G = v.left;
                        F = v.left;
                        break
                    }
                    u.data("theLimitOneData", F)
                } else {
                    switch (p) {
                    case "n":
                        x = D;
                        G = s - C.width / 2;
                        break;
                    case "e":
                        x = r - C.height / 2;
                        G = D - C.width;
                        break;
                    case "s":
                        x = D - C.height;
                        G = s - C.width / 2;
                        break;
                    case "w":
                        x = r - C.height / 2;
                        G = D;
                        break
                    }
                }
                p = null;
                var z = j({
                    left: G,
                    top: x
                }, C);
                return z
            } else {
                var t;
                var B = u.data("defData");
                if (B && B.left) {
                    t = {
                        left: parseRemToPx(B.width) / 2 + parseRemToPx(B.left),
                        top: parseRemToPx(B.height) / 2 + parseRemToPx(B.top)
                    }
                } else {
                    t = u.data("defPositionData");
                    if (!t) {
                        var s = v.left + q.width / 2;
                        var r = v.top + q.height / 2;
                        t = {
                            left: s,
                            top: r
                        };
                        u.data("defPositionData", {
                            left: s,
                            top: r
                        })
                    }
                }
                var z = j({
                    left: t.left - C.width / 2,
                    top: t.top - C.height / 2
                }, C);
                return z
            }
        };

        function j(s, p) {
            var r = s.left;
            var q = s.top;
            if (s.left < 0) {
                r = 0
            }
            if (s.top < 0) {
                q = 0
            }
            return {
                left: r,
                top: q
            }
        }
        b.getLackBorder = function l(t) {
            var p = t.data("resizable");
            if (p && p.options && p.options.handles) {
                var s = ["n", "e", "s", "w", "ne", "nw", "sw", "se"];
                var u = p.options.handles.split(",");
                $.each(u, function (v, y) {
                    var w = false;
                    var x = 0;
                    $.each(s, function (A, z) {
                        if (z == y) {
                            s.splice(A, 1);
                            return false
                        }
                    })
                });
                var r;
                var q = 0;
                $.each(s, function (v, w) {
                    if (w.length == 1) {
                        r = w;
                        return false
                    }
                });
                $.each(s, function (v, w) {
                    if (w.length > 1 && w.indexOf(r) >= 0) {
                        q++
                    }
                });
                if ((s.length - q) == 1) {
                    return r
                }
                return false
            }
            return false
        };
        b.getPosAndSize = function (r, t, s) {
            !s && (s = b.Img.MODE_SCALE_DEFLATE_FILL);
            var w = b.Img.calcSize(r.width, r.height, t.width, t.height, s);
            var v = t.left ? t.left : 0;
            var u = t.top ? t.top : 0;
            var p = {
                left: (t.width - w.width) / 2 + v,
                top: (t.height - w.height) / 2 + u,
            };
            var q = $.extend(w, p);
            return q
        };
        (function () {
            var q = {};
            var p = {};
            var r = 0;
            b.saveModuleLayerImg = function (t, s) {
                if (typeof t == "function") {
                    q["_cb" + (r++)] = t
                } else {
                    if (t && t.length > 0) {
                        $.each(t, function (v, u) {
                            if (!u.from) {
                                return
                            }
                            q[u.from] = u.defSrc;
                            s && (p[u.from] = s)
                        })
                    }
                }
            };
            b.getModuleLayerImg = function () {
                var t = [];
                $.each(q, function s(v, y) {
                    if (typeof y == "function") {
                        y = y();
                        if ($.isArray(y) || ($.isPlainObject(y) && !y.from)) {
                            $.each(y, s);
                            return
                        }
                    }
                    if ($.isPlainObject(y)) {
                        v = y.from;
                        y = y.defSrc
                    }
                    var w = $(v),
                        x, u;
                    if (w.length > 0) {
                            x = {
                                selecter: v,
                                elem: w,
                                defSrc: y,
                            };
                            if (u = p[v]) {
                                x.edit = u
                            }
                            t.push(x)
                        }
                });
                return t
            }
        })();
        b.initModuleLayer = n(function (t, s, v, q, u, w, p) {
            if (t.data("_hasBin")) {
                return
            }
            t.data("_hasBin", true);
            g(t);
            var r = false;
            if (s == 2) {
                t.each(function (x, y) {
                    if (this.nodeName == "IMG") {
                        r = true;
                        return false
                    }
                })
            }
            if (s == -1 || r) {
                if (t.length > 0) {
                    t.on("load", function (C) {
                        var y = $(this).data("your-Original-Size");
                        if (!y) {
                            return
                        }
                        var B = $(this).data("defData");
                        var z;
                        if (!B) {
                            z = {
                                width: $(this).parent().wdith(),
                                height: $(this).parent().height()
                            }
                        } else {
                            z = {
                                width: parseRemToPx(B.width),
                                height: parseRemToPx(B.height)
                            }
                        }
                        var A = b.Img.calcSize(y.width, y.height, z.width, z.height, b.Img.MODE_SCALE_DEFLATE_FILL);
                        var E = b.getPosition($(this), z, A);
                        var x = $(this);
                        $(this).hasClass("slaveImg") && !$(this).hasClass("notNeedFatherChage") && (x = $(this).add($(this).parent()));
                        x.css({
                            width: A.width,
                            height: A.height
                        });
                        var D = $.extend({}, A);
                        D = $.extend(D, E);
                        if ($(this).attr("id") != "resule-gift-sucImg") {
                            x.css({
                                left: E.left,
                                top: E.top
                            })
                        } else {
                            $$(function () {
                                var F = parent.game.$checkeIndex;
                                parent.game._awardList[F].aimgw = parsePxToRem(A.width + "px");
                                parent.game._awardList[F].aimgh = parsePxToRem(A.height + "px")
                            })
                        }
                        $(this).hdTrigger("hd-resizable-autoChange", [this, D, E]);
                        $(this).removeData("your-Original-Size").attr("resize", "1")
                    })
                }
            }
            t.on("selectstart", function () {
                return false
            });
            t.attr("title", "点击后编辑");
            t.addClass("defBgColor");
            t.data("mouseover", function (y) {
                if ($(this).css("cursor") !== "move") {
                    $(this).css("cursor", "pointer")
                }

                if ($(this).data("moduleLayerDisable")) {
                    $(this).attr("title", "");
                    return
                }
                var x = $(this).data("layerId");
                if (!$(this).data("hd-moduleLayerList")) {
                    $(this).attr("title", "")
                }
                if (!$(this).data("isScrollAble")) {
                    $(this).data("isScrollAble", o($(this)))
                }
                clearTimeout($(this).data("initModuleTimer"));
                if (b.ResizeDoc || $("#" + x + "moduleLayer").length > 0 || $(this).hasClass("answerItem") || $(this).hasClass("answer") || $(this).hasClass("thePcEgg") || $(this).attr("id") == "shake" || $(this).attr("id") == "selfAwardLine") {
                    return
                }
                f(x)
            });
            t.off("mouseover").off("mouseleave").on("mouseover", t.data("mouseover")).on("mouseleave", function (y) {
                var x = $(this).data("layerId");
                $(this).data("initModuleTimer", setTimeout(function () {
                    if ((!b.ResizeDoc && !b.moduleLayer.isSelected) || (b.moduleLayer.isSelected && (b.moduleLayer.selectedElem[0] != y.target && b.moduleLayer.selectedElem[0] != $(y.target).closest("." + x)[0]))) {
                        b.removeMoveFrame(x);
                        $("#" + x + "moduleLayer").remove()
                    }
                }, 100))
            }).on("click", function (A) {
                A.stopPropagation();
                if ($(this).data("moduleLayerDisable")) {
                    return
                }
                if (!b.moduleLayer.isDrag) {
                    var x = $(this).parent().data("layerId") ? $(this).parent().data("layerId") : $(this).data("layerId");
                    if (!$(this).is(b.moduleLayer.selectedElem)) {
                        b.removeAllEditLayer()
                    }
                    f(x);
                    e(x);
                    $(".moveFrame").css({
                        borderColor: "#2B73BA",
                        background: "#79cef9"
                    });
                    if ($(this).children(".ui-resizable-handle")[0]) {
                        $(this).children(".ui-resizable-handle").show()
                    } else {
                        $(this).siblings(".ui-resizable-handle").show()
                    }
                    if ($(this).attr("resize") == 1 || $(this).parent().attr("resize") == 1) {
                        var y = $(this).closest(".ui-wrapper");
                        if (y.length > 0) {
                            y.find(".recoverBtn").show()
                        } else {
                            if ($(this).hasClass("thePcEgg") || $(this).attr("id") == "shake") {
                                $(this).siblings(".recoverBtn").show()
                            } else {
                                $(this).find(".recoverBtn").show()
                            }
                        }
                    }
                    b.moduleLayer.isSelected = true;
                    if (b.moduleLayer.selectedElem) {
                        if (b.moduleLayer.selectedElem[0].nodeName == "IMG" && b.moduleLayer.selectedElem.attr("id") != "tree3") {
                            b.moduleLayer.offsetParent.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                        } else {
                            b.moduleLayer.selectedElem.css("z-index", b.moduleLayer.selectedElem.data("z-index"))
                        }
                    }
                    if ($(this)[0].nodeName == "IMG") {
                        if ($(this).hasClass("student") || $(this).hasClass("teacher") || $(this).hasClass("clickBtn")) {
                            var z = $(this);
                            b.moduleLayer.offsetParent = $(this);
                            while (z.parent()[0] != document) {
                                if (z.parent().css("z-index") != "auto") {
                                    b.moduleLayer.offsetParent = z.parent()
                                }
                                z = z.parent()
                            }
                        } else {
                            if ($(this).closest("#logoImgBox")[0]) {
                                b.moduleLayer.offsetParent = $(this).closest("#logoImgBox")
                            } else {
                                if (!$(this).closest(".imgContainer")[0]) {
                                    b.moduleLayer.offsetParent = $(this)
                                } else {
                                    b.moduleLayer.offsetParent = $(this).parent()
                                }
                            }
                        }
                        $(this).data("z-index", b.moduleLayer.offsetParent.css("z-index"));
                        b.moduleLayer.offsetParent.css("z-index", "700")
                    } else {
                        $(this).data("z-index", $(this).css("z-index")).css("z-index", "700")
                    }
                    if ($(this).attr("id") == "shake" || $(this).hasClass("editTarget-egg")) {
                        b.moduleLayer.selectedElem = $(this).parent();
                        return
                    }
                    if ($(this).attr("id") == "tree1" && parent.$("#editActive").find(".topBar .checked .name").text() == "挑战成功") {
                        $("#tree3").data("z-index", $("#tree3").css("z-index")).css("z-index", 200);
                        b.moduleLayer.selectedElem = $("#tree3");
                        return
                    }
                    b.moduleLayer.selectedElem = $(this)
                } else {
                    b.moduleLayer.isDrag = false
                }
            }).on("dblclick", function (z) {
                if ($(this).data("moduleLayerDisable")) {
                    return
                }
                var y = $(this).data("layerId");
                e(y);
                var x = $("#" + y + "moduleLayer");
                if (x.children().length != 0 && (!u || $(this).find("img")[0] || $(this)[0].nodeName)) {
                    var A = x.children().length - 1;
                    x.children().eq(A).click();
                    z.preventDefault();
                    z.stopPropagation()
                } else {
                    x.children().each(function (B, C) {
                        if ($(C).text() == "样式设置" || $(C).text() == "样式" || $(C).text() == "文字颜色") {
                            $(C).click();
                            z.preventDefault();
                            z.stopPropagation()
                        }
                    })
                }
            });
            if (p || s != -2) {
                b.saveModuleLayerImg(q, t);
                b.addModuleLayer(t, {
                    name: typeof p === "string" ? p : "编辑",
                    onclick: function (y) {
                        b.moduleLayer.isCancel = false;
                        setTimeout(function () {
                            b.moduleLayer.isCancel = true
                        }, 10);
                        parent.Edit.showEditByGame.call(y.data.target, s, v, q);
                        parent.operateFlagList[17] = true;
                        if (v == "awardSetting") {
                            var x = $(this).data("layerId");
                            b.removeMoveFrame(x);
                            $("#" + x + "moduleLayer").remove()
                        }
                        $(y.data.target).hdTrigger("hd-clickEditBtn", [s, v, q]);
                        return false
                    }
                })
            }
            if (u) {
                b.addModuleLayer(t, {
                    name: typeof u === "string" ? u : "样式",
                    onclick: function (x) {
                        parent.Edit.Css.showCssByGame.call(x.data.target, v, w);
                        parent.operateFlagList[21] = true;
                        return false
                    }
                })
            }
            t.trigger("hd-moduleLayer-after");
            t = null
        });
        b.addModuleLayer = n(function (r, q) {
            var p = r.data("hd-moduleLayerList");
            if (!p) {
                p = []
            }
            p.push(q);
            r.data("hd-moduleLayerList", p)
        });

        function e(q) {
            var u = q + "moduleLayer";
            var v = $("." + q);
            var s = v.data("hd-moduleLayerList");
            if (!s) {
                return
            }
            $("#" + u).remove();
            var p = $("<div id='" + u + "' class='moduleLayer' _mouseIn='0'></div>");
            if ($(v).data("isScrollAble") && !v.is($("#ruleBox").children().first())) {
                if (v[0].nodeName == "IMG") {
                    v.parent().append(p)
                } else {
                    v.append(p)
                }
            } else {
                $("body").append(p)
            }
            for (var w = s.length - 1; w >= 0; w--) {
                var x = s[w];
                if (x && x.onclick) {
                    var r;
                    if (x.html) {
                        r = $(x.html)
                    } else {
                        var t = x["class"] ? (" " + x["class"]) : "";
                        r = $("<a class='item tool" + t + "' hidefocus='true' href='javascript:;'>" + x.name + "</a>")
                    }
                    p.append(r);
                    x.data = x.data || {};
                    x.data.target = v;
                    r.on("click", x.data, x.onclick);
                    x.onshow && x.onshow.call(r, x.data)
                }
            }
            p.css("margin", 0);
            m(v, p);
            p.mouseover(function () {
                clearTimeout(v.data("initModuleTimer"))
            }).mouseleave(function (y) {
                if (!b.moduleLayer.isSelected) {
                    v.data("initModuleTimer", setTimeout(function () {
                        b.removeMoveFrame(q);
                        $("#" + u).remove();
                        var z = v.siblings(".ui-resizable-handle,.recoverBtn");
                        z = (z.length > 0) ? z : (v.find(".ui-resizable-handle,.recoverBtn"));
                        z.siblings(".ui-resizable-handle,.recoverBtn").hide()
                    }, 100))
                }
            });
            return p
        }
        function m(r, p) {
            if (!p) {
                p = $(".moduleLayer")
            }
            if (p.length < 1) {
                return
            }
            var w = r.outerWidth();
            var u = r.offset().left + w - p.outerWidth() - 2;
            if (u < 0) {
                u = 0
            }
            if (r.offset().left < $(window).width() && r.offset().left + w > $(window).width()) {
                u = $(window).width() - p.outerWidth() - 1
            }
            var t = (r.offset().top - p.height() - 1);
            var v = r.data("isScrollAble");
            if (v) {
                var s = $("#ruleBox .poupMainInfo");
                var x = s.children().first();
                var y = r.is(x)
            }
            if (v && (!y || p.parent().is(r))) {
                p.css("left", u - r.offset().left);
                if (y) {
                    var q = parseFloat(x.css("margin-top"));
                    if (isNaN(q)) {
                        q = 0
                    }
                    p.css("top", Math.min(s.scrollTop() - q, 0))
                } else {
                    p.css("top", t > 0 ? -p.height() - 1 : -r.offset().top)
                }
            } else {
                p.css("left", u);
                p.css("top", t > 0 ? t : 0 + "px")
            }
        }
        $("#ruleBox .poupMainInfo").on("scroll", function () {
            b.moduleLayer.isScroll = true;
            var q = $(this);
            if (b.moduleLayer.isSelected) {
                var t = q.children().first();
                var p = b.moduleLayer.selectedElem.data("layerId");
                var s = $("#" + p + "moduleLayer");
                if (t.is(b.moduleLayer.selectedElem)) {
                    if (!s.parent().is(t)) {
                        s.css({
                            left: 0,
                            top: 0
                        });
                        t.append(s);
                        m(b.moduleLayer.selectedElem)
                    }
                    var r = parseFloat(t.css("margin-top"));
                    if (isNaN(r)) {
                        r = 0
                    }
                    s.css("top", Math.min(q.scrollTop() - r, 0))
                }
            }
        });
        b.moduleSlaveImgResize = n(function (t, u, v) {
            var p = v || "body";
            if (t.parents(".home").length > 0 || t.parents(".zlEnterHome").length > 0) {
                p = "#limitRange"
            }
            t.parent("div.ui-wrapper").css({
                padding: "0"
            });
            t.resizable("destroy");
            var q = $(t).parents("div.imgContainer");
            var r = q.find(".slaveImg");
            if (q.length == 0) {
                q = t
            }
            if (r.length == 0) {
                r = t
            }
            g(r);
            r.data("defData", u);
            var s = {
                handles: "n,e,s,w,ne,nw,sw,se",
                autoHide: true,
                maxWidth: 318,
                maxHeight: 504,
                minWidth: 20,
                minHeight: 20,
                aspectRatio: true,
                containment: p,
                alsoResize: t,
                create: function (w, x) {
                    var z = $(this);
                    if (Math.abs(z.width() - parseRemToPx(u.width)) > 1 || Math.abs(z.height() - parseRemToPx(u.height)) > 1) {
                        r.attr("resize", 1)
                    }
                    z.css({
                        position: "relative",
                        "float": "none",
                        "z-index": "100"
                    });
                    if (z.width() < 40 || z.height() < 40) {
                        z.css("padding", "2px")
                    } else {
                        z.css("padding", "0")
                    }
                    z.append("<a class='recoverBtn' href='javascript:;'></a>");
                    z.find(".recoverBtn").on("click", function (A) {
                        $(this).hide();
                        r.attr("resize", 0);
                        z.add(r).css(u);
                        r.hdTrigger("hd-resizable-recover", [A, u]);
                        setTimeout(function () {
                            m(r);
                            h(r, true);
                            $("#resule-gift-sucImg").trigger("hd-resizable-resize")
                        }, 10);
                        parent.changeIsSave()
                    });
                    z.attr("_from", r.attr("id"));
                    (function () {
                        var C = [
                            ["s", "Bottom"],
                            ["n", "Top"],
                            ["w", "Left"],
                            ["e", "Right"]
                        ];
                        for (var B = 0; B < 4; B++) {
                            z.children(".ui-resizable-" + C[B][0]).addClass("ui-resizable-img" + C[B][1] + "Tip").css({
                                "z-index": "9030"
                            });
                            if (B < 2) {
                                for (var A = 2; A < 4; A++) {
                                    z.children(".ui-resizable-" + C[B][0] + C[A][0]).addClass("ui-resizable-img" + C[B][1] + C[A][1] + "Tip").css({
                                        "z-index": "9030"
                                    })
                                }
                            }
                        }
                    })();
                    var y = z.parent();
                    z.children(".ui-resizable-handle").mousedown(function (B) {
                        var A = y.attr("href");
                        if (typeof A != "undefined" && A.length > 0) {
                            y.removeAttr("href");
                            y.attr("onclick", "return false;")
                        }
                    });
                    if (r.data("layerId")) {
                        r.off("mouseover").off("mouseleave")
                    }
                    z.mouseover(function () {
                        clearTimeout(r.data("initModuleTimer"));
                        if (b.ResizeDoc) {
                            return
                        }
                        if (r.data("layerId")) {
                            r.data("mouseover").call(r)
                        }
                        r.removeData("resizable-isLeave")
                    }).mouseleave(function () {
                        r.data("initModuleTimer", setTimeout(function () {
                            if ((!b.ResizeDoc && !b.moduleLayer.isSelected) || (b.moduleLayer.isSelected && (r.parent()[0] != b.moduleLayer.selectedElem[0] && r[0] != b.moduleLayer.selectedElem[0] && !b.moduleLayer.selectedElem.is($("#tree3"))))) {
                                var A = r.data("layerId");
                                b.removeMoveFrame(A);
                                $("#" + A + "moduleLayer").remove();
                                z.children(".ui-resizable-handle").hide();
                                q.find(".recoverBtn").hide()
                            } else {
                                r.data("resizable-isLeave", true)
                            }
                        }, 100))
                    });
                    r.hdTrigger("hd-resizable-create", [w, x])
                },
                start: function (w, x) {
                    if (x.axis.length === 2) {
                        $(this).resizable("option", "aspectRatio", true)
                    } else {
                        $(this).resizable("option", "aspectRatio", false)
                    }
                    f(r.data("layerId"));
                    b.ResizeDoc = q;
                    $$("#imgSizeShow").show();
                    $("#" + r.data("layerId") + "moduleLayer").remove();
                    x.originalElement.parent().find(".recoverBtn").hide();
                    $(this).css("position", "relative");
                    $(".ui-resizable-bottomTip,.ui-resizable-cancelTip,.draggableBtn").css({
                        opacity: "0"
                    });
                    r.hdTrigger("hd-resizable-start", [w, x]);
                    $(".ui-resizable-handle").hide()
                },
                resize: function (x, y) {
                    parent.changeIsSave();
                    r.hdTrigger("hd-resizable-resize", [x, y]);
                    h(r, true);
                    var w = $$("#imgSizeShow");
                    w.find("span").eq(0).text(Math.round(r.width()) * 2);
                    w.find("span").eq(1).text(Math.round(r.height()) * 2);
                    w.css({
                        width: "auto",
                        height: "auto",
                        top: x.pageY + 15,
                        left: x.pageX - 30
                    })
                },
                stop: function (A, B) {
                    if (b.moduleLayer.isSelected) {
                        r.click()
                    }
                    delete b.ResizeDoc;
                    if (r.data("resizable-isLeave")) {
                        $(this).mouseleave();
                        r.removeData("resizable-isLeave")
                    } else {
                        r.mouseover()
                    }
                    $$("#imgSizeShow").hide();
                    $(".ui-resizable-bottomTip,.ui-resizable-cancelTip,.draggableBtn").css({
                        opacity: "1"
                    });
                    q.find(".slaveImg").attr("resize", "1");
                    q.find(".recoverBtn").show();
                    if ($(this).width() < 40 || $(this).height() < 40) {
                        $(this).css("padding", "2px")
                    } else {
                        $(this).css("padding", "0")
                    }
                    var C = $(this).parent();
                    var z = C.attr("link");
                    if (typeof z != "undefined" && z.length > 0) {
                        setTimeout(function () {
                            C.attr("href", z);
                            C.removeAttr("onclick")
                        }, 100)
                    }
                    var y = $(this).data("defData");
                    if (B.position && B.size && y && !y.left) {
                        var w = B.position.left + B.size.width / 2;
                        var x = B.position.top + B.size.height / 2;
                        r.data("defPositionData", {
                            left: w,
                            top: x
                        })
                    }
                    parent.operateFlagList[17] = true;
                    r.hdTrigger("hd-resizable-stop", [A, B])
                }
            };
            t.hdTrigger("hd-resizable-before", [s]);
            t.resizable(s);
            t.off(".slaveImg").hdTrigger("hd-resizable-after")
        });

        function n(p) {
            return function () {
                var t = this;
                var q = arguments.callee;
                var r = arguments[0];
                if (b.getType(r) === "array") {
                    if (b.getType(r[0]) === "array") {
                        $.each(r, function (u, v) {
                            if (b.getType(v) === "array") {
                                q.call(t, v)
                            }
                        })
                    } else {
                        q.apply(t, r)
                    }
                } else {
                    (typeof r === "string" || r.nodeType) && (r = $(r));
                    if (r instanceof jQuery && r.length > 0) {
                        var s = Array.prototype.slice.call(arguments);
                        if (r.length > 1) {
                            r.each(function () {
                                s[0] = $(this);
                                p.apply(t, s)
                            })
                        } else {
                            s[0] = r;
                            p.apply(t, s)
                        }
                    }
                    return t
                }
            }
        }
        function k(q, t, s, p) {
            var r = "hd-" + s + "-" + p;
            if (r === "hd-resizable-before" || r === "hd-draggable-before") {
                q.on(r, function (v, u) {
                    $.extend(u, t)
                })
            } else {
                q.on(r, function (v) {
                    v.stopPropagation();
                    var u = Array.prototype.slice.call(arguments);
                    u.shift();
                    t.apply(this, u)
                })
            }
            return q
        }
        $.fn.extend({
            hdTrigger: function (q, p) {
                this.trigger.apply(this, arguments)
            },
            setResizableOption: function (p) {
                return k(this, p, "resizable", "before")
            },
            setDraggableOption: function (p) {
                return k(this, p, "draggable", "before")
            },
            addResizableFn: function (q, p) {
                return k(this, p, "resizable", q)
            },
            addDraggableFn: function (q, p) {
                return k(this, p, "draggable", q)
            },
            addEditUploadFn: function (q, p) {
                return k(this, p, "editUpload", q)
            },
            awardSlide: function (q) {
                if (typeof q === "object") {
                    var s = {
                        margin_bottom: "0",
                        padding_right: "0",
                        speed: 15
                    };
                    var q = $.extend(s, q);
                    this.each(function () {
                        $(this).show();
                        var t = $(this),
                            x = t.children("ul");
                        var u = $(window).width();
                        var w = 0;
                        var y = 8;
                        $(".awardInfoList .uerItem").css({
                                "padding-left": q.padding_left,
                                "padding-right": q.padding_right
                            });
                        $(".awardInfoList .uerItem").each(function () {
                                w += $(this).outerWidth(true)
                            });
                        x.css({
                                width: w * 2 + 10
                            });
                        x.append(x.find("li").clone().css("z-index", 100));
                        var v = x.find("li");
                        v.removeClass("bottomScrollAnima");
                        y = w / u * y;
                        v.css({
                                width: "50%",
                                left: u + 20,
                                "animation-duration": y * 1000 + "ms",
                                "-webkit-animation-duration": y * 1000 + "ms",
                                "-ms-animation-duration": y * 1000 + "ms"
                            });
                        v.eq(0).addClass("bottomScrollAnima");
                        setTimeout(function () {
                                v.eq(1).addClass("bottomScrollAnima");
                            }, y / 2 * 1000);
                        $(this).data("awardSlideOptions", y)
                    })
                } else {
                    if (q === "stop") {
                        $(this).hide();
                        $(this).find("li").eq(1).remove();
                        $(this).removeData("awardSlideOptions")
                    } else {
                        if (q === "wakeup") {
                            $(this).show();
                            var r = $(this).data("awardSlideOptions");
                            var p = $(this).children("ul").find("li");
                            p.eq(1).removeClass("bottomScrollAnima");
                            setTimeout(function () {
                                p.eq(1).addClass("bottomScrollAnima")
                            }, r / 2 * 1000)
                        }
                    }
                }
                return $(this)
            },
        });
        b.Img = {
            MODE_SCALE_FILL: 1,
            MODE_SCALE_WIDTH: 2,
            MODE_SCALE_HEIGHT: 3,
            MODE_SCALE_DEFLATE_WIDTH: 4,
            MODE_SCALE_DEFLATE_HEIGHT: 5,
            MODE_SCALE_DEFLATE_FILL: 6,
            MODE_SCALE_DEFLATE_MAX: 7
        };
        b.Img.isNull = function (p) {
            return (typeof p == "undefined") || (p == null)
        };
        b.Img.optimize = function (t, v, r) {
            var q = new Image();
            q.src = t.src;
            var s = q.width;
            var p = q.height;
            if (b.Img.isNull(s) || s == 0 || b.Img.isNull(p) || p == 0) {
                s = t.width;
                p = t.height
            }
            var u = b.Img.calcSize(s, p, v.width, v.height, v.mode, r);
            t.width = u.width;
            t.height = u.height;
            if (v.display == 1) {
                t.style.display = "inline"
            } else {
                if (v.display == 2) {
                    t.style.display = "none"
                } else {
                    t.style.display = "block"
                }
            }
            return {
                width: t.width,
                height: t.height
            }
        };
        b.Img.calcSize = function (p, w, u, v, r, q) {
            if (isNaN(u)) {
                u = parseFloat(u) * g_rem
            }
            if (isNaN(v)) {
                v = parseFloat(v) * g_rem
            }
            var x = {
                width: p,
                height: w
            };
            if (r == b.Img.MODE_SCALE_FILL) {
                var t = p / u;
                var s = w / v;
                if (t > s) {
                    x.width = u;
                    x.height = w / t
                } else {
                    x.width = p / s;
                    x.height = v
                }
            } else {
                if (r == b.Img.MODE_SCALE_WIDTH) {
                    var t = p / u;
                    x.width = u;
                    x.height = w / t
                } else {
                    if (r == b.Img.MODE_SCALE_HEIGHT) {
                        var s = w / v;
                        x.width = p / s;
                        x.height = v
                    } else {
                        if (r == b.Img.MODE_SCALE_DEFLATE_WIDTH) {
                            var t = p / u;
                            if (t > 1) {
                                x.width = u;
                                x.height = w / t
                            }
                        } else {
                            if (r == b.Img.MODE_SCALE_DEFLATE_HEIGHT) {
                                var s = w / v;
                                if (s > 1) {
                                    x.width = p / s;
                                    x.height = v
                                }
                            } else {
                                if (r == b.Img.MODE_SCALE_DEFLATE_FILL) {
                                    var t = p / u;
                                    var s = w / v;
                                    if (t > s) {
                                        if (t > 1) {
                                            x.width = u;
                                            x.height = w / t
                                        }
                                    } else {
                                        if (s > 1) {
                                            x.width = p / s;
                                            x.height = v
                                        }
                                    }
                                } else {
                                    if (r == b.Img.MODE_SCALE_DEFLATE_MAX) {
                                        if (p > u && w > v) {
                                            var t = p / u;
                                            var s = w / v;
                                            if (t < s) {
                                                x.width = u;
                                                x.height = w / t
                                            } else {
                                                x.width = p / s;
                                                x.height = v
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (!q) {
                x.width = Math.floor(x.width);
                x.height = Math.floor(x.height)
            }
            if (x.width == 0) {
                x.width = 1
            }
            if (x.height == 0) {
                x.height = 1
            }
            return x
        }
    })();
    (function () {
        var g = 0,
            f, h, e, j;

        function k() {
                f = $('<div id="logBox"><div id="log_head"><div id="log_close" class="log_icon">╳</div><div id="log_min" class="log_icon">━</div>' + (typeof g_config !== "undefined" && g_config.test ? '<div id="log_share" class="log_icon">share</div>' : "") + '</div><div id="log_text_wrap"><div id="log_text"></div></div></div>');
                h = f.find("#log_text");
                e = f.find("#log_text_wrap");
                j = $('<div id="log_max" class="hide"><div id="log_max_inner"><div id="log_max_innerText">＋</div></div></div>');
                var n = f.find("#log_head");
                var m = {};
                var l = $("body");
                if (l.length < 0) {
                    return
                }
                l.append(f);
                l.append(j);
                n.on("touchstart", function (o) {
                    o.preventDefault();
                    o.stopPropagation();
                    var p = o.originalEvent.targetTouches[0];
                    m.x = p.pageX;
                    m.y = p.pageY
                }).on("touchmove", function (o) {
                    o.preventDefault();
                    o.stopPropagation();
                    var r = o.originalEvent.targetTouches[0];
                    var q = f.offset().left + r.pageX - m.x;
                    var p = f.offset().top + r.pageY - m.y;
                    m.x = r.pageX;
                    m.y = r.pageY;
                    if (q > -0.2 * f.width() && q + 0.5 * f.width() < $(window).width()) {
                        f[0].style.left = q + "px"
                    }
                    if (p > 0 && p + 0.5 * f.height() < $(window).height()) {
                        f[0].style.top = p + "px"
                    }
                });
                j.on("touchstart", function () {
                    j.hide();
                    f.show();
                    j.removeClass("hasNewErr")
                });
                h.on("touchstart", ".log_flag", function () {
                    var o = $(this).parent();
                    if (o.hasClass("log_line_ellipsis")) {
                        o.removeClass("log_line_ellipsis")
                    } else {
                        o.addClass("log_line_ellipsis")
                    }
                })
            }
    })();
    b.encodeBase64 = function (m) {
        var l, k, h;
        var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var j = 0,
            e = m.length,
            g = "";
        while (j < e) {
                l = m.charCodeAt(j++) & 255;
                if (j == e) {
                    g += f.charAt(l >> 2);
                    g += f.charAt((l & 3) << 4);
                    g += "==";
                    break
                }
                k = m.charCodeAt(j++);
                if (j == e) {
                    g += f.charAt(l >> 2);
                    g += f.charAt(((l & 3) << 4) | ((k & 240) >> 4));
                    g += f.charAt((k & 15) << 2);
                    g += "=";
                    break
                }
                h = m.charCodeAt(j++);
                g += f.charAt(l >> 2);
                g += f.charAt(((l & 3) << 4) | ((k & 240) >> 4));
                g += f.charAt(((k & 15) << 2) | ((h & 192) >> 6));
                g += f.charAt(h & 63)
            }
        return g
    };
    b.initEdit = function (x) {
        var A = x.origin,
            q = x.originDef,
            e = x.originMod,
            w = /\b(editTarget|editRelate)(-\w+?)(-\d+?)?\b/,
            m = {};

        $.each(A, function (C, E) {
                if (!E.showPath) {
                    E.showPath = [];
                    if (q[C].showPath) {
                        for (var D = 0, F = q[C].showPath.length; D < F; D++) {
                            E.showPath.push(1)
                        }
                    }
                }
            });

        function j(D, J) {
                var K = "getImgInfo-" + D;
                if (J) {
                    K = "getImgInfo-rem-" + D
                }
                var G = m[K];
                if (G) {
                    return G
                }
                var F = s(D)[0];
                if (!F) {
                    return
                }
                G = {
                    name: D,
                    css: F.css
                };
                if (F.path) {
                    if (b.getType(F.path[0]) === "array") {
                        G.path = [];
                        for (var C = 0; C < F.path.length; C++) {
                            G.path[C] = b.getSrc(F.path[C][0])
                        }
                    } else {
                        G.path = b.getSrc(F.path[0])
                    }
                }
                var H = J ? parseFloat : parseRemToPx;
                var L = {
                    size: ["width", "height"],
                    pos: ["left", "top"]
                };
                for (var K in L) {
                    var I = L[K];
                    var E = F[K];
                    if (!E) {
                        continue
                    }
                    if (b.getType(E) === "array") {
                        G[I[0]] = [],
                        G[I[1]] = [];
                        $.each(E, function (M, N) {
                            G[I[0]].push(H(N[I[0]]));
                            G[I[1]].push(H(N[I[1]]))
                        })
                    } else {
                        G[I[0]] = H(E[I[0]]);
                        G[I[1]] = H(E[I[1]])
                    }
                }
                m[K] = G;
                return G
            }
        function f(G, D, C) {
                var F = C ? D.defVal : D.val;
                var E = C ? D.defTra : D.tra;
                if (!F) {
                    return
                }
                if (D.from) {
                    G = $(D.from)
                }
                if (D.type !== "color") {
                    if (D.name === "font-size" && !isNaN(Number(F))) {
                        G.css(D.name, (F / 20) + "rem")
                    } else {
                        G.css(D.name, F)
                    }
                } else {
                    F = r(F);
                    if (D.name === "text-shadow") {
                        G.css(D.name, B(t(F, E)))
                    } else {
                        G.css(D.name, t(F, E))
                    }
                }
            }
        function r(F) {
                F = $.trim(F);
                if (/^#[0-9a-fA-f]{3}$/.test(F)) {
                    var C = "#";
                    for (var E = 1; E < 4; E += 1) {
                        var G = F.slice(E, E + 1);
                        C += G + G
                    }
                    F = C
                }
                if (!/^#[0-9a-fA-f]{6}$/.test(F)) {
                    return F
                }
                F = parseInt(F.substring(1), 16);
                var D = ["rgb(", F >> 16, ",", (F & 65280) >> 8, ",", (F & 255), ")"];
                return D.join("")
            }
        function B(C) {
                return C + " -1px -1px 0px, " + C + " 0px -1px 0px, " + C + " 1px -1px 0px, " + C + " 1px 0px 0px, " + C + " 1px 1px 0px, " + C + " 0px 1px 0px, " + C + " -1px 1px 0px, " + C + " -1px 0px 0px"
            }
        function t(D, C) {
                if (typeof C === "undefined" || C == -1) {
                    return D
                }
                return "rgba" + D.substring(D.indexOf("("), D.indexOf(")")) + "," + (C ? C : 0) + ")"
            }
        function s(D) {
                for (var E = 0; E < A.length; E++) {
                    var C = A[E];
                    if (C.name === D) {
                        return [C, q[E]]
                    }
                }
                return [false, false]
            }
        function k(H, F, G, E) {
                var C = {};
                C.from = H;
                C.title = F[1];
                C.limit = F[2];
                C.defSrc = b.getSrc(F[0]);
                var D = G.showPath[E];
                if (typeof D == "number" && D >= 0) {
                    C.showPath = G.showPath;
                    C.showPathIndex = E
                }
                if (F[3]) {
                    C.defSize = F[3]
                }
                return C
            }
        function h(C, D) {
                if (arguments.length == 1) {
                    if (!(D = C.attr("edit_defer_src"))) {
                        return
                    }
                    C.removeAttr("edit_defer_src")
                }
                C.each(function () {
                    if (/img/i.test($(this)[0].nodeName)) {
                        $(this).attr("src", D)
                    } else {
                        $(this).css({
                            "background-image": 'url("' + D + '")',
                            "background-position": "center center",
                            "background-repeat": "no-repeat",
                        }).addClass("hd-game-theBg-fillAuto");
                        (function (E, F) {
                            b.imgReady(F, function () {
                                var J = {
                                    width: $(E).outerWidth(),
                                    height: $(E).outerHeight()
                                };
                                var G = b.Img.calcSize(this.width, this.height, J.width, J.height, b.Img.MODE_SCALE_DEFLATE_FILL);
                                var H = 100 * G.width / J.width;
                                var I = 100 * G.height / J.height;
                                $(E).css("background-size", H + "% " + I + "%")
                            })
                        })(this, D)
                    }
                });
                return C
            }
        function l(D, C, F) {
                var E = D;
                if ($.isArray(D)) {
                    if (typeof C == "undefined") {
                        C = 0
                    }
                    var E = D[C];
                    if (E === undefined) {
                        E = F === undefined ? D[0] : l(F, C)
                    }
                } else {
                    if (E === undefined && F !== undefined) {
                        E = F
                    }
                }
                return E
            }
        function n(I, D, C) {
                var E = I[0],
                    F = I[1],
                    J = C !== undefined;
                if (!D) {
                        D = $(".editTarget-" + E.name)
                    }
                z(E, F, D.not(function () {
                        return $(this).data("hasBindEdit")
                    }));
                var G = (b.getType(F.pos) === "array" && b.getType(F.size) !== "array");
                var H = function (Q, N) {
                        var L = $(N);
                        if (L.data("hasBindEdit")) {
                            return
                        }
                        var O = l(F.size, Q),
                            P = l(F.pos, Q),
                            S = l(E.size, Q, F.size),
                            R = l(E.pos, Q, F.pos);
                        if (S && O) {
                                L.addClass("slaveImg");
                                if (!L.parents().hasClass("imgContainer")) {
                                    L.wrap('<div class="imgContainer absCenter"></div>')
                                }
                                if (!O.disable) {
                                    if (G) {
                                        var M = null;
                                        L.addResizableFn("start", function (T, U) {
                                            M = $(".editTarget-" + E.name).not(this);
                                            if (/n|w/.test(U.axis) && !O.noSyncOffset) {
                                                M.each(function (W, Y) {
                                                    var V = $(this),
                                                        X = V.parents(".ui-wrapper");
                                                    V.data("originalPosition-relative", {
                                                            left: parseFloat(X.css("left")) - U.originalPosition.left,
                                                            top: parseFloat(X.css("top")) - U.originalPosition.top,
                                                        })
                                                })
                                            }
                                        });
                                        L.addResizableFn("resize", function (T, U) {
                                            M.add(M.parents(".ui-wrapper")).css({
                                                width: $(U.element).width(),
                                                height: $(U.element).height()
                                            });
                                            if (/n|w/.test(U.axis) && !O.noSyncOffset) {
                                                M.each(function (W, X) {
                                                    var V = $(this);
                                                    var Y = V.data("originalPosition-relative");
                                                    V.add(V.parents(".ui-wrapper")).css({
                                                        left: U.position.left + Y.left,
                                                        top: U.position.top + Y.top
                                                    })
                                                })
                                            }
                                        });
                                        L.addResizableFn("stop", function (T, U) {
                                            if (!O.noSyncOffset) {
                                                M.each(function (V, W) {
                                                    $(this).removeData("originalPosition-relative").attr("resize", "1")
                                                })
                                            }
                                            M = null
                                        })
                                    }
                                    var K = {
                                        width: O.width,
                                        height: O.height
                                    };
                                    if (P && P.disable) {
                                        K.left = P.left;
                                        K.top = P.top
                                    }
                                    b.moduleSlaveImgResize(L, K);
                                    if (G) {
                                        L.addResizableFn("recover", function () {
                                            var T = $(this).parents(".ui-wrapper");
                                            $(".editTarget-" + E.name).each(function (U, V) {
                                                if (V === L[0]) {
                                                    return
                                                }
                                                var X = $(V).add($(V).parents(".ui-wrapper"));
                                                X.width(T.width()).height(T.height());
                                                var W = l(F.pos, U);
                                                if (W && W.disable) {
                                                    X.css({
                                                        left: W.left,
                                                        top: W.top
                                                    })
                                                }
                                                X.attr("resize", 0)
                                            })
                                        })
                                    }
                                }
                            }
                    };
                J ? H(C, D) : D.each(H);
                D.data("hasBindEdit", true)
            }
        function g(C) {
                return /^_background/.test(C)
            }
        function z(D, H, G) {
                var N = -2,
                    J = null,
                    M = false,
                    E = null,
                    K = H.targetName || true,
                    F = "editTarget-" + D.name;
                if (!H._initModuleLayerArgs) {
                        if (H.css || H.cssAll) {
                            if (H.cssAll) {
                                E = [];
                                $.each(H.cssAll, function (O, P) {
                                    if (s(P)[1].css) {
                                        E = E.concat(s(P)[1].crrCssArg)
                                    }
                                })
                            } else {
                                E = H.crrCssArg
                            }
                            M = !E[0].targetName ? true : E[0].targetName;
                            if (H.cssEdit == 1 && H.edit !== "_backgroundAll") {
                                var C = E;
                                $$(function () {
                                    parent.Edit.addEditBtn(E[0].targetName || "编辑背景", "." + F, function () {
                                        parent.Edit.Css.showCssByGame.call($("." + F), "." + F, C);
                                        parent.operateFlagList[21] = true;
                                        return false
                                    })
                                });
                                M = false,
                                E = null
                            }
                        }
                        if (H.edit !== undefined) {
                            if (typeof H.edit === "number") {
                                N = H.edit
                            } else {
                                if (g(H.edit)) {
                                    !x.bgList && (x.bgList = []);
                                    var L = k(".editTarget-" + D.name + ",.editRelate-" + D.name, H.path, D, 0);
                                    L._flag = -1;
                                    if (H.edit === "_backgroundAll" && E) {
                                        L._cssArg = E;
                                        L._flag = -5;
                                        M = false,
                                        E = null
                                    }
                                    if (G.closest(".home,.gameBgBox,.gameBgBox2").length > 0 ) {
                                        x.bgList.push(L)
                                    } else {
                                        $.extend(L, {
                                            title: "背景图片",
                                            size: "640px*1600px",
                                            limit: "5000k",
                                            defSize: "640px*1600px",
                                        });
                                        $$(function () {
                                            b.saveModuleLayerImg([L]);
                                            parent.Edit.addEditBtn(H.targetName || "编辑背景", ".editTarget-" + D.name, function () {
                                                hg.fire("editBackground", L, true);
                                                parent.Edit.showEditByGame(L._flag, "", [L]);
                                                return false
                                            })
                                        })
                                    }
                                    G.data("hasBindEdit", true);
                                    return
                                }
                            }
                        } else {
                            K = false
                        }
                        if (H.text) {
                            K = !H.text[0].targetName ? true : H.text[0].targetName;
                            D.text = $.extend(true, [], H.text, D.text);
                            if (H.text[0].type == 1) {
                                K = false
                            }
                            if (D.text.filter(function (O) {
                                return O.type == 2
                            }).length > 0) {
                                N = 0;
                                F = function () {
                                    p.call(this, D.text, H.text, D.name)
                                }
                            }
                        }
                        H._initModuleLayerArgs = [N, F, J, M, E, K]
                    }
                if (H.edit !== undefined || H._initModuleLayerArgs[4]) {
                        G.hdTrigger("hd-editUpload-initModuleLayer", [H]);
                        b.initModuleLayer.apply(b, [G].concat(H._initModuleLayerArgs))
                    }
            }
        function p(D, E, C) {
                var F = this;
                parent.Edit.editPoup.show({
                    className: "editText",
                    title: E[0].allTitel || "编辑内容",
                    info: function (I, G, J) {
                        $.each(D, function (O, R) {
                            if (R.type != 2) {
                                return
                            }
                            var Q = E[O];
                            !Q.from && (Q.from = ".editTarget-" + C + ",.editRelate-" + C);
                            var P = R.val;
                            var L = Q.numLimit;
                            if (b.getType(L) != "array") {
                                Q.numLimit = L = [0, L]
                            }
                            var S = $(Q.from);
                            var M = '<div class="editLine">';
                            if (R.shouInput) {
                                M += K((Q.title || "文字内容") + "：", P)
                            } else {
                                M += H((Q.title || "文字内容") + "：", P, O, R.txtopt)
                            }
                            M += "</div>";
                            I.append(M = G.$(M));
                            var N = M.find(".newTextArea .activeInput");
                            N.on("blur.text", function () {
                                var T = $(this).val();
                                if ($.trim(T).length < (L[0] + 1)) {
                                    $(this).addClass("inputErr");
                                    $(this).parent().find(".editErr").show().text("输入的文字不可少于" + (L[0] + 1) + "个！");
                                    S.text(R.val)
                                }
                            }).on("focus.text", function () {
                                $(this).removeClass("inputErr").siblings(".editErr,.editErr2").hide()
                            }).on("keyup.text", function () {
                                var T = {};
                                T.str = $(this).val();
                                T.str = T.str.substr(0, L[1]);
                                T.len = $.trim($(this).val()).length;
                                if (T.len > L[1]) {
                                    $(this).val(T.str)
                                }
                                $(this).trigger("text-beforeSave", [T, R, Q]);
                                if (T.len > L[0] && (L[1] === undefined || T.len <= L[1])) {
                                    R.val = T.str;
                                    S.text(R.val)
                                }
                            }).on("input.text", function () {
                                parent.changeIsSave()
                            });
                            if (R.txtopt) {
                                N.show().val(R.val)
                            } else {
                                N.hide()
                            }
                            if (!R.shouInput) {
                                M.find("#editWriteDef_" + O + "").on("click", function () {
                                    if (R.txtopt == 1) {
                                        parent.changeIsSave()
                                    }
                                    R.txtopt = 0;
                                    S.text(Q.val);
                                    N.hide().removeClass("inputErr").val(Q.val);
                                    N.siblings(".editErr,.editErr2").hide()
                                });
                                M.find("#editWriteSelf_" + O + "").on("click", function () {
                                    if (R.txtopt == 0) {
                                        parent.changeIsSave()
                                    }
                                    R.txtopt = 1;
                                    N.show().val(R.val);
                                    S.text(R.val)
                                })
                            }
                        });
                        $(F).hdTrigger("hd-editUpload-textEdit", [G, D, E]);

                        function K(M, L) {
                            return '<div class="answerLine clearfix"><div class="floatLeft newTextT" style="width: 70px; margin-top: 7px" >' + M + '</div><div style="width: 320px;" class="floatLeft"><div class="newTextArea"><input type="text" class="input scrollBox activeInput" style="width: 300px;height: 32px; padding-left: 5px;" value="' + b.encodeHtml(L) + '" ' + 'disabled><div style="color:#888; padding-top: 5px;">确认发布后无法修改，请认真输入！</div><div class="editErr hide" style="color: red;margin-top: 10px;">输入文字不能为空</div><div class="editErr2 hide" style="color: red; margin-top: 10px; display: none;">输入仅限中文字母跟数字</div></div></div></div>'
                        }
                        function H(R, P, N, L) {
                            var Q = b.encodeHtml(P);
                            var M = L ? "checked" : "";
                            var O = L ? "" : "checked";
                            return '<div class="answerLine clearfix"><div class="floatLeft newTextT" style="width: 100px;">' + R + '</div><div class="floatLeft" style="width: 320px;"><div><input id="editWriteDef_' + N + '" type="radio" name="theRealOnly"' + O + '><label for="editWriteDef_' + N + '" style="height: 16px;line-height: 16px;">默认</label><input id="editWriteSelf_' + N + '" type="radio" name="theRealOnly"' + M + '><label for="editWriteSelf_' + N + '" style="height: 16px;line-height: 16px;">自定义</label></div><div class="newTextArea" style="margin-top: 12px;"><textarea class="input scrollBox activeInput" style="width:300px;height:100px;padding:5px;margin-top:6px;">' + Q + '</textarea><div class="editErr hide" style="color: red;margin-top: 10px;">输入文字不可少于10个！</div><div class="editErr2 hide" style="color: red; margin-top: 10px; display: none;">输入仅限中文</div></div></div></div>'
                        }
                    },
                });
                return false
            }
                o()

        function u(C, F) {
                var E = C.attr("class").match(w),
                    D;
                if (E) {
                        D = s(E[2].slice(1));
                        if (D[0] && D[1]) {
                            F && F(D)
                        }
                    }
            }
        function o() {
                $.each(A, function (D, C) {
                    v(C, q[D], $(".editTarget-" + C.name))
                })
            }
        function y(C, D) {
                u(C, function (E) {
                    D === undefined && (D = 0);
                    v(E[0], E[1], C, D)
                })
            }
        function v(G, M, L, N) {
                var H = N !== undefined,
                    D = ".editTarget-" + G.name + ",.editRelate-" + G.name,
                    E, P, I, F, J, K, O;
                if (H && L.length == 0) {
                        return false
                    }
                if (g(M.edit)) {
                        L.addClass("hd-Special-bgImgInfo")
                    }
                J = function (Q) {
                        var R = function (U, V) {
                            var T = l(G.pos, U, M.pos),
                                S = l(G.size, U, M.size);
                            if (M.pos && T && T.top && T.left) {
                                    $(V).css({
                                        top: T.top,
                                        left: T.left
                                    }).addClass("abs")
                                }
                            if (M.size && S && S.width && S.height) {
                                    $(V).css({
                                        width: S.width,
                                        height: S.height
                                    })
                                }
                        };
                        H ? R(N, Q) : Q.each(R)
                    };
                J(L);
                if (G.path) {
                        F = function (Q, S) {
                            var R;
                            if (Q.length > 0) {
                                R = b.getJqSrc(Q)
                            }
                            return R || S || ""
                        };
                        P = ".editRelate-" + G.name;
                        K = function (R, S, Q) {
                            if (R.length == 0) {
                                return
                            }
                            if ((G.showPath[Q] === 0)) {
                                R.attr("edit_store_src", S);
                                return
                            }
                            if (M.deferPath) {
                                R.attr("edit_defer_src", S)
                            } else {
                                h(R, S)
                            }
                        };
                        if (b.getType(G.path[0]) === "array") {
                            if (H) {
                                E = L.attr("class").match(w);
                                if (E && E[2] == "-" + G.name) {
                                    E[3] && (I = parseInt(E[3].slice(1)));
                                    var C = F($(".editTarget-" + G.name + (isNaN(I) ? "" : "-" + I)));
                                    isNaN(I) && (I = 0);
                                    !C && (C = b.getSrc(G.path[I][0]));
                                    K(L, C, I)
                                }
                            } else {
                                $.each(G.path, function (R, U) {
                                    var T = b.getSrc(U[0]);
                                    var Q = "editTarget-" + G.name;
                                    var S = L;
                                    if (R !== 0) {
                                        Q = "editTarget-" + G.name + "-" + R;
                                        P = ".editRelate-" + G.name + "-" + R;
                                        S = $("." + Q)
                                    }
                                    if (S.length == 0) {
                                        $("body").append('<input class="' + Q + '" type="hidden" value="' + T + '">')
                                    } else {
                                        R !== 0 && J(S)
                                    }
                                    K(S.add(P), T, R)
                                })
                            }
                        } else {
                            if (H) {
                                K(L, F($(".editTarget-" + G.name), b.getSrc(G.path[0])), 0)
                            } else {
                                K(L.add(P), b.getSrc(G.path[0]), 0)
                            }
                        }
                    }
                if (G.css) {
                        O = function (S, T, R) {
                            var Q;
                            if (H) {
                                if (!L.is(S)) {
                                    return
                                }
                                Q = L
                            } else {
                                Q = $(S)
                            }
                            f(Q, T, R)
                        };
                        $.extend(true, M.css, G.css);
                        $.each(M.css, function (Q, R) {
                            if (!R.from) {
                                R.from = D
                            }
                            if (R.css) {
                                $.each(R.css, function (T, S) {
                                    if (!S.from) {
                                        S.from = R.from
                                    }
                                    O(S.from, S, S.opt === 0)
                                })
                            } else {
                                O(R.from, R, R.opt === 0)
                            }
                        })
                    }
                if (G.text) {
                        $.each(G.text, function (R, T) {
                            var Q = M.text[R],
                                S;
                            !Q.from && (Q.from = D);
                            if (H) {
                                    if (!L.is(Q.from)) {
                                        return
                                    }
                                    S = L
                                } else {
                                    S = $(Q.from)
                                }
                            if (Q.type == 2) {
                                    var U = Fai.encodeHtml(T.txtopt ? T.val : Q.val);
                                    S.html(U)
                                } else {
                                    S.val(T.value)
                                }
                        })
                    }
                return true
            }
        x.getImgInfo = j;
        x.getInfoByName = s;
        x.getRgba = t;
        x.initEdit = o;
        x.initByElem = y;
        x.cache = m;
        x.setJqSrc = h;
        delete x.originMod;
        return x
    };
    b.initSound = function (g, h, f) {
        if (f && h) {
            $.each(f, function (l, m) {
                h[l].path = m.path;
            })
        }
        if (g && h) {
            $.each(g, function (m, n) {
                var l = h[m];
                if (m !== 0 && n.optFlag === 1) {
                    n.optFlag = 2
                }
                n.path = b.getSrc(n.path);
                l.path = b.getSrc(l.path)
            })
        }
        var e = {};
        var k = LF.sound.webAudioEnabled && LF.global.webAudio;

        var j = {
            list: g,
            listDef: h,
            allowPlay: true,
            setPlayPower: function (m, n) {
                if (typeof m == "boolean") {
                    this.allowPlay = m
                }
                var l = e[m];
                if (!l) {
                    return this
                }
                l._allowPlay = n
            },
            play: function (p, r, o) {
                if (!this.allowPlay) {
                    return this
                }
                if (g && b.getType(p) === "number") {
                    var n = p === 0 ? 1 : 3;
                    if (g[p].optFlag === n) {
                        return this
                    }
                }
                if (p !== 0 && g && g[0].optFlag !== 1 && !k) {
                    return this
                }
                var m = e[p];
                if (!m) {
                    return this
                }
                if (!m._allowPlay) {
                    return
                }
                m.play(r, o);
                if (!m.playing) {
                    try {
                        wx.checkJsApi({
                            jsApiList: ["checkJsApi"],
                            success: function () {
                                m.play(r, o);
                                if (m.complete) {
                                    m.pauseCallBack.fire(m, p);
                                    m.pauseCallBack = null
                                } else {
                                    if (m.pauseCallBack) {
                                        m.pauseCallBack.fire(m, p);
                                        m.pauseCallBack = null
                                    }
                                }
                            }
                        })
                    } catch (q) {
                    }
                } else {
                    m.pauseCallBack.fire(m, p)
                }
                return this
            },
            readyPlay: function (p, s, n) {
                try {
                    var m = e[p];
                    if (!m) {
                        return this
                    }
                    var o = this;
                    o.play(p, s, n);
                    o.onReady(p, function () {
                        !m.playing && o.play(p, s, n)
                    })
                } catch (q) {
                }
            },
            pause: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                l.stop();
                n && (l.pauseCallBack.add(n));
                return this
            },
            pauseAll: function () {
                var l = null;
                for (var m in e) {
                    l = e[m];
                    if (l) {
                        l.stop()
                    }
                }
                return this
            },
            load: function (q, m, n) {
                if (e[m]) {
                    return this
                }
                var l = null,
                    p = k;
                typeof n !== "undefined" && (p = n);
                if (/.wav$/.test(q) && b.isIPhone()) {
                        p = false
                    }
                if (p) {
                        l = new LF.webAudio()
                    } else {
                        l = new LF.media();
                        try {
                            l.data = new Audio()
                        } catch (o) {
                            console.warn("ReferenceError: Can't find variable: Audio");
                            l.data = {}
                        }
                        l.data.loop = false;
                        l.data.autoplay = false
                    }
                l._type = "audio";
                if (q) {
                        l.load(q)
                    }
                l.readyCallBack = $.Callbacks("unique memory");
                l.pauseCallBack = $.Callbacks("unique memory");
                l.addEventListener(LF.event.COMPLETE, function (r) {
                        l.complete = true;
                        if (l.readyCallBack) {
                            l.readyCallBack.fire(l);
                            l.readyCallBack = null
                        }
                        l.pauseCallBack.fire(l, m);
                    });
                l._allowPlay = true;
                e[m] = l;
                return this
            },
            onReady: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                if (l.complete) {
                    n(l)
                } else {
                    l.readyCallBack.add(n)
                }
                return this
            },
            setVolume: function (m, n) {
                var l = e[m];
                if (!l) {
                    return this
                }
                if (l.soundType == "LMedia") {
                    l.data.volume = n
                } else {
                    if (l.soundType == "LWebAudio") {
                        l.volume = n
                    }
                }
                return this
            },
            cache: e,
        };
        j.load(_resRoot + "/button.mp3", "startButton");
        if (g) {
            $.each(g, function (l, m) {
                var o = m.path;
                if (l === 0) {
                    j.load(o, l, false);
                    if (j.cache["0"]) {
                        var n = j.cache["0"].data;
                        if (Audio && n instanceof Audio) {
                            document.getElementById("pageMusic").appendChild(n)
                        }
                    }
                } else {
                    j.load(o, l)
                }
            });
            j.cache["0"].data.addEventListener("play", function () {
                $(function () {
                    if ($(".soundIcon").length <= 0) {
                        b.appendMusicIcon()
                    }
                    $(".soundIcon").removeClass("soundIconOff")
                })
            }, false);
            j.cache["0"].data.addEventListener("pause", function () {
                $(function () {
                    $(".soundIcon").addClass("soundIconOff")
                })
            }, false)
        }
        return j
    };
    b.initCallBack = function (g, e) {
        var f = new Fai.CallBack();
        g = g || {};
        $.each(f.getApiKeys(), function (j, h) {
            g[h] = function () {
                var k = f[h].apply(f, arguments);
                return k === f ? this : k
            }
        });
        if (typeof e !== "undefined") {
            f.register(e)
        }
        return g
    };


    b.initWxConfig = function (n) {
        b.wxConfigArg = {
        };
        l({
            haveAward: true,
            plInfo: n.plInfo,
        });
        wx.config({
            debug: false,
            appId: n.jsSdkAppid,
            timestamp: n.timestamp,
            nonceStr: n.nonce_str,
            signature: n.signature,
            jsApiList: ["checkJsApi", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "hideMenuItems", "showMenuItems", "hideAllNonBaseMenuItem", "showAllNonBaseMenuItem", "translateVoice", "startRecord", "stopRecord", "onRecordEnd", "playVoice", "pauseVoice", "stopVoice", "uploadVoice", "downloadVoice", "chooseImage", "previewImage", "uploadImage", "downloadImage", "getNetworkType", "openLocation", "getLocation", "hideOptionMenu", "showOptionMenu", "closeWindow", "scanQRCode", "chooseWXPay", "openProductSpecificView", "addCard", "chooseCard", "openCard"]
        });
        wx.ready(function () {
          wx.hideMenuItems({
              menuList: ["menuItem:copyUrl"]
          })
            wx.hideMenuItems({
                menuList: ["menuItem:copyUrl"]
            });
        });
        wx.ready(function () {
            var o = window.navigator.userAgent.indexOf("iPhone") > -1 || window.navigator.userAgent.indexOf("iPad") > -1 || window.navigator.userAgent.indexOf("iPod") > -1;
            var p = window.navigator.userAgent.indexOf("Android") > -1;
            var q = "unknown";
            if (o) {
                q = "apple"
            } else {
                if (p) {
                    q = "android"
                }
            }

        });
    };

    b.initJsFoot = function (e) {
        $("body").data("hd-initHdGameJsfootArg", {
            soundIcon_l: e.soundIcon_l,
            soundIcon_t: e.soundIcon_t
        });
        $(function () {

            var p = b.decodeHtml(e.hostLink).replace("http://", "");
            var q = b.decodeHtml(e.menuLink).replace("http://", "");
            var j = $(".menuName,.menuLinkBtn");

            if (e.fromFav) {
                $("#resule-gift-sucImg").data("openCode", e.fromFav);
                showAwardDetail4Draw()
            }

            $("#resule-gift-sucImg, .clickHere, .seeAwardDetail").on("touchstart", function (r) {
              location.href="/myreward";
            });


            // if (hg.sound.list && hg.sound.list.length > 0) {
            //     b.appendMusicIcon();
            // }
            $("#resule-gift-sucImg").css({
                "margin-left": "auto",
                "margin-top": "1.6rem",
                "margin-right": "auto",
                "margin-bottom": "1.6rem",
            });
            $(".gameBgBox .soundIcon").css("z-index", "100");
            $(".soundIcon").addClass("soundIconPlay");
            var m = "soundPause|7020498|344|tryPlay_15801086";
            $(".soundIcon").on("touchstart", function () {
                event.stopPropagation();
                event.preventDefault();
                var r = $(".soundIcon");
                if (!r.hasClass("soundIconOff")) {
                    hg.sound.allowPlay = false;
                    hg.sound.pauseAll();
                    b.setLocalStorage(m, "-")
                } else {
                    hg.sound.allowPlay = true;
                    hg.sound.readyPlay(0, 0, "loop");
                    b.removeLocalStorage(m)
                }
            });
            // if (b.getLocalStorage(m)) {
            //     hg.sound.allowPlay = false;
            //     hg.sound.pauseAll()
            // }
            $("#ruleImg").addClass("ruleImgAnimate");
            $(".home").on("touchend", "#startBtnImg,#titleImg,#homeBg", function (r) {
                r.preventDefault()
            });
            var k = function (r) {
                if (!startBtnAjax.call(this, r)) {
                    return
                }
                // hg.sound.play("startButton");

            };
            $("#startBtnImg,.startBtnImg").each(function (r, t) {
                var s = $(this).data("tapEventType") || "touchend";
                $(this).on(s, k)
            });
            var n = function () {
                var r = $(".home");
                if (r.length == 0 || r.is(":visible")) {
                    startBtnDelay()
                }
            };

        });
    };

    b.getSrc = function (e) {
        return e.replace("*_resRoot*", _resRoot)
    };
    b.getJqSrc = function (f) {
        var h = "";
        if (f.attr("src")) {
            h = f.attr("src")
        } else {
            if (f.val()) {
                h = f.val()
            } else {
                if (f.css("background-image")) {
                    var g = f.css("background-image");
                    var e = g.match(/url\("(.+)"\)/) || g.match(/url\('(.+)'\)/) || g.match(/url\((.+)\)/);
                    if (e) {
                        h = e[1]
                    }
                }
            }
        }
        return h
    };
    b.setCookie = function (f, g, e) {
        var h = new Date();
        h.setDate(h.getDate() + e);
        document.cookie = f + "=" + escape(g) + ((e == null) ? "" : ";expires=" + h.toGMTString())
    };
    b.getCookie = function (e) {
        if (document.cookie.length > 0) {
            c_start = document.cookie.indexOf(e + "=");
            if (c_start != -1) {
                c_start = c_start + e.length + 1;
                c_end = document.cookie.indexOf(";", c_start);
                if (c_end == -1) {
                    c_end = document.cookie.length
                }
                return unescape(document.cookie.substring(c_start, c_end))
            }
        }
        return ""
    };
    b.setLocalStorage = function (f, g, e) {
        if (!localStorage) {
            if (e) {
                b.setCookie(f, g, e)
            }
            return
        }
        localStorage.setItem(f, g)
    };
    b.getLocalStorage = function (f, e) {
        if (!localStorage) {
            if (e) {
                return b.getCookie(f)
            }
            return ""
        }
        return localStorage.getItem(f)
    };
    b.removeLocalStorage = function (f, e) {
        if (!localStorage) {
            if (e) {
                b.setCookie(f, "", -1)
            }
            return
        }
        localStorage.removeItem(f)
    };
    b.refresh = function () {
        window.location.reload()
    };
    b.noLoadingRefresh = function () {
        window.location.href = document.URL.indexOf("noLoading") >= 0 ? document.URL : (document.URL + (document.URL.indexOf("?") >= 0 ? "&" : "?") + "noLoading=fff")
    };
    b.isIPhone = function () {
        return window.navigator.userAgent.indexOf("iPhone") !== -1
    };
    b.IsPC = function () {
        var e = navigator.userAgent;
        var h = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"];
        var f = true;
        for (var g = 0; g < h.length; g++) {
            if (e.indexOf(h[g]) > 0) {
                f = false;
                break
            }
        }
        return f
    };
    b.getType = function (e) {
        return Object.prototype.toString.call(e).match(/\[object\s(\w+)]/)[1].toLowerCase()
    };

    (function (e) {
        var g;
        e.watch = f();

        function f() {
            function h(j, m, k, l) {
                if (!c(k)) {
                    return
                }
                k(m, m);
                return h.add(j, k, l)
            }
            h.add = function (k, l, m) {
                if (!g || !c(l)) {
                    return
                }
                var j;
                var n = function (p, o) {
                    if (p.$evalAsync && p.$watch) {
                        j = p.$watch(k, l)
                    } else {
                        j = {
                            uw: function () {
                                p.stop(k)
                            },
                            check: p(k, l),
                        }
                    }
                };
                if ($.type(m) == "boolean" && m) {
                    g().invoke(["watch", n])
                } else {
                    if (typeof m == "object" && m) {
                        n(m)
                    } else {
                        if (g) {
                            g().invoke(["$rootScope", function (o) {
                                n(o)
                            }])
                        }
                    }
                }
                return j
            };
            h.bind = function () {
                var j = Array.prototype.slice.call(arguments);
                var k = false;
                if (!$.isArray(j[0])) {
                    k = j.shift();
                    if (g) {
                        if ($.type(k) == "string") {
                            k = $$(k).data("$scope")
                        } else {
                            if ($.type(k) == "function") {
                                k = k()
                            }
                        }
                    }
                }
                $.each(j, function (m, n) {
                    n.$replace = n[n.length > 2 ? 1 : 0];
                    n.$regExp = new RegExp("\\{" + n[0] + "}", "g")
                });
                var l = function (n, o) {
                    var m = n;
                    $.each(j, function (r, s) {
                        n = n.replace(s.$regExp, s.$replace);
                        m = m.replace(s.$regExp, "conf[" + r + "][" + (s.length - 1) + "]")
                    });
                    try {
                        var q = (new Function("conf", "return " + m + ";"))(j)
                    } catch (p) {
                        throw p
                    }
                    return h(n, q, o, k)
                };
                l.add = function (m, n) {
                    $.each(j, function (o, p) {
                        m = m.replace(p.$regExp, p.$replace)
                    });
                    return h.add(m, n, k)
                };
                return l
            };
            h.$new = f;
            return h
        }
    })(b);
    function c(e) {
        return b.getType(e) == "function"
    }
    function a(e) {
        return b.getType(e) == "object"
    }
})(HdGame);

HdGame.appendMusicIcon = function () {
    var a = $("body").data("hd-initHdGameJsfootArg");
    if (!a) {
        return
    }
    $(".home").add(".gameBgBox").append('<div class="' + ("soundIconOff ") + "soundIcon" + (hg.sound.list[0].optFlag != 1 ? "" : " soundIconHide") + '" style="z-index:100"></div>');
    $('.home .soundIcon:not(".soundIconPlay")').css({
        left: a.soundIcon_l,
        top: a.soundIcon_t
    })
    $("body").removeData("hd-initHdGameJsfootArg")
};

(function (c) {
    function f(l, k) {
        var j, h, g;
        try {
            j = l.toString().split(".")[1].length
        } catch (n) {
            j = 0
        }
        try {
            h = k.toString().split(".")[1].length
        } catch (n) {
            h = 0
        }
        g = Math.pow(10, Math.max(j, h));
        return (l * g + k * g) / g
    }
    function d(l, k) {
        var j, h, g, p;
        try {
            j = l.toString().split(".")[1].length
        } catch (o) {
            j = 0
        }
        try {
            h = k.toString().split(".")[1].length
        } catch (o) {
            h = 0
        }
        g = Math.pow(10, Math.max(j, h));
        p = (j >= h) ? j : h;
        return Number(((l * g - k * g) / g).toFixed(p))
    }
    function e(k, h) {
        var g = 0,
            l = k.toString(),
            j = h.toString();
        try {
                g += l.split(".")[1].length
            } catch (n) {}
        try {
                g += j.split(".")[1].length
            } catch (n) {}
        return Number(l.replace(".", "")) * Number(j.replace(".", "")) / Math.pow(10, g)
    }
    function b(k, j) {
        var m = 0,
            l = 0,
            h, g;
        try {
                m = k.toString().split(".")[1].length
            } catch (n) {}
        try {
                l = j.toString().split(".")[1].length
            } catch (n) {}
        h = Number(k.toString().replace(".", ""));
        g = Number(j.toString().replace(".", ""));
        return (h / g) * Math.pow(10, l - m)
    }
    function a(g) {
        return function (j, h) {
            if (isNaN(j) || isNaN(h)) {
                return NaN
            }
            return g(j, h)
        }
    }
    c.Num = {
        add: a(f),
        sub: a(d),
        mul: a(e),
        div: a(b),
    };
    c.foreiganNum = function (k) {
        var h = (k + "").split(".");
        k = parseInt(h[0]);
        var g = [],
            j = 0;
        k = (k || 0).toString().split("");
        for (var l = k.length - 1; l >= 0; l--) {
                j++;
                g.unshift(k[l]);
                if (!(j % 3) && l != 0) {
                    g.unshift(",")
                }
            }
        var m = g.join("");
        if (h.length == 2) {
                m = m + "." + h[1]
            }
        return m
    };
    c.getTrueHeight = function () {
        var h = $(window).height() / $(window).width() < 1.575;
        if (!h) {
            return false
        }
        var g = $(window).width() * 1.575;
        return g
    }
})(HdGame);
